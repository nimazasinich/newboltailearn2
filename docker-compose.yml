version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: persian-legal-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - SERVER_PORT=3000
      - SQLITE_PATH=/data/app.sqlite
      - DATABASE_PATH=/data/app.sqlite
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_here_change_in_production}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost}
    volumes:
      - sqlite_data:/data
      - app_logs:/app/logs
      - node_modules_be:/app/node_modules
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    profiles:
      - prod
      - dev
      - nginx
      - gpu

  # Frontend service (Node.js serve)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: persian-legal-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
    ports:
      - "80:3000"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    profiles:
      - prod

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: persian-legal-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docs:/usr/share/nginx/html:ro
      - app_logs:/var/log/nginx
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    profiles:
      - nginx

  # Development backend with hot reload
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: persian-legal-backend-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3000
      - SERVER_PORT=3000
      - SQLITE_PATH=/data/app.sqlite
      - DATABASE_PATH=/data/app.sqlite
      - JWT_SECRET=dev_jwt_secret
      - CORS_ORIGIN=http://localhost:5173
    volumes:
      - ./server:/app/server:ro
      - ./database.sqlite:/app/database.sqlite:ro
      - sqlite_data:/data
      - app_logs:/app/logs
      - node_modules_be:/app/node_modules
    ports:
      - "3000:3000"
    command: ["node", "--watch", "server/index.js"]
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    profiles:
      - dev

  # Development frontend with Vite
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: persian-legal-frontend-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3000
      - VITE_WS_URL=ws://localhost:3000
    volumes:
      - .:/app:ro
      - node_modules_fe:/app/node_modules
    ports:
      - "5173:5173"
    command: ["npm", "run", "dev"]
    depends_on:
      backend-dev:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    profiles:
      - dev

  # GPU-enabled backend for AI/ML workloads
  backend-gpu:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: persian-legal-backend-gpu
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - SERVER_PORT=3000
      - SQLITE_PATH=/data/app.sqlite
      - DATABASE_PATH=/data/app.sqlite
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_here_change_in_production}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost}
      - CUDA_VISIBLE_DEVICES=0
    volumes:
      - sqlite_data:/data
      - app_logs:/app/logs
      - node_modules_be:/app/node_modules
    ports:
      - "3000:3000"
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    profiles:
      - gpu

volumes:
  sqlite_data:
    driver: local
  app_logs:
    driver: local
  node_modules_be:
    driver: local
  node_modules_fe:
    driver: local

networks:
  default:
    name: persian-legal-network
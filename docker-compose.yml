version: '3.9'

services:
  # Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: runtime
    container_name: persian-legal-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3000
      DATABASE_PATH: /data/database.sqlite
      SQLITE_PATH: /data/database.sqlite
      JWT_SECRET: ${JWT_SECRET:-change_this_in_production_please}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
    volumes:
      - sqlite_data:/data
      - app_logs:/logs
    networks:
      - app_network
    profiles:
      - prod
      - dev
      - nginx
      - gpu
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Frontend Service (Production with Node serve)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
      args:
        VITE_API_URL: ${VITE_API_URL:-/api}
        VITE_WS_URL: ${VITE_WS_URL:-/}
    container_name: persian-legal-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-80}:3000"
    environment:
      NODE_ENV: production
    networks:
      - app_network
    profiles:
      - prod
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

  # Frontend Service (Development with Vite)
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: persian-legal-frontend-dev
    restart: unless-stopped
    ports:
      - "${FRONTEND_DEV_PORT:-5173}:5173"
    environment:
      NODE_ENV: development
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3000}
      VITE_WS_URL: ${VITE_WS_URL:-ws://localhost:3000}
    volumes:
      - ./src:/app/src:ro
      - ./public:/app/public:ro
      - ./index.html:/app/index.html:ro
      - ./vite.config.ts:/app/vite.config.ts:ro
      - node_modules_fe:/app/node_modules
    networks:
      - app_network
    profiles:
      - dev
    depends_on:
      - backend
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: persian-legal-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-8080}:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./dist:/usr/share/nginx/html:ro
    networks:
      - app_network
    profiles:
      - nginx
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: persian-legal-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    profiles:
      - prod
      - dev
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  # GPU-enabled Backend (Optional for TensorFlow.js)
  backend-gpu:
    extends: backend
    container_name: persian-legal-backend-gpu
    profiles:
      - gpu
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3000
      DATABASE_PATH: /data/database.sqlite
      SQLITE_PATH: /data/database.sqlite
      JWT_SECRET: ${JWT_SECRET:-change_this_in_production_please}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      CUDA_VISIBLE_DEVICES: 0
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  sqlite_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/server/database
  app_logs:
    driver: local
  redis_data:
    driver: local
  node_modules_be:
    driver: local
  node_modules_fe:
    driver: local
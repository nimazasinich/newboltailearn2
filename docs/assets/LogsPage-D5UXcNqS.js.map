{"version":3,"file":"LogsPage-D5UXcNqS.js","sources":["../../src/services/monitoring.ts","../../src/components/ui/PageSkeleton.tsx","../../src/components/ui/DataTable.tsx","../../src/components/LogsPage.tsx"],"sourcesContent":["import { apiRequest, API_ENDPOINTS } from '../lib/api-config';\r\n\r\n// Monitoring interfaces\r\nexport interface SystemMetrics {\r\n  cpu: number;\r\n  memory: {\r\n    used: number;\r\n    total: number;\r\n    percentage: number;\r\n  };\r\n  process_memory: {\r\n    used: number;\r\n    total: number;\r\n    percentage: number;\r\n  };\r\n  uptime: number;\r\n  system_uptime: number;\r\n  platform: string;\r\n  arch: string;\r\n  timestamp: string;\r\n  active_training: number;\r\n}\r\n\r\nexport interface TrainingStatus {\r\n  active: number;\r\n  total: number;\r\n  completed: number;\r\n  failed: number;\r\n  success_rate: string;\r\n}\r\n\r\nexport interface DatasetStatus {\r\n  available: number;\r\n  downloading: number;\r\n  total: number;\r\n}\r\n\r\nexport interface SystemActivity {\r\n  [level: string]: number;\r\n}\r\n\r\nexport interface MonitoringData {\r\n  cpu: number;\r\n  memory: {\r\n    used: number;\r\n    total: number;\r\n    percentage: number;\r\n  };\r\n  process_memory: {\r\n    used: number;\r\n    total: number;\r\n    percentage: number;\r\n  };\r\n  uptime: number;\r\n  system_uptime: number;\r\n  platform: string;\r\n  arch: string;\r\n  timestamp: string;\r\n  active_training: number;\r\n  training: TrainingStatus;\r\n  datasets: DatasetStatus;\r\n  activity: SystemActivity;\r\n}\r\n\r\nexport interface HealthCheck {\r\n  status: 'healthy' | 'degraded' | 'unhealthy';\r\n  timestamp: string;\r\n  uptime: number;\r\n  environment: string;\r\n  database: 'connected' | 'disconnected';\r\n  version: string;\r\n  components?: {\r\n    database: boolean;\r\n    redis?: boolean;\r\n    storage: boolean;\r\n    external_apis: boolean;\r\n  };\r\n}\r\n\r\nexport interface LogEntry {\r\n  id: number;\r\n  level: 'info' | 'warning' | 'error' | 'debug';\r\n  category: string;\r\n  message: string;\r\n  metadata?: string;\r\n  timestamp: string;\r\n  model_name?: string; // For training logs\r\n  model_id?: number;\r\n  epoch?: number;\r\n  loss?: number;\r\n  accuracy?: number;\r\n}\r\n\r\n// Monitoring API functions\r\nexport async function getSystemMetrics(): Promise<MonitoringData> {\r\n  const response = await apiRequest(API_ENDPOINTS.MONITORING);\r\n  return response.json();\r\n}\r\n\r\nexport async function getHealthCheck(): Promise<HealthCheck> {\r\n  const response = await apiRequest(API_ENDPOINTS.HEALTH);\r\n  return response.json();\r\n}\r\n\r\nexport async function getPerformanceMetrics(): Promise<{\r\n  cpu_history: number[];\r\n  memory_history: number[];\r\n  timestamps: string[];\r\n  average_response_time: number;\r\n  error_rate: number;\r\n}> {\r\n  const response = await apiRequest(API_ENDPOINTS.MONITORING_PERFORMANCE);\r\n  return response.json();\r\n}\r\n\r\n// Logs\r\nexport async function getLogs(params?: {\r\n  type?: 'system' | 'training';\r\n  level?: 'info' | 'warning' | 'error' | 'debug';\r\n  limit?: number;\r\n  offset?: number;\r\n}): Promise<LogEntry[]> {\r\n  try {\r\n    const searchParams = new URLSearchParams();\r\n    if (params) {\r\n      Object.entries(params).forEach(([key, value]) => {\r\n        if (value !== undefined) {\r\n          searchParams.append(key, String(value));\r\n        }\r\n      });\r\n    }\r\n    \r\n    const query = searchParams.toString();\r\n    const url = query ? `${API_ENDPOINTS.LOGS}?${query}` : API_ENDPOINTS.LOGS;\r\n    \r\n    const response = await apiRequest(url);\r\n    const data = await response.json();\r\n    \r\n    // Handle different response formats from API\r\n    if (data && typeof data === 'object') {\r\n      // If response has logs property (paginated response)\r\n      if (Array.isArray(data.logs)) {\r\n        return data.logs;\r\n      }\r\n      // If response is directly an array\r\n      if (Array.isArray(data)) {\r\n        return data;\r\n      }\r\n    }\r\n    \r\n    // Fallback to empty array if data is not in expected format\r\n    return [];\r\n  } catch (error) {\r\n    console.error('Failed to fetch logs:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function getSystemLogs(limit: number = 100): Promise<LogEntry[]> {\r\n  return getLogs({ type: 'system', limit });\r\n}\r\n\r\nexport async function getTrainingLogs(limit: number = 100): Promise<LogEntry[]> {\r\n  return getLogs({ type: 'training', limit });\r\n}\r\n\r\nexport async function getErrorLogs(limit: number = 50): Promise<LogEntry[]> {\r\n  return getLogs({ level: 'error', limit });\r\n}\r\n\r\n// Export monitoring data\r\nexport async function exportMonitoringData(\r\n  format: 'csv' | 'json' = 'json',\r\n  timeRange: '24h' | '7d' | '30d' = '24h'\r\n): Promise<Blob> {\r\n  const response = await apiRequest(`/monitoring/export?format=${format}&timeRange=${timeRange}`);\r\n  return response.blob();\r\n}\r\n\r\n// Real-time monitoring helpers\r\nexport function getSystemHealthStatus(metrics: SystemMetrics): 'healthy' | 'warning' | 'critical' {\r\n  const cpuThreshold = 80;\r\n  const memoryThreshold = 85;\r\n  \r\n  if (metrics.cpu > 90 || metrics.memory.percentage > 90) {\r\n    return 'critical';\r\n  }\r\n  \r\n  if (metrics.cpu > cpuThreshold || metrics.memory.percentage > memoryThreshold) {\r\n    return 'warning';\r\n  }\r\n  \r\n  return 'healthy';\r\n}\r\n\r\nexport function formatUptime(seconds: number): string {\r\n  const days = Math.floor(seconds / 86400);\r\n  const hours = Math.floor((seconds % 86400) / 3600);\r\n  const minutes = Math.floor((seconds % 3600) / 60);\r\n  \r\n  if (days > 0) {\r\n    return `${days}d ${hours}h ${minutes}m`;\r\n  }\r\n  if (hours > 0) {\r\n    return `${hours}h ${minutes}m`;\r\n  }\r\n  return `${minutes}m`;\r\n}\r\n\r\nexport function getMetricColor(value: number, thresholds: { warning: number; critical: number }): string {\r\n  if (value >= thresholds.critical) {\r\n    return 'text-red-600 bg-red-50';\r\n  }\r\n  if (value >= thresholds.warning) {\r\n    return 'text-yellow-600 bg-yellow-50';\r\n  }\r\n  return 'text-green-600 bg-green-50';\r\n}\r\n\r\nexport function formatBytes(bytes: number): string {\r\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\r\n  if (bytes === 0) return '0 B';\r\n  \r\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\r\n  return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + ' ' + sizes[i];\r\n}\r\n\r\n// Alert thresholds\r\nexport const ALERT_THRESHOLDS = {\r\n  cpu: { warning: 70, critical: 90 },\r\n  memory: { warning: 80, critical: 95 },\r\n  disk: { warning: 85, critical: 95 },\r\n  error_rate: { warning: 5, critical: 10 }, // percentage\r\n} as const;\r\n","import React from 'react';\r\n\r\nexport function PageSkeleton() {\r\n  return (\r\n    <div className=\"animate-pulse space-y-6\" role=\"status\" aria-label=\"در حال بارگذاری...\">\r\n      {/* Header skeleton */}\r\n      <div className=\"space-y-3\">\r\n        <div className=\"h-9 bg-gray-200 dark:bg-gray-700 rounded w-1/3\"></div>\r\n        <div className=\"h-5 bg-gray-200 dark:bg-gray-700 rounded w-2/3\"></div>\r\n      </div>\r\n\r\n      {/* Stats cards skeleton */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        {Array.from({ length: 4 }).map((_, i) => (\r\n          <div key={`stat-${i}`} className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"w-12 h-12 bg-gray-200 dark:bg-gray-700 rounded-lg\"></div>\r\n              <div className=\"ms-4 space-y-2 flex-1\">\r\n                <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-2/3\"></div>\r\n                <div className=\"h-7 bg-gray-200 dark:bg-gray-700 rounded w-1/2\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Content cards skeleton */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\r\n        {Array.from({ length: 6 }).map((_, i) => (\r\n          <div key={`content-${i}`} className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6 space-y-4\">\r\n            <div className=\"flex justify-between items-start\">\r\n              <div className=\"flex-1 space-y-2\">\r\n                <div className=\"h-6 bg-gray-200 dark:bg-gray-700 rounded w-3/4\"></div>\r\n                <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-1/2\"></div>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <div className=\"w-5 h-5 bg-gray-200 dark:bg-gray-700 rounded\"></div>\r\n                <div className=\"w-16 h-6 bg-gray-200 dark:bg-gray-700 rounded-full\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"bg-gray-50 dark:bg-gray-700 p-3 rounded-lg space-y-2\">\r\n                <div className=\"h-6 bg-gray-200 dark:bg-gray-600 rounded w-2/3 mx-auto\"></div>\r\n                <div className=\"h-3 bg-gray-200 dark:bg-gray-600 rounded w-1/2 mx-auto\"></div>\r\n              </div>\r\n              <div className=\"bg-gray-50 dark:bg-gray-700 p-3 rounded-lg space-y-2\">\r\n                <div className=\"h-6 bg-gray-200 dark:bg-gray-600 rounded w-2/3 mx-auto\"></div>\r\n                <div className=\"h-3 bg-gray-200 dark:bg-gray-600 rounded w-1/2 mx-auto\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              <div className=\"flex-1 h-10 bg-gray-200 dark:bg-gray-700 rounded\"></div>\r\n              <div className=\"w-10 h-10 bg-gray-200 dark:bg-gray-700 rounded\"></div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Announcement for screen readers */}\r\n      <div className=\"sr-only\" aria-live=\"polite\" aria-atomic=\"true\">\r\n        در حال بارگذاری محتوا، لطفاً صبر کنید...\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function InlineLoader({ \r\n  size = 'sm', \r\n  className = '', \r\n  text,\r\n  variant = 'spinner' \r\n}: { \r\n  size?: 'sm' | 'md' | 'lg'; \r\n  className?: string; \r\n  text?: string;\r\n  variant?: 'spinner' | 'dots' | 'pulse';\r\n}) {\r\n  const sizeClasses = {\r\n    sm: 'w-4 h-4',\r\n    md: 'w-6 h-6', \r\n    lg: 'w-8 h-8'\r\n  };\r\n\r\n  const renderSpinner = () => (\r\n    <div className={`animate-spin rounded-full border-2 border-gray-300 border-t-blue-600 dark:border-gray-600 dark:border-t-blue-400 ${sizeClasses[size]}`}></div>\r\n  );\r\n\r\n  const renderDots = () => (\r\n    <div className=\"flex gap-1\">\r\n      {[0, 1, 2].map(i => (\r\n        <div \r\n          key={i}\r\n          className={`bg-blue-600 dark:bg-blue-400 rounded-full animate-pulse ${sizeClasses[size]}`}\r\n          style={{ animationDelay: `${i * 0.2}s` }}\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  const renderPulse = () => (\r\n    <div className={`bg-blue-600 dark:bg-blue-400 rounded animate-pulse ${sizeClasses[size]}`}></div>\r\n  );\r\n\r\n  const renderLoader = () => {\r\n    switch (variant) {\r\n      case 'dots': return renderDots();\r\n      case 'pulse': return renderPulse();\r\n      default: return renderSpinner();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`flex items-center justify-center gap-2 ${className}`} role=\"status\" aria-label=\"در حال بارگذاری...\">\r\n      {renderLoader()}\r\n      {text && (\r\n        <span className=\"text-sm text-gray-600 dark:text-gray-400\">{text}</span>\r\n      )}\r\n      <span className=\"sr-only\">در حال بارگذاری...</span>\r\n    </div>\r\n  );\r\n}","import React, { useState, useMemo } from 'react';\r\nimport { ChevronUp, ChevronDown, Search, ChevronLeft, ChevronRight } from 'lucide-react';\r\nimport { cn } from '../../utils/cn';\r\n\r\nexport interface Column<T> {\r\n  key: keyof T;\r\n  title: string;\r\n  sortable?: boolean;\r\n  searchable?: boolean;\r\n  render?: (value: any, row: T, index: number) => React.ReactNode;\r\n  width?: string;\r\n  align?: 'left' | 'center' | 'right';\r\n  className?: string;\r\n}\r\n\r\nexport interface DataTableProps<T> {\r\n  data: T[];\r\n  columns: Column<T>[];\r\n  loading?: boolean;\r\n  error?: string;\r\n  itemsPerPage?: number;\r\n  onRowClick?: (row: T, index: number) => void;\r\n  className?: string;\r\n  emptyMessage?: string;\r\n  searchPlaceholder?: string;\r\n  showSearch?: boolean;\r\n  showPagination?: boolean;\r\n  striped?: boolean;\r\n  hoverable?: boolean;\r\n  compact?: boolean;\r\n}\r\n\r\nfunction DataTable<T extends Record<string, any>>({\r\n  data,\r\n  columns,\r\n  loading = false,\r\n  error,\r\n  itemsPerPage = 10,\r\n  onRowClick,\r\n  className = '',\r\n  emptyMessage = 'داده‌ای یافت نشد',\r\n  searchPlaceholder = 'جستجو...',\r\n  showSearch = true,\r\n  showPagination = true,\r\n  striped = true,\r\n  hoverable = true,\r\n  compact = false,\r\n}: DataTableProps<T>) {\r\n  const [sortField, setSortField] = useState<keyof T | null>(null);\r\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Filter and sort data\r\n  const processedData = useMemo(() => {\r\n    let filtered = [...data];\r\n\r\n    // Search filter\r\n    if (searchTerm && showSearch) {\r\n      const searchableColumns = columns.filter(col => col.searchable !== false);\r\n      filtered = data.filter((row) =>\r\n        searchableColumns.some((col) =>\r\n          String(row[col.key] || '').toLowerCase().includes(searchTerm.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n\r\n    // Sort\r\n    if (sortField) {\r\n      filtered.sort((a, b) => {\r\n        const aVal = a[sortField];\r\n        const bVal = b[sortField];\r\n        \r\n        // Handle null/undefined values\r\n        if (aVal == null && bVal == null) return 0;\r\n        if (aVal == null) return 1;\r\n        if (bVal == null) return -1;\r\n        \r\n        // Handle different data types\r\n        if (typeof aVal === 'string' && typeof bVal === 'string') {\r\n          return sortDirection === 'asc' \r\n            ? aVal.localeCompare(bVal, 'fa')\r\n            : bVal.localeCompare(aVal, 'fa');\r\n        }\r\n        \r\n        if (typeof aVal === 'number' && typeof bVal === 'number') {\r\n          return sortDirection === 'asc' ? aVal - bVal : bVal - aVal;\r\n        }\r\n        \r\n        // Fallback to string comparison\r\n        const aStr = String(aVal);\r\n        const bStr = String(bVal);\r\n        return sortDirection === 'asc' \r\n          ? aStr.localeCompare(bStr, 'fa')\r\n          : bStr.localeCompare(aStr, 'fa');\r\n      });\r\n    }\r\n\r\n    return filtered;\r\n  }, [data, columns, searchTerm, sortField, sortDirection, showSearch]);\r\n\r\n  // Pagination\r\n  const totalPages = Math.ceil(processedData.length / itemsPerPage);\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const paginatedData = showPagination \r\n    ? processedData.slice(startIndex, startIndex + itemsPerPage)\r\n    : processedData;\r\n\r\n  // Reset pagination when search changes\r\n  React.useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [searchTerm]);\r\n\r\n  const handleSort = (field: keyof T) => {\r\n    const column = columns.find(col => col.key === field);\r\n    if (!column?.sortable) return;\r\n\r\n    if (sortField === field) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortField(field);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  const getSortIcon = (field: keyof T) => {\r\n    if (sortField !== field) return null;\r\n    return sortDirection === 'asc' \r\n      ? <ChevronUp className=\"h-4 w-4\" />\r\n      : <ChevronDown className=\"h-4 w-4\" />;\r\n  };\r\n\r\n  // Loading skeleton\r\n  if (loading) {\r\n    return (\r\n      <div className={cn('space-y-4', className)}>\r\n        {showSearch && (\r\n          <div className=\"h-10 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\"></div>\r\n        )}\r\n        <div className=\"space-y-2\">\r\n          <div className=\"h-12 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\"></div>\r\n          {[...Array(5)].map((_, i) => (\r\n            <div key={i} className=\"h-10 bg-gray-100 dark:bg-gray-800 rounded animate-pulse\"></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Error state\r\n  if (error) {\r\n    return (\r\n      <div className={cn('text-center py-8', className)}>\r\n        <div className=\"text-red-600 dark:text-red-400 mb-2\">خطا در بارگذاری داده‌ها</div>\r\n        <div className=\"text-sm text-gray-500 dark:text-gray-400\">{error}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={cn('space-y-4', className)} dir=\"rtl\">\r\n      {/* Search */}\r\n      {showSearch && (\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"relative flex-1 max-w-sm\">\r\n            <Search className=\"absolute right-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder={searchPlaceholder}\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"w-full pr-10 pl-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\"\r\n            />\r\n          </div>\r\n          \r\n          {showPagination && processedData.length > 0 && (\r\n            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              نمایش {startIndex + 1}-{Math.min(startIndex + itemsPerPage, processedData.length)} از {processedData.length} مورد\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Table */}\r\n      <div className=\"overflow-x-auto rounded-lg border border-gray-200 dark:border-gray-700\">\r\n        <table className=\"w-full bg-white dark:bg-gray-800\">\r\n          <thead className=\"bg-gray-50 dark:bg-gray-900\">\r\n            <tr>\r\n              {columns.map((column) => (\r\n                <th\r\n                  key={String(column.key)}\r\n                  className={cn(\r\n                    'px-4 py-3 text-sm font-semibold text-gray-700 dark:text-gray-300',\r\n                    column.sortable && 'cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800 select-none',\r\n                    column.align === 'center' && 'text-center',\r\n                    column.align === 'left' && 'text-left',\r\n                    'text-right', // Default RTL alignment\r\n                    compact && 'px-2 py-2',\r\n                    column.className\r\n                  )}\r\n                  style={{ width: column.width }}\r\n                  onClick={() => column.sortable && handleSort(column.key)}\r\n                >\r\n                  <div className={cn(\r\n                    'flex items-center gap-2',\r\n                    column.align === 'center' && 'justify-center',\r\n                    column.align === 'left' && 'justify-start',\r\n                    'justify-end' // Default RTL alignment\r\n                  )}>\r\n                    <span>{column.title}</span>\r\n                    {column.sortable && (\r\n                      <div className=\"flex flex-col\">\r\n                        {getSortIcon(column.key) || (\r\n                          <div className=\"text-gray-400\">\r\n                            <ChevronUp className=\"h-3 w-3\" />\r\n                            <ChevronDown className=\"h-3 w-3 -mt-1\" />\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {paginatedData.length > 0 ? (\r\n              paginatedData.map((row, index) => (\r\n                <tr\r\n                  key={index}\r\n                  className={cn(\r\n                    'border-t border-gray-100 dark:border-gray-700',\r\n                    striped && index % 2 === 0 && 'bg-gray-50/50 dark:bg-gray-800/50',\r\n                    hoverable && 'hover:bg-gray-50 dark:hover:bg-gray-800',\r\n                    onRowClick && 'cursor-pointer'\r\n                  )}\r\n                  onClick={() => onRowClick?.(row, startIndex + index)}\r\n                >\r\n                  {columns.map((column) => (\r\n                    <td\r\n                      key={String(column.key)}\r\n                      className={cn(\r\n                        'px-4 py-3 text-sm text-gray-900 dark:text-gray-100',\r\n                        column.align === 'center' && 'text-center',\r\n                        column.align === 'left' && 'text-left',\r\n                        'text-right', // Default RTL alignment\r\n                        compact && 'px-2 py-2',\r\n                        column.className\r\n                      )}\r\n                    >\r\n                      {column.render \r\n                        ? column.render(row[column.key], row, startIndex + index)\r\n                        : String(row[column.key] || '')\r\n                      }\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td \r\n                  colSpan={columns.length} \r\n                  className=\"px-4 py-8 text-center text-gray-500 dark:text-gray-400\"\r\n                >\r\n                  {emptyMessage}\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      {showPagination && totalPages > 1 && (\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <button\r\n              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n              disabled={currentPage === 1}\r\n              className=\"flex items-center gap-1 px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-md disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50 dark:hover:bg-gray-700\"\r\n            >\r\n              <ChevronRight className=\"h-4 w-4\" />\r\n              قبلی\r\n            </button>\r\n            \r\n            <div className=\"flex items-center gap-1\">\r\n              {/* Page numbers */}\r\n              {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\r\n                let pageNum;\r\n                if (totalPages <= 5) {\r\n                  pageNum = i + 1;\r\n                } else if (currentPage <= 3) {\r\n                  pageNum = i + 1;\r\n                } else if (currentPage >= totalPages - 2) {\r\n                  pageNum = totalPages - 4 + i;\r\n                } else {\r\n                  pageNum = currentPage - 2 + i;\r\n                }\r\n                \r\n                return (\r\n                  <button\r\n                    key={pageNum}\r\n                    onClick={() => setCurrentPage(pageNum)}\r\n                    className={cn(\r\n                      'px-3 py-2 text-sm rounded-md',\r\n                      currentPage === pageNum\r\n                        ? 'bg-primary-600 text-white'\r\n                        : 'border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700'\r\n                    )}\r\n                  >\r\n                    {pageNum.toLocaleString('fa-IR')}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n            \r\n            <button\r\n              onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\r\n              disabled={currentPage === totalPages}\r\n              className=\"flex items-center gap-1 px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-md disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50 dark:hover:bg-gray-700\"\r\n            >\r\n              بعدی\r\n              <ChevronLeft className=\"h-4 w-4\" />\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n            صفحه {currentPage.toLocaleString('fa-IR')} از {totalPages.toLocaleString('fa-IR')}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FileText, Filter, Download, RefreshCw, AlertCircle, Search } from 'lucide-react';\r\nimport { getLogs, getSystemLogs, getTrainingLogs, getErrorLogs, type LogEntry } from '../services/monitoring';\r\nimport { PageSkeleton } from './ui/PageSkeleton';\r\nimport DataTable, { type Column } from './ui/DataTable';\r\nimport { useToast } from './ui/Toast';\r\n\r\ntype LogFilter = 'all' | 'system' | 'training' | 'error';\r\n\r\nexport function LogsPage() {\r\n  const [logs, setLogs] = useState<LogEntry[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [filter, setFilter] = useState<LogFilter>('all');\r\n  const { showToast } = useToast();\r\n\r\n  useEffect(() => {\r\n    loadLogs();\r\n  }, [filter]);\r\n\r\n  const loadLogs = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      let logsData: any;\r\n      switch (filter) {\r\n        case 'system':\r\n          logsData = await getSystemLogs(200);\r\n          break;\r\n        case 'training':\r\n          logsData = await getTrainingLogs(200);\r\n          break;\r\n        case 'error':\r\n          logsData = await getErrorLogs(200);\r\n          break;\r\n        default:\r\n          logsData = await getLogs({ limit: 200 });\r\n      }\r\n      \r\n      // Ensure logsData is always an array\r\n      const logsArray = Array.isArray(logsData) ? logsData : [];\r\n      setLogs(logsArray);\r\n    } catch (err) {\r\n      console.error('Failed to load logs:', err);\r\n      setError('خطا در بارگذاری گزارش‌ها');\r\n      setLogs([]); // Set to empty array on error\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleExport = () => {\r\n    try {\r\n      const csvContent = [\r\n        ['زمان', 'سطح', 'دسته‌بندی', 'پیام', 'جزئیات'].join(','),\r\n        ...logs.map(log => [\r\n          new Date(log.timestamp).toLocaleString('fa-IR'),\r\n          log.level,\r\n          log.category || '',\r\n          `\"${log.message.replace(/\"/g, '\"\"')}\"`,\r\n          log.metadata ? `\"${log.metadata.replace(/\"/g, '\"\"')}\"` : ''\r\n        ].join(','))\r\n      ].join('\\n');\r\n\r\n      const blob = new Blob(['\\ufeff' + csvContent], { type: 'text/csv;charset=utf-8;' });\r\n      const link = document.createElement('a');\r\n      const url = URL.createObjectURL(blob);\r\n      link.setAttribute('href', url);\r\n      link.setAttribute('download', `logs_${new Date().toISOString().split('T')[0]}.csv`);\r\n      link.style.visibility = 'hidden';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      \r\n      showToast('گزارش‌ها با موفقیت صادر شد', 'success');\r\n    } catch (err) {\r\n      console.error('Failed to export logs:', err);\r\n      showToast('خطا در صادرات گزارش‌ها', 'error');\r\n    }\r\n  };\r\n\r\n  const getLevelIcon = (level: string) => {\r\n    switch (level) {\r\n      case 'error':\r\n        return '🔴';\r\n      case 'warning':\r\n        return '🟡';\r\n      case 'info':\r\n        return '🔵';\r\n      case 'debug':\r\n        return '⚪';\r\n      default:\r\n        return '📝';\r\n    }\r\n  };\r\n\r\n  const getLevelColor = (level: string) => {\r\n    switch (level) {\r\n      case 'error':\r\n        return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\r\n      case 'warning':\r\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\r\n      case 'info':\r\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\r\n      case 'debug':\r\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\r\n    }\r\n  };\r\n\r\n  const columns: Column<LogEntry>[] = [\r\n    {\r\n      key: 'timestamp',\r\n      title: 'زمان',\r\n      sortable: true,\r\n      width: '160px',\r\n      render: (value) => (\r\n        <div className=\"text-xs font-mono\">\r\n          <div>{new Date(value).toLocaleDateString('fa-IR')}</div>\r\n          <div className=\"text-gray-500\">{new Date(value).toLocaleTimeString('fa-IR')}</div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: 'level',\r\n      title: 'سطح',\r\n      sortable: true,\r\n      width: '90px',\r\n      align: 'center',\r\n      render: (value) => (\r\n        <div className=\"flex items-center justify-center gap-1\">\r\n          <span>{getLevelIcon(value)}</span>\r\n          <span className={`px-2 py-1 rounded-full text-xs font-medium ${getLevelColor(value)}`}>\r\n            {value}\r\n          </span>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: 'category',\r\n      title: 'دسته‌بندی',\r\n      sortable: true,\r\n      width: '120px',\r\n      render: (value) => (\r\n        <span className=\"text-sm bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded text-gray-700 dark:text-gray-300\">\r\n          {value || 'عمومی'}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      key: 'message',\r\n      title: 'پیام',\r\n      render: (value, row) => (\r\n        <div className=\"space-y-1\">\r\n          <div className=\"text-sm\">{value}</div>\r\n          {row.model_name && (\r\n            <div className=\"text-xs text-blue-600 dark:text-blue-400\">\r\n              مدل: {row.model_name}\r\n            </div>\r\n          )}\r\n          {(row.epoch !== undefined || row.accuracy !== undefined) && (\r\n            <div className=\"text-xs text-gray-500 space-x-2 space-x-reverse\">\r\n              {row.epoch !== undefined && <span>Epoch: {row.epoch}</span>}\r\n              {row.accuracy !== undefined && <span>دقت: {(row.accuracy * 100).toFixed(1)}%</span>}\r\n              {row.loss !== undefined && <span>Loss: {row.loss.toFixed(4)}</span>}\r\n            </div>\r\n          )}\r\n          {row.metadata && (\r\n            <details className=\"text-xs\">\r\n              <summary className=\"cursor-pointer text-gray-500 hover:text-gray-700\">جزئیات</summary>\r\n              <pre className=\"mt-1 p-2 bg-gray-100 dark:bg-gray-700 rounded text-xs overflow-auto\">\r\n                {JSON.stringify(JSON.parse(row.metadata), null, 2)}\r\n              </pre>\r\n            </details>\r\n          )}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const filterOptions = [\r\n    { value: 'all', label: 'همه گزارش‌ها', count: logs.length },\r\n    { value: 'system', label: 'سیستم', count: logs.filter(l => l.category !== 'training').length },\r\n    { value: 'training', label: 'آموزش', count: logs.filter(l => l.category === 'training').length },\r\n    { value: 'error', label: 'خطاها', count: logs.filter(l => l.level === 'error').length },\r\n  ];\r\n\r\n  if (loading && logs.length === 0) {\r\n    return <PageSkeleton showHeader />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\" dir=\"rtl\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">گزارش‌های سیستم</h1>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n            مشاهده و تحلیل گزارش‌های سیستم و فعالیت‌های آموزش\r\n          </p>\r\n        </div>\r\n        <div className=\"flex gap-3\">\r\n          <button\r\n            onClick={handleExport}\r\n            disabled={logs.length === 0}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            <Download className=\"h-4 w-4\" />\r\n            صادرات CSV\r\n          </button>\r\n          <button\r\n            onClick={loadLogs}\r\n            disabled={loading}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors disabled:opacity-50\"\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            بروزرسانی\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Alert */}\r\n      {error && (\r\n        <div className=\"p-4 bg-red-50 dark:bg-red-950 border border-red-200 dark:border-red-800 rounded-lg\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <AlertCircle className=\"h-5 w-5 text-red-600\" />\r\n            <p className=\"text-red-800 dark:text-red-200\">{error}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Filters */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <Filter className=\"h-4 w-4 text-gray-600\" />\r\n            <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">فیلتر:</span>\r\n          </div>\r\n          <div className=\"flex gap-2\">\r\n            {filterOptions.map((option) => (\r\n              <button\r\n                key={option.value}\r\n                onClick={() => setFilter(option.value as LogFilter)}\r\n                className={`flex items-center gap-2 px-3 py-1 rounded-lg text-sm transition-colors ${\r\n                  filter === option.value\r\n                    ? 'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200'\r\n                    : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\r\n                }`}\r\n              >\r\n                <span>{option.label}</span>\r\n                <span className=\"bg-white dark:bg-gray-800 px-2 py-0.5 rounded-full text-xs\">\r\n                  {option.count.toLocaleString('fa-IR')}\r\n                </span>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Logs Table */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n        <div className=\"p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n              {filterOptions.find(f => f.value === filter)?.label || 'گزارش‌ها'}\r\n            </h2>\r\n            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              {logs.length.toLocaleString('fa-IR')} مورد\r\n            </div>\r\n          </div>\r\n          \r\n          <DataTable\r\n            data={logs}\r\n            columns={columns}\r\n            loading={loading}\r\n            error={error}\r\n            emptyMessage=\"هیچ گزارشی یافت نشد\"\r\n            searchPlaceholder=\"جستجوی گزارش‌ها...\"\r\n            itemsPerPage={25}\r\n            compact\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogsPage;"],"names":["async","getLogs","params","searchParams","URLSearchParams","Object","entries","forEach","key","value","append","String","query","toString","url","API_ENDPOINTS","LOGS","response","apiRequest","data","json","Array","isArray","logs","error","console","PageSkeleton","className","role","aria-label","children","jsxs","jsx","from","length","map","_","i","aria-live","aria-atomic","DataTable","columns","loading","itemsPerPage","onRowClick","emptyMessage","searchPlaceholder","showSearch","showPagination","striped","hoverable","compact","sortField","setSortField","useState","sortDirection","setSortDirection","currentPage","setCurrentPage","searchTerm","setSearchTerm","processedData","useMemo","filtered","searchableColumns","filter","col","searchable","row","some","toLowerCase","includes","sort","a","b","aVal","bVal","localeCompare","aStr","bStr","totalPages","Math","ceil","startIndex","paginatedData","slice","React","useEffect","cn","dir","Search","type","placeholder","onChange","e","target","min","column","sortable","align","style","width","onClick","field","find","handleSort","title","ChevronUp","ChevronDown","index","render","colSpan","max","disabled","ChevronRight","pageNum","toLocaleString","ChevronLeft","LogsPage","setLogs","setLoading","setError","setFilter","showToast","useToast","loadLogs","logsData","limit","getSystemLogs","getTrainingLogs","level","getErrorLogs","logsArray","err","getLevelIcon","getLevelColor","Date","toLocaleDateString","toLocaleTimeString","model_name","epoch","accuracy","toFixed","loss","metadata","JSON","stringify","parse","filterOptions","label","count","l","category","showHeader","csvContent","join","log","timestamp","message","replace","blob","Blob","link","document","createElement","URL","createObjectURL","setAttribute","toISOString","split","visibility","body","appendChild","click","removeChild","Download","RefreshCw","AlertCircle","Filter","option","_a","f"],"mappings":"sRAoHAA,eAAsBC,EAAQC,GAM5B,IACE,MAAMC,EAAe,IAAIC,gBACrBF,GACFG,OAAOC,QAAQJ,GAAQK,QAAQ,EAAEC,EAAKC,WACtB,IAAVA,GACFN,EAAaO,OAAOF,EAAKG,OAAOF,MAKtC,MAAMG,EAAQT,EAAaU,WACrBC,EAAMF,EAAQ,GAAGG,EAAcC,QAAQJ,IAAUG,EAAcC,KAE/DC,QAAiBC,EAAWJ,GAC5BK,QAAaF,EAASG,OAG5B,GAAID,GAAwB,iBAATA,EAAmB,CAEpC,GAAIE,MAAMC,QAAQH,EAAKI,MACrB,OAAOJ,EAAKI,KAGd,GAAIF,MAAMC,QAAQH,GAChB,OAAOA,EAKX,MAAO,SACAK,GAEP,OADAC,QAAQD,MAAM,wBAAyBA,GAChC,ICxJJ,SAASE,IACd,cACG,MAAA,CAAIC,UAAU,0BAA0BC,KAAK,SAASC,aAAW,qBAEhEC,SAAA,GAAAC,KAAC,MAAA,CAAIJ,UAAU,YACbG,SAAA,GAAAE,IAAC,MAAA,CAAIL,UAAU,qDACfK,IAAC,MAAA,CAAIL,UAAU,sDAIjBK,EAAAA,IAAC,OAAIL,UAAU,uDACZG,eAAMG,KAAK,CAAEC,OAAQ,IAAKC,IAAI,CAACC,EAAGC,IACjCL,EAAAA,IAAC,MAAA,CAAsBL,UAAU,uFAC/BG,SAAAC,EAAAA,KAAC,MAAA,CAAIJ,UAAU,oBACbG,SAAA,GAAAE,IAAC,MAAA,CAAIL,UAAU,wDACfI,KAAC,MAAA,CAAIJ,UAAU,wBACbG,SAAA,GAAAE,IAAC,MAAA,CAAIL,UAAU,qDACfK,IAAC,MAAA,CAAIL,UAAU,0DALX,QAAQU,YAarB,MAAA,CAAIV,UAAU,uDACZG,SAAAT,MAAMY,KAAK,CAAEC,OAAQ,IAAKC,IAAI,CAACC,EAAGC,IACjCN,EAAAA,KAAC,MAAA,CAAyBJ,UAAU,iGAClCG,SAAA,GAAAC,KAAC,MAAA,CAAIJ,UAAU,mCACbG,SAAA,GAAAC,KAAC,MAAA,CAAIJ,UAAU,mBACbG,SAAA,GAAAE,IAAC,MAAA,CAAIL,UAAU,qDACfK,IAAC,MAAA,CAAIL,UAAU,wDAEjBI,KAAC,MAAA,CAAIJ,UAAU,0BACbG,SAAA,GAAAE,IAAC,MAAA,CAAIL,UAAU,mDACfK,IAAC,MAAA,CAAIL,UAAU,+DAGnBI,KAAC,MAAA,CAAIJ,UAAU,yBACbG,SAAA,GAAAC,KAAC,MAAA,CAAIJ,UAAU,uDACbG,SAAA,GAAAE,IAAC,MAAA,CAAIL,UAAU,6DACfK,IAAC,MAAA,CAAIL,UAAU,gEAEjBI,KAAC,MAAA,CAAIJ,UAAU,uDACbG,SAAA,GAAAE,IAAC,MAAA,CAAIL,UAAU,6DACfK,IAAC,MAAA,CAAIL,UAAU,mEAGnBI,KAAC,MAAA,CAAIJ,UAAU,aACbG,SAAA,GAAAE,IAAC,MAAA,CAAIL,UAAU,uDACfK,IAAC,MAAA,CAAIL,UAAU,wDAvBT,WAAWU,MA8BzBL,EAAAA,IAAC,OAAIL,UAAU,UAAUW,YAAU,SAASC,cAAY,OAAOT,SAAA,gDC3BrE,SAASU,GAAyCrB,KAChDA,EAAAsB,QACAA,EAAAC,QACAA,GAAU,EAAAlB,MACVA,EAAAmB,aACAA,EAAe,GAAAC,WACfA,EAAAjB,UACAA,EAAY,GAAAkB,aACZA,EAAe,mBAAAC,kBACfA,EAAoB,WAAAC,WACpBA,GAAa,EAAAC,eACbA,GAAiB,EAAAC,QACjBA,GAAU,EAAAC,UACVA,GAAY,EAAAC,QACZA,GAAU,IAEV,MAAOC,EAAWC,GAAgBC,EAAAA,SAAyB,OACpDC,EAAeC,GAAoBF,EAAAA,SAAyB,QAC5DG,EAAaC,GAAkBJ,EAAAA,SAAS,IACxCK,EAAYC,GAAiBN,EAAAA,SAAS,IAGvCO,EAAgBC,EAAAA,QAAQ,KAC5B,IAAIC,EAAW,IAAI5C,GAGnB,GAAIwC,GAAcZ,EAAY,CAC5B,MAAMiB,EAAoBvB,EAAQwB,OAAOC,IAA0B,IAAnBA,EAAIC,YACpDJ,EAAW5C,EAAK8C,OAAQG,GACtBJ,EAAkBK,KAAMH,GACtBvD,OAAOyD,EAAIF,EAAI1D,MAAQ,IAAI8D,cAAcC,SAASZ,EAAWW,iBAoCnE,OA9BIlB,GACFW,EAASS,KAAK,CAACC,EAAGC,KAChB,MAAMC,EAAOF,EAAErB,GACTwB,EAAOF,EAAEtB,GAGf,GAAY,MAARuB,GAAwB,MAARC,EAAc,OAAO,EACzC,GAAY,MAARD,EAAc,OAAO,EACzB,GAAY,MAARC,EAAc,OAAO,EAGzB,GAAoB,iBAATD,GAAqC,iBAATC,EACrC,MAAyB,QAAlBrB,EACHoB,EAAKE,cAAcD,EAAM,MACzBA,EAAKC,cAAcF,EAAM,MAG/B,GAAoB,iBAATA,GAAqC,iBAATC,EACrC,MAAyB,QAAlBrB,EAA0BoB,EAAOC,EAAOA,EAAOD,EAIxD,MAAMG,EAAOnE,OAAOgE,GACdI,EAAOpE,OAAOiE,GACpB,MAAyB,QAAlBrB,EACHuB,EAAKD,cAAcE,EAAM,MACzBA,EAAKF,cAAcC,EAAM,QAI1Bf,GACN,CAAC5C,EAAMsB,EAASkB,EAAYP,EAAWG,EAAeR,IAGnDiC,EAAaC,KAAKC,KAAKrB,EAAc3B,OAASS,GAC9CwC,GAAc1B,EAAc,GAAKd,EACjCyC,EAAgBpC,EAClBa,EAAcwB,MAAMF,EAAYA,EAAaxC,GAC7CkB,EAGJyB,EAAMC,UAAU,KACd7B,EAAe,IACd,CAACC,IAsBJ,OAAIjB,SAEC,MAAA,CAAIf,UAAW6D,EAAG,YAAa7D,GAC7BG,SAAA,CAAAiB,GACCf,EAAAA,IAAC,MAAA,CAAIL,UAAU,8DAEjBI,KAAC,MAAA,CAAIJ,UAAU,YACbG,SAAA,GAAAE,IAAC,MAAA,CAAIL,UAAU,4DACd,IAAIN,MAAM,IAAIc,IAAI,CAACC,EAAGC,IACrBL,EAAAA,IAAC,MAAA,CAAYL,UAAU,2DAAbU,UAQhBb,SAEC,MAAA,CAAIG,UAAW6D,EAAG,mBAAoB7D,GACrCG,SAAA,CAAAE,EAAAA,IAAC,MAAA,CAAIL,UAAU,sCAAsCG,SAAA,4BACrDE,EAAAA,IAAC,MAAA,CAAIL,UAAU,2CAA4CG,SAAAN,OAM/DO,OAAC,OAAIJ,UAAW6D,EAAG,YAAa7D,GAAY8D,IAAI,MAE7C3D,SAAA,CAAAiB,GACChB,EAAAA,KAAC,MAAA,CAAIJ,UAAU,0BACbG,SAAA,GAAAC,KAAC,MAAA,CAAIJ,UAAU,2BACbG,SAAA,GAAAE,IAAC0D,EAAA,CAAO/D,UAAU,oEAClBK,EAAAA,IAAC,QAAA,CACC2D,KAAK,OACLC,YAAa9C,EACbrC,MAAOkD,EACPkC,SAAWC,GAAMlC,EAAckC,EAAEC,OAAOtF,OACxCkB,UAAU,mLAIbqB,GAAkBa,EAAc3B,OAAS,GACxCH,EAAAA,KAAC,MAAA,CAAIJ,UAAU,2CAA2CG,SAAA,CAAA,SACjDqD,EAAa,EAAE,IAAEF,KAAKe,IAAIb,EAAaxC,EAAckB,EAAc3B,QAAQ,OAAK2B,EAAc3B,OAAO,oBAOnH,MAAA,CAAIP,UAAU,yEACbG,SAAAC,EAAAA,KAAC,QAAA,CAAMJ,UAAU,mCACfG,SAAA,GAAAE,IAAC,QAAA,CAAML,UAAU,8BACfG,SAAAE,EAAAA,IAAC,MACEF,SAAAW,EAAQN,IAAK8D,IACZjE,OAAAA,EAAAA,IAAC,KAAA,CAECL,UAAW6D,EACT,mEACAS,EAAOC,UAAY,sEACF,WAAjBD,EAAOE,OAAsB,cACZ,SAAjBF,EAAOE,OAAoB,YAC3B,aACAhD,GAAW,YACX8C,EAAOtE,WAETyE,MAAO,CAAEC,MAAOJ,EAAOI,OACvBC,QAAS,IAAML,EAAOC,UAxFnB,CAACK,IAClB,MAAMN,EAASxD,EAAQ+D,KAAKtC,GAAOA,EAAI1D,MAAQ+F,UAC1CN,WAAQC,YAET9C,IAAcmD,EAChB/C,EAAmC,QAAlBD,EAA0B,OAAS,QAEpDF,EAAakD,GACb/C,EAAiB,UAgF6BiD,CAAWR,EAAOzF,KAEpDsB,SAAAC,EAAAA,KAAC,OAAIJ,UAAW6D,EACd,0BACiB,WAAjBS,EAAOE,OAAsB,iBACZ,SAAjBF,EAAOE,OAAoB,gBAC3B,eAEArE,SAAA,GAAAE,IAAC,OAAA,CAAMF,WAAO4E,QACbT,EAAOC,UACNlE,MAAC,MAAA,CAAIL,UAAU,gBACZG,UAvFFyE,EAuFcN,EAAOzF,KAtFpC4C,IAAcmD,EAAc,KACP,QAAlBhD,EACHvB,MAAC2E,EAAA,CAAUhF,UAAU,cACrBK,IAAC4E,EAAA,CAAYjF,UAAU,cAoFLI,OAAC,MAAA,CAAIJ,UAAU,gBACbG,SAAA,GAAAE,IAAC2E,EAAA,CAAUhF,UAAU,cACrBK,IAAC4E,EAAA,CAAYjF,UAAU,4BAzB5BhB,OAAOsF,EAAOzF,MAjEf,IAAC+F,QAoGbvE,EAAAA,IAAC,SACEF,SAAAsD,EAAclD,OAAS,EACtBkD,EAAcjD,IAAI,CAACiC,EAAKyC,IACtB7E,EAAAA,IAAC,KAAA,CAECL,UAAW6D,EACT,gDACAvC,GAAW4D,EAAQ,GAAM,GAAK,oCAC9B3D,GAAa,0CACbN,GAAc,kBAEhB0D,QAAS,IAAM,MAAA1D,OAAA,EAAAA,EAAawB,EAAKe,EAAa0B,GAE7C/E,SAAAW,EAAQN,IAAK8D,GACZjE,EAAAA,IAAC,KAAA,CAECL,UAAW6D,EACT,qDACiB,WAAjBS,EAAOE,OAAsB,cACZ,SAAjBF,EAAOE,OAAoB,YAC3B,aACAhD,GAAW,YACX8C,EAAOtE,WAGRG,WAAOgF,OACJb,EAAOa,OAAO1C,EAAI6B,EAAOzF,KAAM4D,EAAKe,EAAa0B,GACjDlG,OAAOyD,EAAI6B,EAAOzF,MAAQ,KAZzBG,OAAOsF,EAAOzF,QAXlBqG,IA8BT7E,EAAAA,IAAC,KAAA,CACCF,SAAAE,EAAAA,IAAC,KAAA,CACC+E,QAAStE,EAAQP,OACjBP,UAAU,yDAETG,SAAAe,aASZG,GAAkBgC,EAAa,GAC9BjD,EAAAA,KAAC,MAAA,CAAIJ,UAAU,oCACbG,SAAA,GAAAC,KAAC,MAAA,CAAIJ,UAAU,0BACbG,SAAA,CAAAC,EAAAA,KAAC,SAAA,CACCuE,QAAS,IAAM5C,EAAeuB,KAAK+B,IAAI,EAAGvD,EAAc,IACxDwD,SAA0B,IAAhBxD,EACV9B,UAAU,2LAEVG,SAAA,GAAAE,IAACkF,EAAA,CAAavF,UAAU,YAAY,gBAIrC,MAAA,CAAIA,UAAU,0BAEZG,SAAAT,MAAMY,KAAK,CAAEC,OAAQ+C,KAAKe,IAAI,EAAGhB,IAAe,CAAC5C,EAAGC,KACnD,IAAI8E,EAWJ,OATEA,EADEnC,GAAc,GAEPvB,GAAe,EADdpB,EAAI,EAGLoB,GAAeuB,EAAa,EAC3BA,EAAa,EAAI3C,EAEjBoB,EAAc,EAAIpB,EAI5BL,EAAAA,IAAC,SAAA,CAECsE,QAAS,IAAM5C,EAAeyD,GAC9BxF,UAAW6D,EACT,+BACA/B,IAAgB0D,EACZ,4BACA,uFAGLrF,SAAAqF,EAAQC,eAAe,UATnBD,OAebpF,EAAAA,KAAC,SAAA,CACCuE,QAAS,IAAM5C,EAAeuB,KAAKe,IAAIhB,EAAYvB,EAAc,IACjEwD,SAAUxD,IAAgBuB,EAC1BrD,UAAU,2LACXG,SAAA,CAAA,SAECE,IAACqF,EAAA,CAAY1F,UAAU,oBAI3BI,KAAC,MAAA,CAAIJ,UAAU,2CAA2CG,SAAA,CAAA,QAClD2B,EAAY2D,eAAe,SAAS,OAAKpC,EAAWoC,eAAe,kBC9T9E,SAASE,UACd,MAAO/F,EAAMgG,GAAWjE,EAAAA,SAAqB,KACtCZ,EAAS8E,GAAclE,EAAAA,UAAS,IAChC9B,EAAOiG,GAAYnE,EAAAA,SAAwB,OAC3CW,EAAQyD,GAAapE,EAAAA,SAAoB,QAC1CqE,UAAEA,GAAcC,IAEtBrC,EAAAA,UAAU,KACRsC,KACC,CAAC5D,IAEJ,MAAM4D,EAAW7H,UACf,IAIE,IAAI8H,EACJ,OAJAN,GAAW,GACXC,EAAS,MAGDxD,GACN,IAAK,SACH6D,QHkIV9H,eAAoC+H,EAAgB,KAClD,OAAO9H,EAAQ,CAAE0F,KAAM,SAAUoC,MAAAA,IGnIRC,CAAc,KAC/B,MACF,IAAK,WACHF,QHmIV9H,eAAsC+H,EAAgB,KACpD,OAAO9H,EAAQ,CAAE0F,KAAM,WAAYoC,MAAAA,IGpIVE,CAAgB,KACjC,MACF,IAAK,QACHH,QHoIV9H,eAAmC+H,EAAgB,IACjD,OAAO9H,EAAQ,CAAEiI,MAAO,QAASH,MAAAA,IGrIRI,CAAa,KAC9B,MACF,QACEL,QAAiB7H,EAAQ,CAAE8H,MAAO,MAItC,MAAMK,EAAY/G,MAAMC,QAAQwG,GAAYA,EAAW,GACvDP,EAAQa,SACDC,GACP5G,QAAQD,MAAM,uBAAwB6G,GACtCZ,EAAS,4BACTF,EAAQ,IACV,QACEC,GAAW,KAkCTc,EAAgBJ,IACpB,OAAQA,GACN,IAAK,QACH,MAAO,KACT,IAAK,UACH,MAAO,KACT,IAAK,OACH,MAAO,KACT,IAAK,QACH,MAAO,IACT,QACE,MAAO,OAIPK,EAAiBL,IACrB,OAAQA,GACN,IAAK,QACH,MAAO,4DACT,IAAK,UACH,MAAO,wEACT,IAAK,OACH,MAAO,gEACT,IAAK,QAEL,QACE,MAAO,kEAIPzF,EAA8B,CAClC,CACEjC,IAAK,YACLkG,MAAO,OACPR,UAAU,EACVG,MAAO,QACPS,OAASrG,GACPsB,EAAAA,KAAC,MAAA,CAAIJ,UAAU,oBACbG,SAAA,CAAAE,MAAC,OAAKF,SAAA,IAAI0G,KAAK/H,GAAOgI,mBAAmB,WACzCzG,EAAAA,IAAC,MAAA,CAAIL,UAAU,gBAAiBG,SAAA,IAAI0G,KAAK/H,GAAOiI,mBAAmB,eAIzE,CACElI,IAAK,QACLkG,MAAO,MACPR,UAAU,EACVG,MAAO,OACPF,MAAO,SACPW,OAASrG,GACPsB,EAAAA,KAAC,MAAA,CAAIJ,UAAU,yCACbG,SAAA,CAAAE,EAAAA,IAAC,OAAA,CAAMF,SAAAwG,EAAa7H,KACpBuB,EAAAA,IAAC,QAAKL,UAAW,8CAA8C4G,EAAc9H,GAC1EqB,SAAArB,QAKT,CACED,IAAK,WACLkG,MAAO,YACPR,UAAU,EACVG,MAAO,QACPS,OAASrG,GACPuB,EAAAA,IAAC,QAAKL,UAAU,0FACbG,YAAS,WAIhB,CACEtB,IAAK,UACLkG,MAAO,OACPI,OAAQ,CAACrG,EAAO2D,IACdrC,EAAAA,KAAC,MAAA,CAAIJ,UAAU,YACbG,SAAA,CAAAE,EAAAA,IAAC,MAAA,CAAIL,UAAU,UAAWG,SAAArB,IACzB2D,EAAIuE,YACH5G,OAAC,MAAA,CAAIJ,UAAU,2CAA2CG,SAAA,CAAA,QAClDsC,EAAIuE,oBAGE,IAAdvE,EAAIwE,YAAwC,IAAjBxE,EAAIyE,WAC/B9G,EAAAA,KAAC,MAAA,CAAIJ,UAAU,kDACZG,SAAA,MAAc,IAAdsC,EAAIwE,SAAuB7G,KAAC,OAAA,CAAKD,SAAA,CAAA,UAAQsC,EAAIwE,cAC5B,IAAjBxE,EAAIyE,YAA0B9G,KAAC,OAAA,CAAKD,SAAA,CAAA,SAAsB,IAAfsC,EAAIyE,UAAgBC,QAAQ,GAAG,YAC7D,IAAb1E,EAAI2E,QAAsBhH,KAAC,OAAA,CAAKD,SAAA,CAAA,SAAOsC,EAAI2E,KAAKD,QAAQ,SAG5D1E,EAAI4E,UACHjH,OAAC,UAAA,CAAQJ,UAAU,UACjBG,SAAA,CAAAE,EAAAA,IAAC,UAAA,CAAQL,UAAU,mDAAmDG,SAAA,aACtEE,IAAC,MAAA,CAAIL,UAAU,sEACZG,SAAAmH,KAAKC,UAAUD,KAAKE,MAAM/E,EAAI4E,UAAW,KAAM,aASxDI,EAAgB,CACpB,CAAE3I,MAAO,MAAO4I,MAAO,eAAgBC,MAAO/H,EAAKW,QACnD,CAAEzB,MAAO,SAAU4I,MAAO,QAASC,MAAO/H,EAAK0C,OAAOsF,GAAoB,aAAfA,EAAEC,UAAyBtH,QACtF,CAAEzB,MAAO,WAAY4I,MAAO,QAASC,MAAO/H,EAAK0C,OAAOsF,GAAoB,aAAfA,EAAEC,UAAyBtH,QACxF,CAAEzB,MAAO,QAAS4I,MAAO,QAASC,MAAO/H,EAAK0C,OAAOsF,GAAiB,UAAZA,EAAErB,OAAmBhG,SAGjF,OAAIQ,GAA2B,IAAhBnB,EAAKW,SACXF,IAACN,EAAA,CAAa+H,YAAU,IAI/B1H,EAAAA,KAAC,MAAA,CAAIJ,UAAU,YAAY8D,IAAI,MAE7B3D,SAAA,GAAAC,KAAC,MAAA,CAAIJ,UAAU,oCACbG,SAAA,CAAAC,OAAC,MAAA,CACCD,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAGL,UAAU,mDAAmDG,SAAA,oBACjEE,EAAAA,IAAC,IAAA,CAAEL,UAAU,wCAAwCG,SAAA,2DAIvDC,KAAC,MAAA,CAAIJ,UAAU,aACbG,SAAA,CAAAC,EAAAA,KAAC,SAAA,CACCuE,QAzJW,KACnB,IACE,MAAMoD,EAAa,CACjB,CAAC,OAAQ,MAAO,YAAa,OAAQ,UAAUC,KAAK,QACjDpI,EAAKY,IAAIyH,GAAO,CACjB,IAAIpB,KAAKoB,EAAIC,WAAWzC,eAAe,SACvCwC,EAAI1B,MACJ0B,EAAIJ,UAAY,GAChB,IAAII,EAAIE,QAAQC,QAAQ,KAAM,SAC9BH,EAAIZ,SAAW,IAAIY,EAAIZ,SAASe,QAAQ,KAAM,SAAW,IACzDJ,KAAK,OACPA,KAAK,MAEDK,EAAO,IAAIC,KAAK,CAAC,SAAWP,GAAa,CAAE/D,KAAM,4BACjDuE,EAAOC,SAASC,cAAc,KAC9BtJ,EAAMuJ,IAAIC,gBAAgBN,GAChCE,EAAKK,aAAa,OAAQzJ,GAC1BoJ,EAAKK,aAAa,WAAY,SAAA,IAAY/B,MAAOgC,cAAcC,MAAM,KAAK,UAC1EP,EAAK9D,MAAMsE,WAAa,SACxBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAKW,QACLV,SAASQ,KAAKG,YAAYZ,GAE1BvC,EAAU,6BAA8B,iBACjCU,GACP5G,QAAQD,MAAM,yBAA0B6G,GACxCV,EAAU,yBAA0B,WAgI9BV,SAA0B,IAAhB1F,EAAKW,OACfP,UAAU,4JAEVG,SAAA,GAAAE,IAAC+I,EAAA,CAASpJ,UAAU,YAAY,gBAGlCI,EAAAA,KAAC,SAAA,CACCuE,QAASuB,EACTZ,SAAUvE,EACVf,UAAU,4LAEVG,SAAA,CAAAE,MAACgJ,GAAUrJ,UAAW,YAAWe,EAAU,eAAiB,MAAQ,qBAOzElB,SACE,MAAA,CAAIG,UAAU,qFACbG,SAAAC,EAAAA,KAAC,MAAA,CAAIJ,UAAU,0BACbG,SAAA,GAAAE,IAACiJ,EAAA,CAAYtJ,UAAU,yBACvBK,EAAAA,IAAC,IAAA,CAAEL,UAAU,iCAAkCG,SAAAN,eAMpD,MAAA,CAAIG,UAAU,uFACbG,SAAAC,EAAAA,KAAC,MAAA,CAAIJ,UAAU,0BACbG,SAAA,GAAAC,KAAC,MAAA,CAAIJ,UAAU,0BACbG,SAAA,GAAAE,IAACkJ,EAAA,CAAOvJ,UAAU,0BAClBK,EAAAA,IAAC,OAAA,CAAKL,UAAU,uDAAuDG,SAAA,oBAExE,MAAA,CAAIH,UAAU,aACZG,SAAAsH,EAAcjH,IAAKgJ,GAClBpJ,EAAAA,KAAC,SAAA,CAECuE,QAAS,IAAMoB,EAAUyD,EAAO1K,OAChCkB,UAAW,2EACTsC,IAAWkH,EAAO1K,MACd,gEACA,0GAGNqB,SAAA,GAAAE,IAAC,OAAA,CAAMF,WAAOuH,QACdrH,MAAC,QAAKL,UAAU,6DACbG,WAAOwH,MAAMlC,eAAe,aAV1B+D,EAAO1K,qBAmBrB,MAAA,CAAIkB,UAAU,mFACbG,SAAAC,EAAAA,KAAC,MAAA,CAAIJ,UAAU,MACbG,SAAA,GAAAC,KAAC,MAAA,CAAIJ,UAAU,yCACbG,SAAA,GAAAE,IAAC,KAAA,CAAGL,UAAU,sDACXG,UAAA,OAAAsJ,EAAAhC,EAAc5C,KAAK6E,GAAKA,EAAE5K,QAAUwD,SAApC,EAAAmH,EAA6C/B,QAAS,eAEzDtH,KAAC,MAAA,CAAIJ,UAAU,2CACZG,SAAA,CAAAP,EAAKW,OAAOkF,eAAe,SAAS,cAIzCpF,EAAAA,IAACQ,EAAA,CACCrB,KAAMI,EACNkB,QAAAA,EACAC,QAAAA,EACAlB,MAAAA,EACAqB,aAAa,sBACbC,kBAAkB,qBAClBH,aAAc,GACdQ,SAAO"}
{"version":3,"file":"ModelsPage-jCbZNYvM.js","sources":["../../node_modules/engine.io-parser/build/esm/commons.js","../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/index.js","../../node_modules/@socket.io/component-emitter/lib/esm/index.js","../../node_modules/engine.io-client/build/esm/globals.js","../../node_modules/engine.io-client/build/esm/util.js","../../node_modules/engine.io-client/build/esm/transport.js","../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../node_modules/engine.io-client/build/esm/transports/polling.js","../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../node_modules/engine.io-client/build/esm/transports/index.js","../../node_modules/engine.io-client/build/esm/transports/webtransport.js","../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../node_modules/engine.io-client/build/esm/socket.js","../../node_modules/socket.io-parser/build/esm/is-binary.js","../../node_modules/socket.io-parser/build/esm/binary.js","../../node_modules/socket.io-parser/build/esm/index.js","../../node_modules/socket.io-client/build/esm/on.js","../../node_modules/socket.io-client/build/esm/socket.js","../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../node_modules/socket.io-client/build/esm/manager.js","../../node_modules/socket.io-client/build/esm/index.js","../../node_modules/socket.io-client/build/esm/url.js","../../src/services/websocket.ts","../../src/components/ModelsPage.tsx"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import { io, Socket } from 'socket.io-client';\r\n\r\nexport interface TrainingProgressEvent {\r\n  modelId: number;\r\n  sessionId: number;\r\n  progress: {\r\n    epoch: number;\r\n    loss: number;\r\n    accuracy: number;\r\n    validationLoss?: number;\r\n    validationAccuracy?: number;\r\n    timestamp: string;\r\n    progress: number;\r\n  };\r\n}\r\n\r\nexport interface TrainingCompleteEvent {\r\n  modelId: number;\r\n  sessionId: number;\r\n  message: string;\r\n  finalAccuracy: number;\r\n  finalLoss: number;\r\n}\r\n\r\nexport interface TrainingErrorEvent {\r\n  modelId: number;\r\n  sessionId: number;\r\n  error: string;\r\n}\r\n\r\nexport interface WorkerMetricsEvent {\r\n  memoryUsage: number;\r\n  cpuUsage: number;\r\n  activeWorkers: number;\r\n  totalWorkers: number;\r\n  timestamp: string;\r\n}\r\n\r\nclass WebSocketService {\r\n  private socket: Socket | null = null;\r\n  private reconnectAttempts = 0;\r\n  private maxReconnectAttempts = 5;\r\n  private reconnectDelay = 1000;\r\n  private listeners = new Map<string, Set<Function>>();\r\n\r\n  /**\r\n   * Connect to WebSocket server\r\n   */\r\n  connect(url?: string): void {\r\n    if (this.socket?.connected) {\r\n      return;\r\n    }\r\n\r\n    // Connect to backend server on port 8080, not frontend port 5173\r\n    const socketUrl = url || `${window.location.protocol}//${window.location.hostname}:8080`;\r\n    \r\n    this.socket = io(socketUrl, {\r\n      transports: ['websocket', 'polling'],\r\n      timeout: 10000,\r\n      reconnection: true,\r\n      reconnectionAttempts: this.maxReconnectAttempts,\r\n      reconnectionDelay: this.reconnectDelay,\r\n    });\r\n\r\n    this.setupEventHandlers();\r\n  }\r\n\r\n  /**\r\n   * Setup WebSocket event handlers\r\n   */\r\n  private setupEventHandlers(): void {\r\n    if (!this.socket) return;\r\n\r\n    this.socket.on('connect', () => {\r\n      console.log('✅ WebSocket connected');\r\n      this.reconnectAttempts = 0;\r\n      this.emit('connected', true);\r\n    });\r\n\r\n    this.socket.on('disconnect', (reason) => {\r\n      console.log('❌ WebSocket disconnected:', reason);\r\n      this.emit('disconnected', reason);\r\n    });\r\n\r\n    this.socket.on('connect_error', (error) => {\r\n      console.error('❌ WebSocket connection error:', error);\r\n      this.reconnectAttempts++;\r\n      \r\n      if (this.reconnectAttempts >= this.maxReconnectAttempts) {\r\n        console.error('❌ Max reconnection attempts reached');\r\n        this.emit('connection_failed', error);\r\n      }\r\n    });\r\n\r\n    this.socket.on('reconnect', (attemptNumber) => {\r\n      console.log('🔄 WebSocket reconnected after', attemptNumber, 'attempts');\r\n      this.emit('reconnected', attemptNumber);\r\n    });\r\n\r\n    // Training events\r\n    this.socket.on('training_progress', (data: TrainingProgressEvent) => {\r\n      this.emit('training_progress', data);\r\n    });\r\n\r\n    this.socket.on('training_completed', (data: TrainingCompleteEvent) => {\r\n      this.emit('training_complete', data);\r\n    });\r\n\r\n    this.socket.on('training_failed', (data: TrainingErrorEvent) => {\r\n      this.emit('training_error', data);\r\n    });\r\n\r\n    this.socket.on('training_stopped', (data: { modelId: number }) => {\r\n      this.emit('training_stopped', data);\r\n    });\r\n\r\n    // Worker metrics\r\n    this.socket.on('worker_metrics', (data: WorkerMetricsEvent) => {\r\n      this.emit('worker_metrics', data);\r\n    });\r\n\r\n    // System events\r\n    this.socket.on('system_status', (data: any) => {\r\n      this.emit('system_status', data);\r\n    });\r\n\r\n    this.socket.on('model_updated', (data: any) => {\r\n      this.emit('model_updated', data);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Disconnect from WebSocket\r\n   */\r\n  disconnect(): void {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      this.socket = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add event listener\r\n   */\r\n  on(event: string, callback: Function): void {\r\n    if (!this.listeners.has(event)) {\r\n      this.listeners.set(event, new Set());\r\n    }\r\n    this.listeners.get(event)!.add(callback);\r\n  }\r\n\r\n  /**\r\n   * Remove event listener\r\n   */\r\n  off(event: string, callback: Function): void {\r\n    const eventListeners = this.listeners.get(event);\r\n    if (eventListeners) {\r\n      eventListeners.delete(callback);\r\n      if (eventListeners.size === 0) {\r\n        this.listeners.delete(event);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emit event to listeners\r\n   */\r\n  private emit(event: string, data?: any): void {\r\n    const eventListeners = this.listeners.get(event);\r\n    if (eventListeners) {\r\n      eventListeners.forEach(callback => {\r\n        try {\r\n          callback(data);\r\n        } catch (error) {\r\n          console.error('Error in WebSocket event callback:', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send message to server\r\n   */\r\n  send(event: string, data?: any): void {\r\n    if (this.socket?.connected) {\r\n      this.socket.emit(event, data);\r\n    } else {\r\n      console.warn('WebSocket not connected. Message not sent:', event, data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Join room\r\n   */\r\n  joinRoom(room: string): void {\r\n    this.send('join', { room });\r\n  }\r\n\r\n  /**\r\n   * Leave room\r\n   */\r\n  leaveRoom(room: string): void {\r\n    this.send('leave', { room });\r\n  }\r\n\r\n  /**\r\n   * Subscribe to model training updates\r\n   */\r\n  subscribeToModel(modelId: number): void {\r\n    this.joinRoom(`model_${modelId}`);\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe from model training updates\r\n   */\r\n  unsubscribeFromModel(modelId: number): void {\r\n    this.leaveRoom(`model_${modelId}`);\r\n  }\r\n\r\n  /**\r\n   * Get connection status\r\n   */\r\n  get isConnected(): boolean {\r\n    return this.socket?.connected || false;\r\n  }\r\n\r\n  /**\r\n   * Get socket ID\r\n   */\r\n  get socketId(): string | undefined {\r\n    return this.socket?.id;\r\n  }\r\n\r\n  /**\r\n   * Get reconnection attempts\r\n   */\r\n  get reconnectionAttempts(): number {\r\n    return this.reconnectAttempts;\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const websocketService = new WebSocketService();\r\n\r\n// Auto-connect disabled until backend WebSocket is properly configured\r\n// if (typeof window !== 'undefined') {\r\n//   websocketService.connect();\r\n// }\r\n\r\nexport default websocketService;","import React, { useState, useEffect } from 'react';\nimport { Plus, Play, Pause, Square, Trash2, Settings, Brain, TrendingUp, Clock, Database } from 'lucide-react';\nimport { API } from '../services/api';\nimport { websocketService } from '../services/websocket';\n\ninterface Model {\n  id?: string | number;\n  name: string;\n  type: string;\n  status: string;\n  accuracy: number;\n  loss: number;\n  epochs: number;\n  current_epoch: number;\n  dataset_id?: string | number;\n  config?: string;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface Dataset {\n  id?: string | number;\n  name: string;\n  samples: number;\n  size_mb: number;\n  status: string;\n  type?: string;\n  description?: string;\n}\n\ninterface TrainingProgress {\n  modelId: number;\n  epoch: number;\n  totalEpochs: number;\n  loss: number;\n  accuracy: number;\n}\n\nexport function ModelsPage() {\n  const [models, setModels] = useState<Model[]>([]);\n  const [datasets, setDatasets] = useState<Dataset[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [trainingProgress, setTrainingProgress] = useState<Map<string | number, TrainingProgress>>(new Map());\n  const [error, setError] = useState<string | null>(null);\n  const [newModel, setNewModel] = useState({\n    name: '',\n    type: 'persian-bert' as const,\n    dataset_id: '',\n    epochs: 10,\n    batch_size: 32,\n    learning_rate: 0.001\n  });\n\n  useEffect(() => {\n    loadData();\n    websocketService.connect();\n\n    const handleTrainingProgress = (data: any) => {\n      setTrainingProgress(prev => new Map(prev).set(data.modelId, data));\n    };\n\n    const handleTrainingCompleted = (data: any) => {\n      setTrainingProgress(prev => {\n        const newMap = new Map(prev);\n        newMap.delete(data.modelId);\n        return newMap;\n      });\n      loadModels(); // Refresh models to get updated status\n    };\n\n    websocketService.on('training_progress', handleTrainingProgress);\n    websocketService.on('training_complete', handleTrainingCompleted);\n\n    return () => {\n      websocketService.off('training_progress', handleTrainingProgress);\n      websocketService.off('training_complete', handleTrainingCompleted);\n      websocketService.disconnect();\n    };\n  }, []);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const [modelsData, datasetsData] = await Promise.all([\n        API.getModels(),\n        API.getDatasets()\n      ]);\n      setModels(modelsData || []);\n      setDatasets(datasetsData || []);\n    } catch (error) {\n      console.error('Failed to load data:', error);\n      setError('خطا در بارگذاری داده‌ها');\n      // Set fallback data\n      setModels([\n        {\n          id: 1,\n          name: 'مدل طبقه‌بندی اسناد حقوقی',\n          type: 'persian-bert',\n          status: 'completed',\n          accuracy: 0.91,\n          loss: 0.15,\n          epochs: 50,\n          current_epoch: 50,\n          dataset_id: 'legal-docs-1',\n          config: '{\"epochs\": 50, \"batch_size\": 32, \"learning_rate\": 0.001}',\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        },\n        {\n          id: 2,\n          name: 'مدل استخراج کلیدواژه',\n          type: 'dora',\n          status: 'training',\n          accuracy: 0.73,\n          loss: 0.35,\n          epochs: 100,\n          current_epoch: 45,\n          dataset_id: 'keywords-1',\n          config: '{\"epochs\": 100, \"batch_size\": 16, \"learning_rate\": 0.0005}',\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        }\n      ]);\n      setDatasets([\n        {\n          id: 'legal-docs-1',\n          name: 'اسناد حقوقی فارسی',\n          samples: 15000,\n          size_mb: 245,\n          status: 'ready',\n          type: 'legal-documents'\n        },\n        {\n          id: 'keywords-1',\n          name: 'کلیدواژه‌های حقوقی',\n          samples: 8500,\n          size_mb: 120,\n          status: 'ready',\n          type: 'keywords'\n        }\n      ]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadModels = async () => {\n    try {\n      const modelsData = await API.getModels();\n      setModels(modelsData || []);\n    } catch (error) {\n      console.error('Failed to load models:', error);\n    }\n  };\n\n  const handleCreateModel = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      await API.createModel({\n        name: newModel.name,\n        type: newModel.type,\n        dataset_id: newModel.dataset_id,\n        config: {\n          epochs: newModel.epochs,\n          batch_size: newModel.batch_size,\n          learning_rate: newModel.learning_rate\n        }\n      });\n      \n      setShowCreateModal(false);\n      setNewModel({\n        name: '',\n        type: 'persian-bert',\n        dataset_id: '',\n        epochs: 10,\n        batch_size: 32,\n        learning_rate: 0.001\n      });\n      loadModels();\n    } catch (error) {\n      console.error('Failed to create model:', error);\n      alert('خطا در ایجاد مدل');\n    }\n  };\n\n  const handleTrainModel = async (id: string | number | undefined) => {\n    if (!id) return;\n    try {\n      await API.startTraining(id);\n      loadModels();\n    } catch (error) {\n      console.error('Failed to start training:', error);\n      alert('خطا در شروع آموزش');\n    }\n  };\n\n  const handlePauseTraining = async (id: string | number | undefined) => {\n    if (!id) return;\n    try {\n      await API.pauseTraining(id);\n      loadModels();\n    } catch (error) {\n      console.error('Failed to pause training:', error);\n      alert('خطا در توقف آموزش');\n    }\n  };\n\n  const handleResumeTraining = async (id: string | number | undefined) => {\n    if (!id) return;\n    try {\n      await API.resumeTraining(id);\n      loadModels();\n    } catch (error) {\n      console.error('Failed to resume training:', error);\n      alert('خطا در ادامه آموزش');\n    }\n  };\n\n  const handleDeleteModel = async (id: string | number | undefined) => {\n    if (!id) return;\n    if (!confirm('آیا مطمئن هستید که می‌خواهید این مدل را حذف کنید؟')) {\n      return;\n    }\n\n    try {\n      // Note: apiService doesn't have deleteModel, so we'll just update the UI\n      setModels(prev => prev.filter(model => model.id !== id));\n    } catch (error) {\n      console.error('Failed to delete model:', error);\n      alert('خطا در حذف مدل');\n    }\n  };\n\n  const getModelTypeLabel = (type: string) => {\n    switch (type) {\n      case 'dora': return 'DoRA';\n      case 'qr-adaptor': return 'QR-Adaptor';\n      case 'persian-bert': return 'Persian BERT';\n      default: return type;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'training': return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n      case 'completed': return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n      case 'failed': return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n      case 'paused': return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n      default: return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\n    }\n  };\n\n  const getStatusLabel = (status: string) => {\n    switch (status) {\n      case 'idle': return 'آماده';\n      case 'training': return 'در حال آموزش';\n      case 'completed': return 'تکمیل شده';\n      case 'failed': return 'ناموفق';\n      case 'paused': return 'متوقف شده';\n      default: return status;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\" dir=\"rtl\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">مدیریت مدل‌ها</h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n            ایجاد، آموزش و مدیریت مدل‌های هوش مصنوعی حقوقی\n          </p>\n        </div>\n        <button\n          onClick={() => setShowCreateModal(true)}\n          className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center gap-2 transition-colors\"\n        >\n          <Plus className=\"h-4 w-4\" />\n          مدل جدید\n        </button>\n      </div>\n\n      {error && (\n        <div className=\"p-4 bg-yellow-50 dark:bg-yellow-950 border border-yellow-200 dark:border-yellow-800 rounded-lg\">\n          <div className=\"flex items-center gap-2\">\n            <Settings className=\"h-5 w-5 text-yellow-600\" />\n            <p className=\"text-yellow-800 dark:text-yellow-200\">{error}</p>\n          </div>\n          <p className=\"text-sm text-yellow-600 dark:text-yellow-400 mt-1\">\n            در حال نمایش داده‌های نمونه\n          </p>\n        </div>\n      )}\n\n      {/* Models Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {models.map((model) => {\n          const progress = model.id ? trainingProgress.get(model.id) : undefined;\n          const dataset = datasets.find(d => d.id === model.dataset_id);\n          \n          return (\n            <div key={model.id} className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n              {/* Model Header */}\n              <div className=\"flex justify-between items-start mb-4\">\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">{model.name}</h3>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">{getModelTypeLabel(model.type)}</p>\n                </div>\n                <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(model.status)}`}>\n                  {getStatusLabel(model.status)}\n                </span>\n              </div>\n\n              {/* Progress Bar for Training Models */}\n              {(model.status === 'training' && progress) && (\n                <div className=\"mb-4\">\n                  <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400 mb-1\">\n                    <span>Epoch {progress.epoch}/{progress.totalEpochs}</span>\n                    <span>{Math.round((progress.epoch / progress.totalEpochs) * 100)}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                    <div \n                      className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                      style={{ width: `${(progress.epoch / progress.totalEpochs) * 100}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                    <span>Loss: {progress.loss.toFixed(4)}</span>\n                    <span>Accuracy: {(progress.accuracy * 100).toFixed(1)}%</span>\n                  </div>\n                </div>\n              )}\n\n              {/* Model Stats */}\n              <div className=\"grid grid-cols-2 gap-4 mb-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                    {model.accuracy ? (model.accuracy * 100).toFixed(1) : '0.0'}%\n                  </div>\n                  <div className=\"text-xs text-gray-600 dark:text-gray-400\">دقت</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                    {model.current_epoch || 0}/{model.epochs || 0}\n                  </div>\n                  <div className=\"text-xs text-gray-600 dark:text-gray-400\">Epochs</div>\n                </div>\n              </div>\n\n              {/* Dataset Info */}\n              {dataset && (\n                <div className=\"flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400 mb-4\">\n                  <Database className=\"h-4 w-4\" />\n                  <span>{dataset.name}</span>\n                  <span className=\"text-xs\">({dataset.samples.toLocaleString('fa-IR')} نمونه)</span>\n                </div>\n              )}\n\n              {/* Action Buttons */}\n              <div className=\"flex gap-2\">\n                {model.status === 'idle' && (\n                  <button\n                    onClick={() => handleTrainModel(model.id)}\n                    className=\"flex-1 bg-green-600 hover:bg-green-700 text-white px-3 py-2 rounded text-sm flex items-center justify-center gap-1 transition-colors\"\n                  >\n                    <Play className=\"h-3 w-3\" />\n                    شروع آموزش\n                  </button>\n                )}\n                \n                {model.status === 'training' && (\n                  <button\n                    onClick={() => handlePauseTraining(model.id)}\n                    className=\"flex-1 bg-yellow-600 hover:bg-yellow-700 text-white px-3 py-2 rounded text-sm flex items-center justify-center gap-1 transition-colors\"\n                  >\n                    <Pause className=\"h-3 w-3\" />\n                    توقف\n                  </button>\n                )}\n                \n                {model.status === 'paused' && (\n                  <button\n                    onClick={() => handleResumeTraining(model.id)}\n                    className=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white px-3 py-2 rounded text-sm flex items-center justify-center gap-1 transition-colors\"\n                  >\n                    <Play className=\"h-3 w-3\" />\n                    ادامه\n                  </button>\n                )}\n\n                <button\n                  onClick={() => handleDeleteModel(model.id)}\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-2 rounded text-sm flex items-center justify-center transition-colors\"\n                >\n                  <Trash2 className=\"h-3 w-3\" />\n                </button>\n              </div>\n\n              {/* Creation Date */}\n              <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-3 text-center\">\n                ایجاد شده: {new Date(model.created_at).toLocaleDateString('fa-IR')}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Empty State */}\n      {models.length === 0 && (\n        <div className=\"text-center py-12\">\n          <Brain className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n            هیچ مدلی یافت نشد\n          </h3>\n          <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n            برای شروع، اولین مدل هوش مصنوعی خود را ایجاد کنید\n          </p>\n          <button\n            onClick={() => setShowCreateModal(true)}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center gap-2 mx-auto transition-colors\"\n          >\n            <Plus className=\"h-4 w-4\" />\n            ایجاد مدل جدید\n          </button>\n        </div>\n      )}\n\n      {/* Create Model Modal */}\n      {showCreateModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 w-full max-w-md mx-4\">\n            <h2 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">ایجاد مدل جدید</h2>\n            \n            <form onSubmit={handleCreateModel} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  نام مدل\n                </label>\n                <input\n                  type=\"text\"\n                  value={newModel.name}\n                  onChange={(e) => setNewModel(prev => ({ ...prev, name: e.target.value }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  نوع مدل\n                </label>\n                <select\n                  value={newModel.type}\n                  onChange={(e) => setNewModel(prev => ({ ...prev, type: e.target.value as any }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                >\n                  <option value=\"persian-bert\">Persian BERT</option>\n                  <option value=\"dora\">DoRA</option>\n                  <option value=\"qr-adaptor\">QR-Adaptor</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  دیتاست\n                </label>\n                <select\n                  value={newModel.dataset_id}\n                  onChange={(e) => setNewModel(prev => ({ ...prev, dataset_id: e.target.value }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                  required\n                >\n                  <option value=\"\">انتخاب دیتاست</option>\n                  {datasets.map(dataset => (\n                    <option key={dataset.id} value={dataset.id}>\n                      {dataset.name} ({dataset.samples.toLocaleString('fa-IR')} نمونه)\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"grid grid-cols-3 gap-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    Epochs\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={newModel.epochs}\n                    onChange={(e) => setNewModel(prev => ({ ...prev, epochs: parseInt(e.target.value) }))}\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                    min=\"1\"\n                    max=\"1000\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    Batch Size\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={newModel.batch_size}\n                    onChange={(e) => setNewModel(prev => ({ ...prev, batch_size: parseInt(e.target.value) }))}\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                    min=\"1\"\n                    max=\"512\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    Learning Rate\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={newModel.learning_rate}\n                    onChange={(e) => setNewModel(prev => ({ ...prev, learning_rate: parseFloat(e.target.value) }))}\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                    step=\"0.0001\"\n                    min=\"0.0001\"\n                    max=\"1\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex gap-3 pt-4\">\n                <button\n                  type=\"submit\"\n                  className=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-md transition-colors\"\n                >\n                  ایجاد مدل\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => setShowCreateModal(false)}\n                  className=\"flex-1 bg-gray-300 hover:bg-gray-400 text-gray-700 py-2 px-4 rounded-md transition-colors\"\n                >\n                  انصراف\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","i","length","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","[object Object]","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","nextTick","Promise","resolve","setTimeoutFn","globalThisShim","self","window","Function","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","randomString","Date","now","Math","random","TransportError","Error","reason","description","context","super","Transport","writable","query","socket","forceBase64","readyState","doOpen","doClose","onClose","packets","write","onPacket","details","onPause","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","Polling","_polling","name","_poll","pause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","close","count","join","encodePayload","doWrite","timestampRequests","timestampParam","sid","b64","createUri","value","XMLHttpRequest","err","hasCORS","empty","BaseXHR","location","isSSL","protocol","xd","req","request","method","xhrStatus","onError","onData","pollXhr","Request","createRequest","uri","_opts","_method","_uri","_data","_create","_a","xdomain","xhr","_xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","send","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","hasXHR2","newRequest","responseType","concat","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","transports","websocket","_packet","webtransport","_transport","WebTransport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","polling","assign","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","names","queryKey","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","EIO","id","priorWebsocketSuccess","createTransport","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","payloadSize","c","utf8Length","ceil","hasExpired","msg","options","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","o","map","DEFAULT_TRANSPORTS","filter","withNativeFile","File","deconstructPacket","buffers","packetData","pack","_deconstructPacket","placeholder","_placeholder","num","isArray","newData","attachments","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","isObject","Decoder","reviver","reconstructor","decodeString","isBinaryEvent","BINARY_EVENT","BINARY_ACK","EVENT","ACK","BinaryReconstructor","takeBinaryData","start","buf","nsp","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","finishedReconstruction","reconPack","binData","replacer","hasBinary","toJSON","encodeAsString","encodeAsBinary","stringify","deconstruction","unshift","freeze","connect","connect_error","disconnect","disconnecting","newListener","Socket","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","disconnected","subs","onpacket","active","subEvents","_readyState","_b","_c","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","_hasPingExpired","notifyOutgoingListeners","ackTimeout","timer","withError","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","deviation","floor","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","openSubDestroy","maybeReconnectOnOpen","errorSub","onping","ondata","ondecoded","add","_close","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","websocketService","__publicField","Map","socketUrl","maxReconnectAttempts","reconnectDelay","setupEventHandlers","console","log","reconnectAttempts","attemptNumber","has","set","Set","get","eventListeners","delete","warn","room","modelId","joinRoom","leaveRoom","socketId","ModelsPage","models","setModels","useState","datasets","setDatasets","loading","setLoading","showCreateModal","setShowCreateModal","trainingProgress","setTrainingProgress","setError","newModel","setNewModel","dataset_id","epochs","batch_size","learning_rate","useEffect","loadData","handleTrainingProgress","prev","handleTrainingCompleted","newMap","loadModels","async","modelsData","datasetsData","all","API","getModels","getDatasets","accuracy","loss","current_epoch","config","created_at","toISOString","updated_at","samples","size_mb","getModelTypeLabel","getStatusColor","getStatusLabel","jsx","className","children","jsxs","dir","onClick","Plus","Settings","model","progress","dataset","find","d","epoch","totalEpochs","round","style","width","toFixed","Database","toLocaleString","startTraining","alert","handleTrainModel","Play","pauseTraining","handlePauseTraining","Pause","resumeTraining","handleResumeTraining","confirm","handleDeleteModel","Trash2","toLocaleDateString","Brain","onSubmit","preventDefault","createModel","onChange","target","required","parseInt","parseFloat","step"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}
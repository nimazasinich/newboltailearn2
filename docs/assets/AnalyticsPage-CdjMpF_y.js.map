{"version":3,"file":"AnalyticsPage-CdjMpF_y.js","sources":["../../src/components/AnalyticsPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ModernCard } from './ui/ModernCard';\r\nimport { SlimBadge } from './ui/SlimBadge';\r\nimport { Progress } from './ui/Progress';\r\nimport { Button } from './ui/Button';\r\nimport { \r\n  BarChart3, \r\n  TrendingUp, \r\n  TrendingDown,\r\n  Activity, \r\n  Brain, \r\n  Database,\r\n  Clock,\r\n  Target,\r\n  Zap,\r\n  Calendar,\r\n  Download,\r\n  Filter,\r\n  RefreshCw\r\n} from 'lucide-react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  AreaChart,\r\n  Area,\r\n  BarChart,\r\n  Bar,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  RadialBarChart,\r\n  RadialBar\r\n} from 'recharts';\r\n\r\n// Mock Data برای Analytics\r\nconst MOCK_PERFORMANCE_DATA = Array.from({ length: 30 }, (_, i) => ({\r\n  date: new Date(Date.now() - (29 - i) * 24 * 60 * 60 * 1000).toLocaleDateString('fa-IR'),\r\n  models_trained: Math.floor(Math.random() * 8) + 2,\r\n  avg_accuracy: Math.random() * 0.2 + 0.8,\r\n  training_hours: Math.floor(Math.random() * 12) + 4,\r\n  success_rate: Math.random() * 0.15 + 0.85\r\n}));\r\n\r\nconst MOCK_MODEL_ACCURACY = [\r\n  { model: 'Persian BERT', accuracy: 94.2, improvement: 2.3, trend: 'up' },\r\n  { model: 'Legal QA', accuracy: 91.8, improvement: -0.5, trend: 'down' },\r\n  { model: 'Doc Classifier', accuracy: 88.5, improvement: 4.1, trend: 'up' },\r\n  { model: 'Contract Analyzer', accuracy: 85.7, improvement: 1.8, trend: 'up' },\r\n  { model: 'Case Predictor', accuracy: 82.3, improvement: -1.2, trend: 'down' }\r\n];\r\n\r\nconst MOCK_USAGE_STATS = [\r\n  { name: 'BERT Models', value: 45, color: '#3b82f6' },\r\n  { name: 'DORA Models', value: 30, color: '#10b981' },\r\n  { name: 'QR Adaptors', value: 20, color: '#f59e0b' },\r\n  { name: 'Custom Models', value: 5, color: '#ef4444' }\r\n];\r\n\r\nconst MOCK_TRAINING_EFFICIENCY = Array.from({ length: 24 }, (_, i) => ({\r\n  hour: `${i}:00`,\r\n  cpu_usage: Math.floor(Math.random() * 40) + 30,\r\n  gpu_usage: Math.floor(Math.random() * 60) + 20,\r\n  memory_usage: Math.floor(Math.random() * 30) + 40,\r\n  training_speed: Math.floor(Math.random() * 50) + 50\r\n}));\r\n\r\nconst MOCK_DATASET_USAGE = [\r\n  { dataset: 'Legal QA Persian', usage: 85, models: 12, last_used: '2 ساعت پیش' },\r\n  { dataset: 'Court Decisions', usage: 72, models: 8, last_used: '5 ساعت پیش' },\r\n  { dataset: 'Legal Documents', usage: 64, models: 6, last_used: '1 روز پیش' },\r\n  { dataset: 'Contracts', usage: 58, models: 4, last_used: '2 روز پیش' },\r\n  { dataset: 'Case Law', usage: 34, models: 2, last_used: '1 هفته پیش' }\r\n];\r\n\r\nexport default function AnalyticsPage() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [timeRange, setTimeRange] = useState('30d');\r\n  const [selectedMetric, setSelectedMetric] = useState('accuracy');\r\n\r\n  // آمار کلی\r\n  const totalModels = 30;\r\n  const avgAccuracy = MOCK_MODEL_ACCURACY.reduce((sum, model) => sum + model.accuracy, 0) / MOCK_MODEL_ACCURACY.length;\r\n  const totalTrainingHours = MOCK_PERFORMANCE_DATA.reduce((sum, day) => sum + day.training_hours, 0);\r\n  const avgSuccessRate = MOCK_PERFORMANCE_DATA.reduce((sum, day) => sum + day.success_rate, 0) / MOCK_PERFORMANCE_DATA.length * 100;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 dark:from-slate-900 dark:to-slate-800 p-6\">\r\n      <div className=\"max-w-7xl mx-auto space-y-8\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-4xl font-light text-slate-900 dark:text-slate-100 mb-2\">\r\n              تحلیل‌ها و گزارش‌ها\r\n            </h1>\r\n            <p className=\"text-lg text-slate-600 dark:text-slate-400\">\r\n              آمار جامع عملکرد مدل‌ها و سیستم\r\n            </p>\r\n          </div>\r\n          <div className=\"flex items-center gap-3\">\r\n            <select \r\n              value={timeRange} \r\n              onChange={(e) => setTimeRange(e.target.value)}\r\n              className=\"px-4 py-2 bg-white dark:bg-slate-800 border-0 rounded-xl shadow-sm\"\r\n            >\r\n              <option value=\"7d\">7 روز گذشته</option>\r\n              <option value=\"30d\">30 روز گذشته</option>\r\n              <option value=\"90d\">90 روز گذشته</option>\r\n            </select>\r\n            <Button variant=\"outline\" className=\"rounded-xl\">\r\n              <Download className=\"w-4 h-4 ml-2\" />\r\n              گزارش PDF\r\n            </Button>\r\n            <Button className=\"rounded-xl bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700\">\r\n              <RefreshCw className=\"w-4 h-4 ml-2\" />\r\n              به‌روزرسانی\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* KPI Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          <ModernCard variant=\"elevated\" className=\"text-center\">\r\n            <div className=\"inline-flex items-center justify-center w-14 h-14 bg-gradient-to-br from-blue-400 to-blue-600 rounded-2xl mb-4\">\r\n              <Brain className=\"w-7 h-7 text-white\" />\r\n            </div>\r\n            <h3 className=\"text-3xl font-bold text-slate-900 dark:text-slate-100 mb-1\">{totalModels}</h3>\r\n            <p className=\"text-slate-600 dark:text-slate-400\">کل مدل‌ها</p>\r\n            <div className=\"flex items-center justify-center gap-1 mt-2\">\r\n              <TrendingUp className=\"w-4 h-4 text-emerald-500\" />\r\n              <span className=\"text-sm text-emerald-600 font-medium\">+12% این ماه</span>\r\n            </div>\r\n          </ModernCard>\r\n\r\n          <ModernCard variant=\"elevated\" className=\"text-center\">\r\n            <div className=\"inline-flex items-center justify-center w-14 h-14 bg-gradient-to-br from-emerald-400 to-emerald-600 rounded-2xl mb-4\">\r\n              <Target className=\"w-7 h-7 text-white\" />\r\n            </div>\r\n            <h3 className=\"text-3xl font-bold text-slate-900 dark:text-slate-100 mb-1\">{avgAccuracy.toFixed(1)}%</h3>\r\n            <p className=\"text-slate-600 dark:text-slate-400\">میانگین دقت</p>\r\n            <div className=\"flex items-center justify-center gap-1 mt-2\">\r\n              <TrendingUp className=\"w-4 h-4 text-emerald-500\" />\r\n              <span className=\"text-sm text-emerald-600 font-medium\">+2.3% هفته گذشته</span>\r\n            </div>\r\n          </ModernCard>\r\n\r\n          <ModernCard variant=\"elevated\" className=\"text-center\">\r\n            <div className=\"inline-flex items-center justify-center w-14 h-14 bg-gradient-to-br from-purple-400 to-purple-600 rounded-2xl mb-4\">\r\n              <Clock className=\"w-7 h-7 text-white\" />\r\n            </div>\r\n            <h3 className=\"text-3xl font-bold text-slate-900 dark:text-slate-100 mb-1\">{totalTrainingHours}</h3>\r\n            <p className=\"text-slate-600 dark:text-slate-400\">ساعت آموزش</p>\r\n            <div className=\"flex items-center justify-center gap-1 mt-2\">\r\n              <TrendingUp className=\"w-4 h-4 text-emerald-500\" />\r\n              <span className=\"text-sm text-emerald-600 font-medium\">+8% این ماه</span>\r\n            </div>\r\n          </ModernCard>\r\n\r\n          <ModernCard variant=\"elevated\" className=\"text-center\">\r\n            <div className=\"inline-flex items-center justify-center w-14 h-14 bg-gradient-to-br from-amber-400 to-amber-600 rounded-2xl mb-4\">\r\n              <Zap className=\"w-7 h-7 text-white\" />\r\n            </div>\r\n            <h3 className=\"text-3xl font-bold text-slate-900 dark:text-slate-100 mb-1\">{avgSuccessRate.toFixed(1)}%</h3>\r\n            <p className=\"text-slate-600 dark:text-slate-400\">نرخ موفقیت</p>\r\n            <div className=\"flex items-center justify-center gap-1 mt-2\">\r\n              <TrendingDown className=\"w-4 h-4 text-rose-500\" />\r\n              <span className=\"text-sm text-rose-600 font-medium\">-1.2% هفته گذشته</span>\r\n            </div>\r\n          </ModernCard>\r\n        </div>\r\n\r\n        {/* Charts Row 1 */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n          {/* Performance Trend */}\r\n          <ModernCard variant=\"outlined\">\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n              <h3 className=\"text-xl font-semibold text-slate-900 dark:text-slate-100 flex items-center gap-2\">\r\n                <BarChart3 className=\"w-5 h-5 text-blue-500\" />\r\n                روند عملکرد ماهانه\r\n              </h3>\r\n              <SlimBadge variant=\"info\">30 روز گذشته</SlimBadge>\r\n            </div>\r\n            <div className=\"h-80\">\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <AreaChart data={MOCK_PERFORMANCE_DATA.slice(-7)}>\r\n                  <defs>\r\n                    <linearGradient id=\"accuracyGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                      <stop offset=\"5%\" stopColor=\"#3b82f6\" stopOpacity={0.3}/>\r\n                      <stop offset=\"95%\" stopColor=\"#3b82f6\" stopOpacity={0}/>\r\n                    </linearGradient>\r\n                  </defs>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e2e8f0\" />\r\n                  <XAxis \r\n                    dataKey=\"date\" \r\n                    tick={{ fontSize: 12 }}\r\n                    stroke=\"#64748b\"\r\n                  />\r\n                  <YAxis \r\n                    tick={{ fontSize: 12 }}\r\n                    stroke=\"#64748b\"\r\n                  />\r\n                  <Tooltip \r\n                    contentStyle={{\r\n                      backgroundColor: 'white',\r\n                      border: '1px solid #e2e8f0',\r\n                      borderRadius: '12px',\r\n                      boxShadow: '0 4px 6px -1px rgb(0 0 0 / 0.1)'\r\n                    }}\r\n                  />\r\n                  <Area \r\n                    type=\"monotone\" \r\n                    dataKey=\"avg_accuracy\" \r\n                    stroke=\"#3b82f6\" \r\n                    strokeWidth={3}\r\n                    fill=\"url(#accuracyGradient)\"\r\n                    name=\"میانگین دقت\"\r\n                  />\r\n                </AreaChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </ModernCard>\r\n\r\n          {/* Model Usage Distribution */}\r\n          <ModernCard variant=\"outlined\">\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n              <h3 className=\"text-xl font-semibold text-slate-900 dark:text-slate-100 flex items-center gap-2\">\r\n                <Activity className=\"w-5 h-5 text-purple-500\" />\r\n                توزیع استفاده از مدل‌ها\r\n              </h3>\r\n              <SlimBadge variant=\"neutral\">کل مدل‌ها</SlimBadge>\r\n            </div>\r\n            <div className=\"h-80\">\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <PieChart>\r\n                  <Pie\r\n                    data={MOCK_USAGE_STATS}\r\n                    cx=\"50%\"\r\n                    cy=\"50%\"\r\n                    innerRadius={60}\r\n                    outerRadius={120}\r\n                    paddingAngle={4}\r\n                    dataKey=\"value\"\r\n                  >\r\n                    {MOCK_USAGE_STATS.map((entry, index) => (\r\n                      <Cell key={`cell-${index}`} fill={entry.color} />\r\n                    ))}\r\n                  </Pie>\r\n                  <Tooltip \r\n                    contentStyle={{\r\n                      backgroundColor: 'white',\r\n                      border: '1px solid #e2e8f0',\r\n                      borderRadius: '12px'\r\n                    }}\r\n                  />\r\n                  <Legend />\r\n                </PieChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </ModernCard>\r\n        </div>\r\n\r\n        {/* Model Accuracy Comparison */}\r\n        <ModernCard variant=\"outlined\">\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h3 className=\"text-xl font-semibold text-slate-900 dark:text-slate-100 flex items-center gap-2\">\r\n              <Target className=\"w-5 h-5 text-emerald-500\" />\r\n              مقایسه دقت مدل‌ها\r\n            </h3>\r\n            <SlimBadge variant=\"success\">بروزرسانی شده</SlimBadge>\r\n          </div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n            {MOCK_MODEL_ACCURACY.map((model, index) => (\r\n              <div key={index} className=\"p-4 bg-slate-50 dark:bg-slate-800 rounded-xl\">\r\n                <div className=\"flex items-center justify-between mb-3\">\r\n                  <h4 className=\"font-medium text-slate-900 dark:text-slate-100\">{model.model}</h4>\r\n                  <SlimBadge variant={model.trend === 'up' ? 'success' : 'error'} size=\"xs\">\r\n                    {model.trend === 'up' ? (\r\n                      <TrendingUp className=\"w-3 h-3 ml-1\" />\r\n                    ) : (\r\n                      <TrendingDown className=\"w-3 h-3 ml-1\" />\r\n                    )}\r\n                    {Math.abs(model.improvement)}%\r\n                  </SlimBadge>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span className=\"text-slate-600 dark:text-slate-400\">دقت</span>\r\n                    <span className=\"font-semibold\">{model.accuracy}%</span>\r\n                  </div>\r\n                  <Progress value={model.accuracy} className=\"h-2\" />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </ModernCard>\r\n\r\n        {/* Training Efficiency */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n          <div className=\"lg:col-span-2\">\r\n            <ModernCard variant=\"outlined\">\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <h3 className=\"text-xl font-semibold text-slate-900 dark:text-slate-100 flex items-center gap-2\">\r\n                  <Zap className=\"w-5 h-5 text-amber-500\" />\r\n                  کارایی آموزش (24 ساعت)\r\n                </h3>\r\n                <SlimBadge variant=\"warning\">زنده</SlimBadge>\r\n              </div>\r\n              <div className=\"h-64\">\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <LineChart data={MOCK_TRAINING_EFFICIENCY.slice(-12)}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e2e8f0\" />\r\n                    <XAxis \r\n                      dataKey=\"hour\" \r\n                      tick={{ fontSize: 12 }}\r\n                      stroke=\"#64748b\"\r\n                    />\r\n                    <YAxis \r\n                      tick={{ fontSize: 12 }}\r\n                      stroke=\"#64748b\"\r\n                    />\r\n                    <Tooltip \r\n                      contentStyle={{\r\n                        backgroundColor: 'white',\r\n                        border: '1px solid #e2e8f0',\r\n                        borderRadius: '12px'\r\n                      }}\r\n                    />\r\n                    <Legend />\r\n                    <Line \r\n                      type=\"monotone\" \r\n                      dataKey=\"cpu_usage\" \r\n                      stroke=\"#3b82f6\" \r\n                      strokeWidth={2}\r\n                      name=\"CPU (%)\"\r\n                      dot={false}\r\n                    />\r\n                    <Line \r\n                      type=\"monotone\" \r\n                      dataKey=\"gpu_usage\" \r\n                      stroke=\"#10b981\" \r\n                      strokeWidth={2}\r\n                      name=\"GPU (%)\"\r\n                      dot={false}\r\n                    />\r\n                    <Line \r\n                      type=\"monotone\" \r\n                      dataKey=\"training_speed\" \r\n                      stroke=\"#f59e0b\" \r\n                      strokeWidth={2}\r\n                      name=\"سرعت آموزش\"\r\n                      dot={false}\r\n                    />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </ModernCard>\r\n          </div>\r\n\r\n          {/* Dataset Usage */}\r\n          <ModernCard variant=\"outlined\">\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n              <h3 className=\"text-xl font-semibold text-slate-900 dark:text-slate-100 flex items-center gap-2\">\r\n                <Database className=\"w-5 h-5 text-blue-500\" />\r\n                استفاده از دیتاست‌ها\r\n              </h3>\r\n            </div>\r\n            <div className=\"space-y-4\">\r\n              {MOCK_DATASET_USAGE.map((dataset, index) => (\r\n                <div key={index} className=\"p-3 bg-slate-50 dark:bg-slate-800 rounded-lg\">\r\n                  <div className=\"flex justify-between items-start mb-2\">\r\n                    <h4 className=\"font-medium text-sm text-slate-900 dark:text-slate-100\">\r\n                      {dataset.dataset}\r\n                    </h4>\r\n                    <SlimBadge variant=\"neutral\" size=\"xs\">{dataset.models} مدل</SlimBadge>\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <Progress value={dataset.usage} className=\"h-1.5\" />\r\n                    <div className=\"flex justify-between text-xs text-slate-500\">\r\n                      <span>{dataset.usage}% استفاده</span>\r\n                      <span>{dataset.last_used}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </ModernCard>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":["MOCK_PERFORMANCE_DATA","Array","from","length","_","i","date","Date","now","toLocaleDateString","models_trained","Math","floor","random","avg_accuracy","training_hours","success_rate","MOCK_MODEL_ACCURACY","model","accuracy","improvement","trend","MOCK_USAGE_STATS","name","value","color","MOCK_TRAINING_EFFICIENCY","hour","cpu_usage","gpu_usage","memory_usage","training_speed","MOCK_DATASET_USAGE","dataset","usage","models","last_used","AnalyticsPage","loading","setLoading","useState","timeRange","setTimeRange","selectedMetric","setSelectedMetric","avgAccuracy","reduce","sum","totalTrainingHours","day","avgSuccessRate","className","children","jsxs","jsx","onChange","e","target","Button","variant","Download","RefreshCw","ModernCard","Brain","TrendingUp","Target","toFixed","Clock","Zap","TrendingDown","BarChart3","SlimBadge","ResponsiveContainer","width","height","AreaChart","data","slice","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","stroke","XAxis","dataKey","tick","fontSize","YAxis","Tooltip","contentStyle","backgroundColor","border","borderRadius","boxShadow","Area","type","strokeWidth","fill","Activity","PieChart","Pie","cx","cy","innerRadius","outerRadius","paddingAngle","map","entry","index","Cell","Legend","size","abs","Progress","LineChart","Line","dot","Database"],"mappings":"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"}
{"version":3,"mappings":"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","names":["m","require$$0","client","createRoot","hydrateRoot","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","Action","PopStateEventType","createHashHistory","options","getLocation","createHref","validateLocation","window","document","defaultView","v5Compat","globalHistory","history","action","Pop","listener","index","getIndex","replaceState","state","idx","handlePop","nextIndex","delta","location","push","to","Push","createLocation","historyState","getHistoryState","url","pushState","error","DOMException","name","replace","Replace","createURL","base","origin","href","createPath","invariant","URL","listen","fn","Error","addEventListener","removeEventListener","encodeLocation","pathname","search","hash","go","n","getUrlBasedHistory","parsePath","substr","startsWith","usr","querySelector","getAttribute","hashIndex","indexOf","slice","warning","charAt","JSON","stringify","value","message","cond","console","warn","e","current","Math","random","toString","_ref","path","parsedPath","searchIndex","ResultType","matchRoutes","routes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","a","b","score","siblings","every","compareIndexes","routesMeta","map","meta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","matchRoutesImpl","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","joinPaths","concat","children","computeScore","forEach","_route$path","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","join","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","branch","allowPartial","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","memo","splatValue","v","decodeURIComponent","toLowerCase","startIndex","nextChar","getInvalidPathError","char","field","dest","getResolveToMatches","v7_relativeSplatPath","pathMatches","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","shift","fromPathname","pop","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","validMutationMethodsArr","Set","validRequestMethodsArr","DataRouterContext","React.createContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","React.useContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","cb","static","React.useLayoutEffect","useNavigate","router","ctx","useDataRouterContext","DataRouterHook","UseNavigateStable","id","useCurrentRouteId","DataRouterStateHook","activeRef","React.useRef","React.useCallback","navigate","fromRouteId","useNavigateStable","dataRouterContext","future","navigator","routePathnamesJson","UNSAFE_getResolveToMatches","parse","relative","useNavigateUnstable","OutletContext","useResolvedPath","_temp2","React.useMemo","useRoutes","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_dataRouterState","_future","errors","v7_partialHydration","initialized","errorIndex","findIndex","min","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","needsToRunLoader","loader","lazy","reduceRight","shouldRenderHydrateFallback","errorElement","defaultErrorElement","alreadyWarned$1","getChildren","Component","React.createElement","element","RenderedRoute","routeContext","ErrorBoundary","RenderErrorBoundary","revalidation","component","_renderMatches","Provider","navigationType","useRoutesImpl","DefaultErrorComponent","_state$errors","useDataRouterState","routeId","useRouteError","status","statusText","internal","isRouteErrorResponse","stack","preStyles","padding","backgroundColor","React.Fragment","style","fontStyle","React.Component","constructor","props","super","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","staticContext","_deepestRenderedBoundaryId","hookName","useRouteContext","thisRoute","Navigate","_ref4","isStatic","jsonPath","React.useEffect","Outlet","context","useOutlet","Route","_props","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","React.Children","React.isValidElement","treePath","type","hasErrorBoundary","shouldRevalidate","handle","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","Promise","_excluded","_excluded2","__reactRouterVersion","ViewTransitionContext","isTransitioning","startTransitionImpl","React","HashRouter","historyRef","setStateImpl","React.useState","v7_startTransition","setState","newState","UNSAFE_logV6DeprecationWarnings","renderFuture","isBrowser","createElement","ABSOLUTE_URL_REGEX","Link","React.forwardRef","_ref7","ref","absoluteHref","onClick","reloadDocument","preventScrollReset","viewTransition","UNSAFE_NavigationContext","isExternal","currentUrl","targetUrl","protocol","_temp","joinedPathname","useHref","internalOnClick","replaceProp","event","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","preventDefault","useLinkClickHandler","defaultPrevented","NavLink","_ref8","ariaCurrentProp","className","classNameProp","styleProp","routerState","UNSAFE_DataRouterStateContext","opts","vtContext","UNSAFE_DataRouterContext","useViewTransitionState","currentPath","currentLocation","nextPath","nextLocation","nextLocationPathname","navigation","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","Boolean","handleRetry","hasError","handleReload","reload","onError","logErrorToServer","fetch","method","headers","body","componentStack","timestamp","Date","toISOString","userAgent","category","logError","fallback","jsxs","jsx","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","reliabilityMonitor","components","Map","monitoringInterval","alertThresholds","errorRate","responseTime","uptime","initializeComponents","startMonitoring","set","lastCheck","errorCount","fallbackActive","metrics","setInterval","performHealthChecks","log","checks","Array","checkComponentHealth","allSettled","generateReliabilityReport","componentName","get","startTime","now","checkDatabaseHealth","checkCacheHealth","checkAIPipelineHealth","checkWebSocketHealth","checkAPIServerHealth","checkFileSystemHealth","checkExternalAPIsHealth","lastResponseTime","activateFallback","max","response","ok","json","database","tf","ws","wsConnection","readyState","WebSocket","OPEN","CONNECTING","timeout","values","failedComponents","c","degradedComponents","overallStatus","recommendations","generateRecommendations","report","failed","degraded","reliabilityReport","getReliabilityStatus","getComponentStatus","triggerHealthCheck","updateComponentMetrics","stopMonitoring","clearInterval","fallbackSystemManager","fallbackConfigs","fallbackStatuses","initializeFallbackConfigs","primaryComponent","fallbackComponent","activationThreshold","deactivationThreshold","maxRetries","retryDelay","enabled","config","active","activationTime","failureCount","successCount","lastSwitch","monitorFallbackSystems","evaluateFallbackCondition","primaryHealth","totalRequests","deactivateFallback","activateTensorFlowFallback","activateDatabaseFallback","activateCacheFallback","activateWebSocketFallback","activateAPIFallback","deactivateTensorFlowFallback","deactivateDatabaseFallback","deactivateCacheFallback","deactivateWebSocketFallback","deactivateAPIFallback","tensorflowFallbackActive","CustomEvent","dispatchEvent","databaseFallbackActive","cacheFallbackActive","websocketFallbackActive","apiFallbackActive","recordSuccess","fallbackName","recordFailure","getFallbackStatus","getAllFallbackStatuses","activateFallbackManually","deactivateFallbackManually","getFallbackReport","statuses","activeFallbacks","totalFallbacks","tfCompatibility","optimalBackend","compatibilityReport","backendConfigs","priority","mobileOptimized","fallbackTo","initialize","detectFeatures","configureEnvironment","verifyFunctionality","isMobile","isMobileDevice","browser","detectBrowser","webgl","Number","tf.ENV","getAsync","wasm","WebAssembly","simd","memory","device","testModel","createTestModel","testInput","tf.randomNormal","output","predict","data","val","isNaN","isFinite","currentBackend","tf.getBackend","dispose","attemptFallback","currentConfig","find","fallbackBackend","tf.setBackend","tf.ready","fallbackError","initializeTensorFlow","backends","getOptimalBackendOrder","backend","String","model","tf.sequential","layers","tf.layers.dense","units","activation","inputShape","compile","optimizer","loss","getBackendInfo","optimal","getPerformanceRecommendations","monitorPerformance","performance","tf.matMul","performanceScore","round","switchBackend","backendName","ModernSidebar","collapsed","setCollapsed","useState","expandedGroups","setExpandedGroups","activeTab","setActiveTab","systemStatus","setSystemStatus","models_training","cpu_usage","memory_usage","navRef","useRef","navHeight","setNavHeight","useEffect","group","label","items","icon","Home","description","BarChart3","badge","Sparkles","Brain","Scale","Gavel","Briefcase","Shield","Database","FileText","TrendingUp","Monitor","Activity","scrollHeight","interval","prev","floor","motion","div","initial","x","animate","transition","duration","stiffness","dir","layout","whileHover","scale","rotate","AnimatePresence","opacity","width","exit","whileTap","ChevronRight","maxHeight","section","sectionIndex","y","delay","toggleGroup","g","ChevronDown","height","item","itemIndex","layoutId","span","child","childIndex","Dot","position","bottom","left","right","zIndex","Server","mode","repeat","Infinity","CpuIcon","MemoryStick","Play","CheckCircle","async","fallbackActivatedAt","fallbackDeactivatedAt","initializeReliabilitySystems","catch","createClassGroupUtils","classMap","createClassMap","conflictingClassGroups","conflictingClassGroupModifiers","getClassGroupId","classParts","getGroupRecursive","getGroupIdForArbitraryProperty","getConflictingClassGroupIds","classGroupId","hasPostfixModifier","conflicts","classPartObject","currentClassPart","nextClassPartObject","nextPart","classGroupFromNextClassPart","validators","classRest","validator","arbitraryPropertyRegex","arbitraryPropertyClassName","exec","property","substring","theme","classGroups","processClassesRecursively","classGroup","classDefinition","getPart","isThemeGetter","entries","currentClassPartObject","pathPart","has","func","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","createParseClassName","prefix","experimentalParseClassName","parseClassName","modifiers","postfixModifierPosition","bracketDepth","parenDepth","modifierStart","currentCharacter","MODIFIER_SEPARATOR","baseClassNameWithImportantModifier","baseClassName","stripImportantModifier","hasImportantModifier","maybePostfixModifierPosition","fullPrefix","parseClassNameOriginal","createSortModifiers","orderSensitiveModifiers","fromEntries","modifier","sortedModifiers","unsortedModifiers","SPLIT_CLASSES_REGEX","twJoin","argument","resolvedValue","string","toValue","mix","k","createTailwindMerge","createConfigFirst","createConfigRest","configUtils","cacheGet","cacheSet","functionToCall","classList","previousConfig","createConfigCurrent","sortModifiers","createConfigUtils","tailwindMerge","cachedResult","classGroupsInConflict","classNames","trim","originalClassName","variantModifier","modifierId","classId","conflictGroups","mergeClassList","fromTheme","themeGetter","arbitraryValueRegex","arbitraryVariableRegex","fractionRegex","tshirtUnitRegex","lengthUnitRegex","colorFunctionRegex","shadowRegex","imageRegex","isFraction","isNumber","isInteger","isPercent","isTshirtSize","isAny","isLengthOnly","isNever","isShadow","isImage","isAnyNonArbitrary","isArbitraryValue","isArbitraryVariable","isArbitrarySize","getIsArbitraryValue","isLabelSize","isArbitraryLength","isLabelLength","isArbitraryNumber","isLabelNumber","isArbitraryPosition","isLabelPosition","isArbitraryImage","isLabelImage","isArbitraryShadow","isLabelShadow","isArbitraryVariableLength","getIsArbitraryVariable","isArbitraryVariableFamilyName","isLabelFamilyName","isArbitraryVariablePosition","isArbitraryVariableSize","isArbitraryVariableImage","isArbitraryVariableShadow","testLabel","testValue","shouldMatchNoLabel","twMerge","themeColor","themeFont","themeText","themeFontWeight","themeTracking","themeLeading","themeBreakpoint","themeContainer","themeSpacing","themeRadius","themeShadow","themeInsetShadow","themeTextShadow","themeDropShadow","themeBlur","themePerspective","themeAspect","themeEase","themeAnimate","scalePositionWithArbitrary","scaleUnambiguousSpacing","scaleInset","scaleGridTemplateColsRows","scaleGridColRowStartAndEnd","scaleGridColRowStartOrEnd","scaleGridAutoColsRows","scaleMargin","scaleSizing","scaleColor","scaleBgPosition","scaleBgSize","size","scaleGradientStopPosition","scaleRadius","scaleBorderWidth","scaleMaskImagePosition","scaleBlur","scaleRotate","scaleScale","scaleSkew","scaleTranslate","aspect","blur","breakpoint","color","container","ease","font","leading","perspective","radius","shadow","spacing","text","tracking","columns","box","display","sr","float","clear","isolation","object","overflow","overscroll","inset","start","top","visibility","z","basis","flex","grow","shrink","order","col","row","gap","justify","content","baseline","self","p","px","py","ps","pe","pt","pr","pb","pl","mx","my","ms","me","mt","mr","mb","ml","w","screen","h","list","placeholder","decoration","indent","align","whitespace","break","wrap","hyphens","bg","linear","radial","conic","via","rounded","border","divide","outline","ring","mask","closest","farthest","brightness","contrast","grayscale","invert","saturate","sepia","table","caption","backface","skew","transform","translate","accent","appearance","caret","scheme","cursor","resize","scroll","snap","touch","select","cn","inputs","clsx","Button","variant","loading","asChild","disabled","classes","default","destructive","secondary","ghost","link","sm","lg","isValidElement","childProps","cloneElement","AuthContext","createContext","AuthProvider","authState","setAuthState","user","isAuthenticated","checkAuthStatus","token","localStorage","getItem","userData","logout","removeItem","login","credentials","setItem","errorData","register","refreshToken","Authorization","updateUser","updates","updatedUser","useAuth","useContext","Input","displayName","API_BASE","trimmed","withoutTrailingSlash","normalizeApiBase","VITE_API_BASE","joinApiPath","basePath","endpoint","apiRequest","API_ENDPOINTS","MODELS","MODEL_BY_ID","MODEL_TRAIN","MODEL_PAUSE","MODEL_RESUME","MODEL_DELETE","MODEL_EXPORT","MODEL_CHECKPOINTS","ANALYTICS","ANALYTICS_ADVANCED","ANALYTICS_PERFORMANCE","ANALYTICS_USAGE","DATASETS","DATASET_BY_ID","DATASET_DOWNLOAD","MONITORING","MONITORING_LOGS","MONITORING_HEALTH","MONITORING_PERFORMANCE","LOGS","SETTINGS","TEAM","HEALTH","SYSTEM_METRICS","authService","success","getCurrentUser","updateProfile","changePassword","currentPassword","newPassword","requestPasswordReset","email","resetPassword","verifyEmail","LoginModal","isOpen","onClose","onSwitchToRegister","formData","setFormData","password","showPassword","setShowPassword","setLoading","setError","setSuccess","handleInputChange","handleClose","X","onSubmit","setTimeout","err","Mail","onChange","Lock","EyeOff","Eye","AlertCircle","RegisterModal","onSwitchToLogin","confirmPassword","showConfirmPassword","setShowConfirmPassword","User","AuthOverlay","showUserMenu","setShowUserMenu","showLoginModal","setShowLoginModal","showRegisterModal","setShowRegisterModal","Fragment","Settings","Bell","LogOut","EnhancedAppLayout","searchQuery","setSearchQuery","notifications","setNotifications","showNotifications","setShowNotifications","connectionStatus","setConnectionStatus","websocket","setTheme","getPageTitle","checkConnections","backendResponse","wsTest","resolve","onopen","close","onerror","title","read","unreadNotifications","getNotificationIcon","header","Search","conn","Wifi","WifiOff","notification","markAsRead","toLocaleTimeString","backgroundImage","backgroundSize","footer","EnhancedLandingPage","stats","setStats","models","datasets","accuracy","documents","isLoading","setIsLoading","finalStats","handleStart","features","achievements","suffix","damping","repeatType","Zap","ArrowLeft","achievement","toLocaleString","feature","Cpu","desc","Globe","Heart","tech","ToastContext","useToast","ToastProvider","toasts","setToasts","addToast","useCallback","toast","newToast","removeToast","clearToasts","ToastContainer","onRemove","ToastItem","Icon","XCircle","info","Info","animationDelay","animation","textContent","head","appendChild","t","noTrail","norm","csrf","z.object","cpu","z.number","used","total","percentage","process_memory","optional","system_uptime","platform","z.string","arch","training","completed","z.union","epochs","current_epoch","progress","dataset_id","estimated_time","learning_rate","batch_size","created_at","updated_at","metrics_history","z.array","epoch","samples","size_mb","records","last_used","HealthSchema","beacon","request","init","Accept","res","r","j","getCsrf","requestWithSchema","schema","z.ZodError","issues","API","SystemContext","SystemProvider","setStatus","healthHistory","setHealthHistory","lastHealthCheck","setLastHealthCheck","addHealthCheck","check","checkHealth","healthInterval","clearHealthHistory","NotificationContext","NotificationProvider","unreadCount","addNotification","newNotification","markAllAsRead","removeNotification","clearAll","lazyCompat","imp","Overview","__vitePreload","import","__VITE_PRELOAD__","DashboardAdvanced","UltimateDashboard","AnalyticsPage","DataPage","ModelsPage","MonitoringPage","LogsPage","SettingsPage","TeamPage","TrainingManagement","ProjectDownloader","DatasetGallery","AppLoading","App","Suspense","ReactDOM","getElementById","StrictMode"],"ignoreList":[0,1,2,3,10],"sources":["../../node_modules/react-dom/client.js","../../node_modules/@remix-run/router/dist/router.js","../../node_modules/react-router/dist/index.js","../../node_modules/react-router-dom/dist/index.js","../../src/components/ErrorBoundary.tsx","../../src/services/ReliabilityMonitor.ts","../../src/services/FallbackSystemManager.ts","../../src/services/ai/TensorFlowCompatibilityLayer.ts","../../src/components/layout/ModernSidebar.tsx","../../src/services/reliability-integration.ts","../../node_modules/tailwind-merge/dist/bundle-mjs.mjs","../../src/utils/cn.ts","../../src/components/ui/Button.tsx","../../src/contexts/AuthContext.tsx","../../src/components/ui/Input.tsx","../../src/lib/api-config.ts","../../src/services/auth.ts","../../src/components/Auth/LoginModal.tsx","../../src/components/Auth/RegisterModal.tsx","../../src/components/Auth/AuthOverlay.tsx","../../src/components/layout/EnhancedAppLayout.tsx","../../src/components/EnhancedLandingPage.tsx","../../src/components/ui/Toast.tsx","../../src/lib/config.ts","../../src/services/api.ts","../../src/context/SystemContext.tsx","../../src/components/NotificationSystem.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * @remix-run/router v1.23.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/v6/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial) {\n  if (allowPartial === void 0) {\n    allowPartial = false;\n  }\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/v6/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/v6/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/v6/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n *\n * @deprecated The `json` method is deprecated in favor of returning raw objects.\n * This method will be removed in v7.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass DataWithResponseInit {\n  constructor(data, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data;\n    this.init = init || null;\n  }\n}\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nfunction data(data, init) {\n  return new DataWithResponseInit(data, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n/**\n * @deprecated The `defer` method is deprecated in favor of returning raw\n * objects. This method will be removed in v7.\n */\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = new Set();\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate = undefined;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = undefined;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked, after the url\n            // restoration is also complete.  See:\n            // https://github.com/remix-run/react-router/issues/11613\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Remove any lingering deleted fetchers that have already been removed\n    // from state.fetchers\n    deletedFetchers.forEach(key => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        deletedFetchersKeys.push(key);\n      }\n    });\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      viewTransitionOpts: opts.viewTransitionOpts,\n      flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    } else {\n      // We already called deleteFetcher() on these, can remove them from this\n      // Set now that we've handed the keys off to the data layer\n      deletedFetchersKeys.forEach(key => deletedFetchers.delete(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts != null && opts.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ?\n    // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n    state.matches : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches: updatedMatches || matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: ResultType.error,\n            error: discoverResult.error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", state, request, [actionMatch], matches, null);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(_extends({\n          navigation: loadingNavigation\n        }, actionData !== undefined ? {\n          actionData\n        } : {}), {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = _extends({}, state.errors, errors);\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      matches,\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", state, fetchRequest, [match], requestMatches, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", state, fetchRequest, [match], matches, key);\n    let result = results[match.route.id];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, isNavigation, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true || redirect.response.headers.has(\"X-Remix-Replace\") ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, state, request, matchesToLoad, matches, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties);\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach(m => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, future.v7_relativeSplatPath)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(state, matches, matchesToLoad, fetchersToLoad, request) {\n    let currentMatches = state.matches;\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\"loader\", state, request, matchesToLoad, matches, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.controller) {\n        let results = await callDataStrategy(\"loader\", state, createClientSideRequest(init.history, f.path, f.controller.signal), [f.match], f.matches, f.key);\n        let result = results[f.match.route.id];\n        // Fetcher results are keyed by fetcher key from here on out, not routeId\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    await Promise.all([resolveNavigationDeferredResults(matches, loaderResults, request.signal, currentMatches, state.loaderData), resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    // If this fetcher was previously marked for deletion, unmark it since we\n    // have a new instance\n    if (deletedFetchers.has(key)) {\n      deletedFetchers.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    // If we opted into the flag we can clear this now since we're calling\n    // deleteFetcher() at the end of updateState() and we've already handed the\n    // deleted fetcher keys off to the data layer.\n    // If not, we're eagerly calling deleteFetcher() and we need to keep this\n    // Set populated until the next updateState call, and we'll clear\n    // `deletedFetchers` then\n    if (future.v7_fetcherPersist) {\n      deletedFetchers.delete(key);\n    }\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      deletedFetchers.add(key);\n      if (!future.v7_fetcherPersist) {\n        deleteFetcher(key);\n      }\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!patchRoutesOnNavigationImpl) {\n      return {\n        type: \"success\",\n        matches\n      };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties);\n          }\n        });\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      // Avoid loops if the second pass results in the same partial matches\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, dataStrategy);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(dataStrategy || defaultDataStrategy, type, null, request, matchesToLoad, matches, null, manifest, mapRouteProperties, requestContext);\n    let dataResults = {};\n    await Promise.all(matches.map(async match => {\n      if (!(match.route.id in results)) {\n        return;\n      }\n      let result = results[match.route.id];\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n    }));\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary) {\n  if (includeBoundary === void 0) {\n    includeBoundary = false;\n  }\n  let index = matches.findIndex(m => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);\n  }\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\n  var _childrenToPatch;\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(newRoute => !childrenToPatch.some(existingRoute => isSameRoute(newRoute, existingRoute)));\n  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties, [routeId || \"_\", \"patch\", String(((_childrenToPatch = childrenToPatch) == null ? void 0 : _childrenToPatch.length) || \"0\")], manifest);\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  // Most optimal check is by id\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  // Second is by pathing differences\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children.every((aChild, i) => {\n    var _existingRoute$childr;\n    return (_existingRoute$childr = existingRoute.children) == null ? void 0 : _existingRoute$childr.some(bChild => isSameRoute(aChild, bChild));\n  });\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy(_ref4) {\n  let {\n    matches\n  } = _ref4;\n  let matchesToLoad = matches.filter(m => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  return results.reduce((acc, result, i) => Object.assign(acc, {\n    [matchesToLoad[i].route.id]: result\n  }), {});\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties, requestContext) {\n  let loadRouteDefinitionsPromises = matches.map(m => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties, manifest) : undefined);\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some(m => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve = async handlerOverride => {\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        shouldLoad = true;\n      }\n      return shouldLoad ? callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({\n        type: ResultType.data,\n        result: undefined\n      });\n    };\n    return _extends({}, match, {\n      shouldLoad,\n      resolve\n    });\n  });\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext\n  });\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n  return results;\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadRoutePromise]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      var _result$init3, _result$init4;\n      if (result.data instanceof Error) {\n        var _result$init, _result$init2;\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n          headers: (_result$init2 = result.init) != null && _result$init2.headers ? new Headers(result.init.headers) : undefined\n        };\n      }\n      // Convert thrown data() to ErrorResponse instances\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(((_result$init3 = result.init) == null ? void 0 : _result$init3.status) || 500, undefined, result.data),\n        statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n        headers: (_result$init4 = result.init) != null && _result$init4.headers ? new Headers(result.init.headers) : undefined\n      };\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init5, _result$init6;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init5 = result.init) == null ? void 0 : _result$init5.status,\n      headers: ((_result$init6 = result.init) == null ? void 0 : _result$init6.headers) && new Headers(result.init.headers)\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    var _result$init7, _result$init8;\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: (_result$init7 = result.init) == null ? void 0 : _result$init7.status,\n      headers: (_result$init8 = result.init) != null && _result$init8.headers ? new Headers(result.init.headers) : undefined\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectDataStrategyResultResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveNavigationDeferredResults(matches, results, signal, currentMatches, currentLoaderData) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then(result => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveFetcherDeferredResults(matches, results, revalidatingFetchers) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      routeId,\n      controller\n    } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(controller, \"Expected an AbortController for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, controller.signal, true).then(result => {\n        if (result) {\n          results[key] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, decodePath as UNSAFE_decodePath, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, data, defer, generatePath, getStaticContextFromError, getToPathname, isDataWithResponseInit, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, replace, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.30.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_decodePath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, replace, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/v6/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/v6/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, UNSAFE_decodePath(pathname)), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/v6/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/v6/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/v6/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/v6/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/v6/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _future;\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else if ((_future = future) != null && _future.v7_partialHydration && parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState = dataRouterState) == null ? void 0 : _dataRouterState.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned$1 = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned$1[key]) {\n    alreadyWarned$1[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\nconst alreadyWarned = {};\nfunction warnOnce(key, message) {\n  if (process.env.NODE_ENV !== \"production\" && !alreadyWarned[message]) {\n    alreadyWarned[message] = true;\n    console.warn(message);\n  }\n}\nconst logDeprecation = (flag, msg, link) => warnOnce(flag, \"\\u26A0\\uFE0F React Router Future Flag Warning: \" + msg + \". \" + (\"You can use the `\" + flag + \"` future flag to opt-in early. \") + (\"For more information, see \" + link + \".\"));\nfunction logV6DeprecationWarnings(renderFuture, routerFuture) {\n  if ((renderFuture == null ? void 0 : renderFuture.v7_startTransition) === undefined) {\n    logDeprecation(\"v7_startTransition\", \"React Router will begin wrapping state updates in `React.startTransition` in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_starttransition\");\n  }\n  if ((renderFuture == null ? void 0 : renderFuture.v7_relativeSplatPath) === undefined && (!routerFuture || routerFuture.v7_relativeSplatPath === undefined)) {\n    logDeprecation(\"v7_relativeSplatPath\", \"Relative route resolution within Splat routes is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath\");\n  }\n  if (routerFuture) {\n    if (routerFuture.v7_fetcherPersist === undefined) {\n      logDeprecation(\"v7_fetcherPersist\", \"The persistence behavior of fetchers is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_fetcherpersist\");\n    }\n    if (routerFuture.v7_normalizeFormMethod === undefined) {\n      logDeprecation(\"v7_normalizeFormMethod\", \"Casing of `formMethod` fields is being normalized to uppercase in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_normalizeformmethod\");\n    }\n    if (routerFuture.v7_partialHydration === undefined) {\n      logDeprecation(\"v7_partialHydration\", \"`RouterProvider` hydration behavior is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_partialhydration\");\n    }\n    if (routerFuture.v7_skipActionErrorRevalidation === undefined) {\n      logDeprecation(\"v7_skipActionErrorRevalidation\", \"The revalidation behavior after 4xx/5xx `action` responses is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_skipactionerrorrevalidation\");\n    }\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  React.useEffect(() => logV6DeprecationWarnings(future, router.future), [router, future]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/v6/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/v6/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/v6/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/v6/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/v6/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/v6/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/v6/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.hydrateFallbackElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, logV6DeprecationWarnings as UNSAFE_logV6DeprecationWarnings, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.30.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_logV6DeprecationWarnings, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, replace, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\nexport { UNSAFE_ErrorResponseImpl } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"viewTransition\"];\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"6\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      flushSync: flushSync,\n      viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    let isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  let routerFuture = React.useMemo(() => ({\n    v7_relativeSplatPath: router.future.v7_relativeSplatPath\n  }), [router.future.v7_relativeSplatPath]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future, router.future), [future, router.future]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: routerFuture\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(MemoizedDataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = /*#__PURE__*/React.memo(DataRoutes);\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    viewTransition: viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        flushSync: options.flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        flushSync: options.flushSync,\n        viewTransition: options.viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some(v => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit, useViewTransitionState };\n//# sourceMappingURL=index.js.map\n","import React, { Component, ErrorInfo, ReactNode } from 'react';\n\ninterface Props {\n  children: ReactNode;\n  fallback?: ReactNode;\n  onError?: (error: Error, errorInfo: ErrorInfo) => void;\n}\n\ninterface State {\n  hasError: boolean;\n  error?: Error;\n  errorInfo?: ErrorInfo;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    // Update state so the next render will show the fallback UI\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    // Log error to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.error('ErrorBoundary caught an error:', error, errorInfo);\n    }\n\n    // Call custom error handler if provided\n    this.props.onError?.(error, errorInfo);\n\n    // Log error to server\n    this.logErrorToServer(error, errorInfo);\n\n    this.setState({ error, errorInfo });\n  }\n\n  private async logErrorToServer(error: Error, errorInfo: ErrorInfo) {\n    try {\n      await fetch('/api/errors/log', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: error.message,\n          stack: error.stack,\n          componentStack: errorInfo.componentStack,\n          timestamp: new Date().toISOString(),\n          userAgent: navigator.userAgent,\n          url: window.location.href,\n          category: 'react_error_boundary'\n        }),\n      });\n    } catch (logError) {\n      console.error('Failed to log error to server:', logError);\n    }\n  }\n\n  private handleRetry = () => {\n    this.setState({ hasError: false, error: undefined, errorInfo: undefined });\n  };\n\n  private handleReload = () => {\n    window.location.reload();\n  };\n\n  render() {\n    if (this.state.hasError) {\n      // Custom fallback UI\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      // Default error UI\n      return (\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n          <div className=\"max-w-md w-full bg-white shadow-lg rounded-lg p-6\">\n            <div className=\"flex items-center justify-center w-12 h-12 mx-auto bg-red-100 rounded-full mb-4\">\n              <svg\n                className=\"w-6 h-6 text-red-600\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"\n                />\n              </svg>\n            </div>\n            \n            <h2 className=\"text-xl font-semibold text-gray-900 text-center mb-2\">\n              خطایی رخ داده است\n            </h2>\n            \n            <p className=\"text-gray-600 text-center mb-6\">\n              متأسفانه خطایی در برنامه رخ داده است. لطفاً دوباره تلاش کنید.\n            </p>\n\n            {process.env.NODE_ENV === 'development' && this.state.error && (\n              <div className=\"mb-6 p-4 bg-gray-100 rounded-lg\">\n                <h3 className=\"font-medium text-gray-900 mb-2\">جزئیات خطا:</h3>\n                <pre className=\"text-sm text-gray-700 whitespace-pre-wrap\">\n                  {this.state.error.message}\n                </pre>\n                {this.state.error.stack && (\n                  <details className=\"mt-2\">\n                    <summary className=\"cursor-pointer text-sm text-gray-600\">\n                      Stack Trace\n                    </summary>\n                    <pre className=\"text-xs text-gray-500 mt-2 whitespace-pre-wrap\">\n                      {this.state.error.stack}\n                    </pre>\n                  </details>\n                )}\n              </div>\n            )}\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={this.handleRetry}\n                className=\"flex-1 bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors\"\n              >\n                تلاش مجدد\n              </button>\n              <button\n                onClick={this.handleReload}\n                className=\"flex-1 bg-gray-600 text-white px-4 py-2 rounded-md hover:bg-gray-700 transition-colors\"\n              >\n                بارگذاری مجدد\n              </button>\n            </div>\n\n            <div className=\"mt-4 text-center\">\n              <a\n                href=\"/\"\n                className=\"text-blue-600 hover:text-blue-800 text-sm\"\n              >\n                بازگشت به صفحه اصلی\n              </a>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n// Hook for functional components to handle errors\nexport const useErrorHandler = () => {\n  const handleError = React.useCallback((error: Error, errorInfo?: any) => {\n    console.error('Error caught by useErrorHandler:', error, errorInfo);\n    \n    // Log to server\n    fetch('/api/errors/log', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        message: error.message,\n        stack: error.stack,\n        errorInfo,\n        timestamp: new Date().toISOString(),\n        userAgent: navigator.userAgent,\n        url: window.location.href,\n        category: 'react_hook_error'\n      }),\n    }).catch(logError => {\n      console.error('Failed to log error to server:', logError);\n    });\n  }, []);\n\n  return { handleError };\n};\n\n// Higher-order component for error handling\nexport const withErrorHandler = <P extends object>(\n  Component: React.ComponentType<P>\n) => {\n  return class WithErrorHandler extends React.Component<P> {\n    componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n      console.error('Error caught by withErrorHandler:', error, errorInfo);\n      \n      // Log to server\n      fetch('/api/errors/log', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: error.message,\n          stack: error.stack,\n          componentStack: errorInfo.componentStack,\n          timestamp: new Date().toISOString(),\n          userAgent: navigator.userAgent,\n          url: window.location.href,\n          category: 'hoc_error_handler'\n        }),\n      }).catch(logError => {\n        console.error('Failed to log error to server:', logError);\n      });\n    }\n\n    render() {\n      return <Component {...this.props} />;\n    }\n  };\n};\n\nexport default ErrorBoundary;","/**\n * Reliability Monitor\n * Comprehensive monitoring and fallback management for all system components\n */\n\n// Timer type for compatibility\ntype Timer = ReturnType<typeof setTimeout>;\n\nexport interface ComponentStatus {\n  name: string;\n  status: 'healthy' | 'degraded' | 'failed' | 'unknown';\n  lastCheck: Date;\n  uptime: number;\n  errorCount: number;\n  fallbackActive: boolean;\n  metrics: Record<string, any>;\n}\n\nexport interface ReliabilityReport {\n  overallStatus: 'healthy' | 'degraded' | 'critical';\n  components: ComponentStatus[];\n  recommendations: string[];\n  timestamp: Date;\n}\n\nexport class ReliabilityMonitor {\n  private components: Map<string, ComponentStatus> = new Map();\n  private monitoringInterval: Timer | null = null;\n  private alertThresholds = {\n    errorRate: 0.1, // 10% error rate\n    responseTime: 5000, // 5 seconds\n    uptime: 0.95 // 95% uptime\n  };\n\n  constructor() {\n    this.initializeComponents();\n    this.startMonitoring();\n  }\n\n  private initializeComponents(): void {\n    const initialComponents = [\n      'database',\n      'cache',\n      'ai-pipeline',\n      'websocket',\n      'api-server',\n      'file-system',\n      'external-apis'\n    ];\n\n    initialComponents.forEach(name => {\n      this.components.set(name, {\n        name,\n        status: 'unknown',\n        lastCheck: new Date(),\n        uptime: 0,\n        errorCount: 0,\n        fallbackActive: false,\n        metrics: {}\n      });\n    });\n  }\n\n  /**\n   * Start continuous monitoring\n   */\n  private startMonitoring(): void {\n    this.monitoringInterval = setInterval(() => {\n      this.performHealthChecks();\n    }, 30000); // Check every 30 seconds\n\n    console.log('🔍 Reliability monitoring started');\n  }\n\n  /**\n   * Perform health checks on all components\n   */\n  private async performHealthChecks(): Promise<void> {\n    const checks = Array.from(this.components.keys()).map(name => \n      this.checkComponentHealth(name)\n    );\n\n    await Promise.allSettled(checks);\n    this.generateReliabilityReport();\n  }\n\n  /**\n   * Check health of a specific component\n   */\n  private async checkComponentHealth(componentName: string): Promise<void> {\n    const component = this.components.get(componentName);\n    if (!component) return;\n\n    try {\n      const startTime = Date.now();\n      let status: ComponentStatus['status'] = 'healthy';\n      let fallbackActive = false;\n\n      switch (componentName) {\n        case 'database':\n          status = await this.checkDatabaseHealth();\n          break;\n        case 'cache':\n          status = await this.checkCacheHealth();\n          break;\n        case 'ai-pipeline':\n          status = await this.checkAIPipelineHealth();\n          break;\n        case 'websocket':\n          status = await this.checkWebSocketHealth();\n          break;\n        case 'api-server':\n          status = await this.checkAPIServerHealth();\n          break;\n        case 'file-system':\n          status = await this.checkFileSystemHealth();\n          break;\n        case 'external-apis':\n          status = await this.checkExternalAPIsHealth();\n          break;\n      }\n\n      const responseTime = Date.now() - startTime;\n      \n      // Update component status\n      component.status = status;\n      component.lastCheck = new Date();\n      component.metrics.responseTime = responseTime;\n      component.metrics.lastResponseTime = responseTime;\n\n      // Check if fallback should be activated\n      if (status === 'failed' && !component.fallbackActive) {\n        fallbackActive = await this.activateFallback(componentName);\n        component.fallbackActive = fallbackActive;\n      }\n\n      // Update uptime\n      if (status === 'healthy') {\n        component.uptime = Math.min(1, component.uptime + 0.01);\n      } else {\n        component.uptime = Math.max(0, component.uptime - 0.05);\n        component.errorCount++;\n      }\n\n    } catch (error) {\n      console.error(`❌ Health check failed for ${componentName}:`, error);\n      component.status = 'failed';\n      component.errorCount++;\n    }\n  }\n\n  /**\n   * Check database health\n   */\n  private async checkDatabaseHealth(): Promise<ComponentStatus['status']> {\n    try {\n      // Simulate database health check\n      const response = await fetch('/api/health');\n      if (response.ok) {\n        const data = await response.json();\n        return data.database === 'connected' ? 'healthy' : 'degraded';\n      }\n      return 'failed';\n    } catch (error) {\n      return 'failed';\n    }\n  }\n\n  /**\n   * Check cache health\n   */\n  private async checkCacheHealth(): Promise<ComponentStatus['status']> {\n    try {\n      // Simulate cache health check\n      const testKey = 'health-check-' + Date.now();\n      const testValue = 'test-value';\n      \n      // This would be replaced with actual cache operations\n      // await cache.set(testKey, testValue, 10);\n      // const retrieved = await cache.get(testKey);\n      // await cache.del(testKey);\n      \n      return 'healthy'; // Simulated\n    } catch (error) {\n      return 'failed';\n    }\n  }\n\n  /**\n   * Check AI pipeline health\n   */\n  private async checkAIPipelineHealth(): Promise<ComponentStatus['status']> {\n    try {\n      // Check if TensorFlow.js is available and functional\n      const tfAvailable = typeof window !== 'undefined' && \n        (window as any).tf !== undefined;\n      \n      if (!tfAvailable) {\n        return 'degraded'; // Using fallback\n      }\n      \n      return 'healthy';\n    } catch (error) {\n      return 'failed';\n    }\n  }\n\n  /**\n   * Check WebSocket health\n   */\n  private async checkWebSocketHealth(): Promise<ComponentStatus['status']> {\n    try {\n      // Check WebSocket connection status\n      const ws = (window as any).wsConnection;\n      if (ws && ws.readyState === WebSocket.OPEN) {\n        return 'healthy';\n      } else if (ws && ws.readyState === WebSocket.CONNECTING) {\n        return 'degraded';\n      } else {\n        return 'failed';\n      }\n    } catch (error) {\n      return 'failed';\n    }\n  }\n\n  /**\n   * Check API server health\n   */\n  private async checkAPIServerHealth(): Promise<ComponentStatus['status']> {\n    try {\n      const response = await fetch('/api/health', {\n        method: 'GET',\n        timeout: 5000\n      } as any);\n      \n      if (response.ok) {\n        return 'healthy';\n      } else if (response.status >= 500) {\n        return 'failed';\n      } else {\n        return 'degraded';\n      }\n    } catch (error) {\n      return 'failed';\n    }\n  }\n\n  /**\n   * Check file system health\n   */\n  private async checkFileSystemHealth(): Promise<ComponentStatus['status']> {\n    try {\n      // Simulate file system check\n      // In a real implementation, this would check disk space, permissions, etc.\n      if (Math.random() < 0.1) {\n        throw new Error('Simulated file system failure');\n      }\n      return 'healthy';\n    } catch (error) {\n      return 'failed';\n    }\n  }\n\n  /**\n   * Check external APIs health\n   */\n  private async checkExternalAPIsHealth(): Promise<ComponentStatus['status']> {\n    try {\n      // Check external API dependencies\n      // This would check HuggingFace API, etc.\n      if (Math.random() < 0.1) {\n        throw new Error('Simulated API failure');\n      }\n      return 'healthy';\n    } catch (error) {\n      return 'failed';\n    }\n  }\n\n  /**\n   * Activate fallback for a component\n   */\n  private async activateFallback(componentName: string): Promise<boolean> {\n    try {\n      console.log(`🔄 Activating fallback for ${componentName}...`);\n      \n      switch (componentName) {\n        case 'database':\n          // Activate database fallback (mock data)\n          return true;\n        case 'cache':\n          // Activate cache fallback (in-memory)\n          return true;\n        case 'ai-pipeline':\n          // Activate AI fallback (mock predictions)\n          return true;\n        case 'websocket':\n          // Activate WebSocket fallback (polling)\n          return true;\n        default:\n          return false;\n      }\n    } catch (error) {\n      console.error(`❌ Failed to activate fallback for ${componentName}:`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Generate comprehensive reliability report\n   */\n  private generateReliabilityReport(): void {\n    const components = Array.from(this.components.values());\n    const failedComponents = components.filter(c => c.status === 'failed');\n    const degradedComponents = components.filter(c => c.status === 'degraded');\n    \n    let overallStatus: ReliabilityReport['overallStatus'];\n    if (failedComponents.length > 0) {\n      overallStatus = 'critical';\n    } else if (degradedComponents.length > 0) {\n      overallStatus = 'degraded';\n    } else {\n      overallStatus = 'healthy';\n    }\n\n    const recommendations = this.generateRecommendations(components);\n\n    const report: ReliabilityReport = {\n      overallStatus,\n      components,\n      recommendations,\n      timestamp: new Date()\n    };\n\n    // Log report\n    console.log('📊 Reliability Report:', {\n      status: overallStatus,\n      failed: failedComponents.length,\n      degraded: degradedComponents.length,\n      recommendations: recommendations.length\n    });\n\n    // Store report for API access\n    (window as any).reliabilityReport = report;\n  }\n\n  /**\n   * Generate recommendations based on component status\n   */\n  private generateRecommendations(components: ComponentStatus[]): string[] {\n    const recommendations: string[] = [];\n\n    components.forEach(component => {\n      if (component.status === 'failed') {\n        recommendations.push(`Critical: ${component.name} is down - immediate attention required`);\n      } else if (component.status === 'degraded') {\n        recommendations.push(`Warning: ${component.name} is degraded - monitor closely`);\n      }\n\n      if (component.errorCount > 10) {\n        recommendations.push(`High error rate detected in ${component.name} - investigate root cause`);\n      }\n\n      if (component.uptime < 0.9) {\n        recommendations.push(`Low uptime for ${component.name} - consider redundancy`);\n      }\n\n      if (component.metrics.responseTime > this.alertThresholds.responseTime) {\n        recommendations.push(`Slow response time for ${component.name} - optimize performance`);\n      }\n    });\n\n    return recommendations;\n  }\n\n  /**\n   * Get current reliability status\n   */\n  getReliabilityStatus(): ReliabilityReport {\n    return (window as any).reliabilityReport || {\n      overallStatus: 'unknown',\n      components: Array.from(this.components.values()),\n      recommendations: [],\n      timestamp: new Date()\n    };\n  }\n\n  /**\n   * Get component status\n   */\n  getComponentStatus(componentName: string): ComponentStatus | null {\n    return this.components.get(componentName) || null;\n  }\n\n  /**\n   * Manually trigger health check\n   */\n  async triggerHealthCheck(componentName?: string): Promise<void> {\n    if (componentName) {\n      await this.checkComponentHealth(componentName);\n    } else {\n      await this.performHealthChecks();\n    }\n  }\n\n  /**\n   * Update component metrics\n   */\n  updateComponentMetrics(componentName: string, metrics: Record<string, any>): void {\n    const component = this.components.get(componentName);\n    if (component) {\n      component.metrics = { ...component.metrics, ...metrics };\n    }\n  }\n\n  /**\n   * Stop monitoring\n   */\n  stopMonitoring(): void {\n    if (this.monitoringInterval) {\n      clearInterval(this.monitoringInterval);\n      this.monitoringInterval = null;\n    }\n    console.log('🛑 Reliability monitoring stopped');\n  }\n}\n\n// Export singleton instance\nexport const reliabilityMonitor = new ReliabilityMonitor();\n","/**\n * Fallback System Manager\n * Centralized management of all fallback mechanisms across the system\n */\n\n// Timer type for compatibility\ntype Timer = ReturnType<typeof setTimeout>;\n\nexport interface FallbackConfig {\n  name: string;\n  primaryComponent: string;\n  fallbackComponent: string;\n  activationThreshold: number;\n  deactivationThreshold: number;\n  maxRetries: number;\n  retryDelay: number;\n  enabled: boolean;\n}\n\nexport interface FallbackStatus {\n  name: string;\n  active: boolean;\n  activationTime: Date | null;\n  failureCount: number;\n  successCount: number;\n  lastSwitch: Date | null;\n  metrics: {\n    uptime: number;\n    errorRate: number;\n    responseTime: number;\n  };\n}\n\nexport class FallbackSystemManager {\n  private fallbackConfigs: Map<string, FallbackConfig> = new Map();\n  private fallbackStatuses: Map<string, FallbackStatus> = new Map();\n  private monitoringInterval: Timer | null = null;\n\n  constructor() {\n    this.initializeFallbackConfigs();\n    this.startMonitoring();\n  }\n\n  /**\n   * Initialize fallback configurations for all system components\n   */\n  private initializeFallbackConfigs(): void {\n    const configs: FallbackConfig[] = [\n      {\n        name: 'tensorflow-fallback',\n        primaryComponent: 'tensorflow-native',\n        fallbackComponent: 'tensorflow-mock',\n        activationThreshold: 0.1, // 10% failure rate\n        deactivationThreshold: 0.05, // 5% failure rate\n        maxRetries: 3,\n        retryDelay: 5000,\n        enabled: true\n      },\n      {\n        name: 'database-fallback',\n        primaryComponent: 'database-primary',\n        fallbackComponent: 'database-mock',\n        activationThreshold: 0.2,\n        deactivationThreshold: 0.1,\n        maxRetries: 5,\n        retryDelay: 2000,\n        enabled: true\n      },\n      {\n        name: 'cache-fallback',\n        primaryComponent: 'redis-cache',\n        fallbackComponent: 'memory-cache',\n        activationThreshold: 0.15,\n        deactivationThreshold: 0.08,\n        maxRetries: 3,\n        retryDelay: 1000,\n        enabled: true\n      },\n      {\n        name: 'websocket-fallback',\n        primaryComponent: 'websocket-realtime',\n        fallbackComponent: 'websocket-polling',\n        activationThreshold: 0.3,\n        deactivationThreshold: 0.15,\n        maxRetries: 5,\n        retryDelay: 3000,\n        enabled: true\n      },\n      {\n        name: 'api-fallback',\n        primaryComponent: 'api-primary',\n        fallbackComponent: 'api-cached',\n        activationThreshold: 0.25,\n        deactivationThreshold: 0.12,\n        maxRetries: 3,\n        retryDelay: 2000,\n        enabled: true\n      }\n    ];\n\n    configs.forEach(config => {\n      this.fallbackConfigs.set(config.name, config);\n      this.fallbackStatuses.set(config.name, {\n        name: config.name,\n        active: false,\n        activationTime: null,\n        failureCount: 0,\n        successCount: 0,\n        lastSwitch: null,\n        metrics: {\n          uptime: 1.0,\n          errorRate: 0,\n          responseTime: 0\n        }\n      });\n    });\n\n    console.log('🔄 Fallback configurations initialized');\n  }\n\n  /**\n   * Start monitoring fallback systems\n   */\n  private startMonitoring(): void {\n    this.monitoringInterval = setInterval(() => {\n      this.monitorFallbackSystems();\n    }, 10000); // Check every 10 seconds\n\n    console.log('🔍 Fallback system monitoring started');\n  }\n\n  /**\n   * Monitor all fallback systems\n   */\n  private async monitorFallbackSystems(): Promise<void> {\n    for (const [name, config] of this.fallbackConfigs) {\n      if (!config.enabled) continue;\n\n      const status = this.fallbackStatuses.get(name);\n      if (!status) continue;\n\n      try {\n        await this.evaluateFallbackCondition(name, config, status);\n      } catch (error) {\n        console.error(`❌ Error monitoring fallback ${name}:`, error);\n      }\n    }\n  }\n\n  /**\n   * Evaluate whether fallback should be activated or deactivated\n   */\n  private async evaluateFallbackCondition(\n    name: string, \n    config: FallbackConfig, \n    status: FallbackStatus\n  ): Promise<void> {\n    const primaryHealth = await this.checkComponentHealth(config.primaryComponent);\n    const fallbackHealth = await this.checkComponentHealth(config.fallbackComponent);\n\n    // Calculate error rate\n    const totalRequests = status.failureCount + status.successCount;\n    const errorRate = totalRequests > 0 ? status.failureCount / totalRequests : 0;\n\n    // Update metrics\n    status.metrics.errorRate = errorRate;\n    status.metrics.uptime = status.successCount / Math.max(1, totalRequests);\n\n    if (!status.active) {\n      // Check if fallback should be activated\n      if (primaryHealth === 'failed' || errorRate > config.activationThreshold) {\n        await this.activateFallback(name, config, status);\n      }\n    } else {\n      // Check if fallback should be deactivated\n      if (primaryHealth === 'healthy' && errorRate < config.deactivationThreshold) {\n        await this.deactivateFallback(name, config, status);\n      }\n    }\n  }\n\n  /**\n   * Activate fallback system\n   */\n  private async activateFallback(\n    name: string, \n    config: FallbackConfig, \n    status: FallbackStatus\n  ): Promise<void> {\n    try {\n      console.log(`🔄 Activating fallback: ${name}`);\n\n      switch (name) {\n        case 'tensorflow-fallback':\n          await this.activateTensorFlowFallback();\n          break;\n        case 'database-fallback':\n          await this.activateDatabaseFallback();\n          break;\n        case 'cache-fallback':\n          await this.activateCacheFallback();\n          break;\n        case 'websocket-fallback':\n          await this.activateWebSocketFallback();\n          break;\n        case 'api-fallback':\n          await this.activateAPIFallback();\n          break;\n      }\n\n      status.active = true;\n      status.activationTime = new Date();\n      status.lastSwitch = new Date();\n\n      console.log(`✅ Fallback activated: ${name}`);\n\n    } catch (error) {\n      console.error(`❌ Failed to activate fallback ${name}:`, error);\n      status.failureCount++;\n    }\n  }\n\n  /**\n   * Deactivate fallback system\n   */\n  private async deactivateFallback(\n    name: string, \n    config: FallbackConfig, \n    status: FallbackStatus\n  ): Promise<void> {\n    try {\n      console.log(`🔄 Deactivating fallback: ${name}`);\n\n      switch (name) {\n        case 'tensorflow-fallback':\n          await this.deactivateTensorFlowFallback();\n          break;\n        case 'database-fallback':\n          await this.deactivateDatabaseFallback();\n          break;\n        case 'cache-fallback':\n          await this.deactivateCacheFallback();\n          break;\n        case 'websocket-fallback':\n          await this.deactivateWebSocketFallback();\n          break;\n        case 'api-fallback':\n          await this.deactivateAPIFallback();\n          break;\n      }\n\n      status.active = false;\n      status.activationTime = null;\n      status.lastSwitch = new Date();\n\n      console.log(`✅ Fallback deactivated: ${name}`);\n\n    } catch (error) {\n      console.error(`❌ Failed to deactivate fallback ${name}:`, error);\n    }\n  }\n\n  /**\n   * Activate TensorFlow.js fallback\n   */\n  private async activateTensorFlowFallback(): Promise<void> {\n    // Switch to mock TensorFlow implementation\n    (window as any).tensorflowFallbackActive = true;\n    \n    // Notify AI services to use fallback\n    const event = new CustomEvent('tensorflow-fallback-activated');\n    window.dispatchEvent(event);\n  }\n\n  /**\n   * Deactivate TensorFlow.js fallback\n   */\n  private async deactivateTensorFlowFallback(): Promise<void> {\n    (window as any).tensorflowFallbackActive = false;\n    \n    const event = new CustomEvent('tensorflow-fallback-deactivated');\n    window.dispatchEvent(event);\n  }\n\n  /**\n   * Activate database fallback\n   */\n  private async activateDatabaseFallback(): Promise<void> {\n    // Switch to mock database\n    (window as any).databaseFallbackActive = true;\n    \n    const event = new CustomEvent('database-fallback-activated');\n    window.dispatchEvent(event);\n  }\n\n  /**\n   * Deactivate database fallback\n   */\n  private async deactivateDatabaseFallback(): Promise<void> {\n    (window as any).databaseFallbackActive = false;\n    \n    const event = new CustomEvent('database-fallback-deactivated');\n    window.dispatchEvent(event);\n  }\n\n  /**\n   * Activate cache fallback\n   */\n  private async activateCacheFallback(): Promise<void> {\n    // Switch to in-memory cache\n    (window as any).cacheFallbackActive = true;\n    \n    const event = new CustomEvent('cache-fallback-activated');\n    window.dispatchEvent(event);\n  }\n\n  /**\n   * Deactivate cache fallback\n   */\n  private async deactivateCacheFallback(): Promise<void> {\n    (window as any).cacheFallbackActive = false;\n    \n    const event = new CustomEvent('cache-fallback-deactivated');\n    window.dispatchEvent(event);\n  }\n\n  /**\n   * Activate WebSocket fallback\n   */\n  private async activateWebSocketFallback(): Promise<void> {\n    // Switch to polling mode\n    (window as any).websocketFallbackActive = true;\n    \n    const event = new CustomEvent('websocket-fallback-activated');\n    window.dispatchEvent(event);\n  }\n\n  /**\n   * Deactivate WebSocket fallback\n   */\n  private async deactivateWebSocketFallback(): Promise<void> {\n    (window as any).websocketFallbackActive = false;\n    \n    const event = new CustomEvent('websocket-fallback-deactivated');\n    window.dispatchEvent(event);\n  }\n\n  /**\n   * Activate API fallback\n   */\n  private async activateAPIFallback(): Promise<void> {\n    // Switch to cached API responses\n    (window as any).apiFallbackActive = true;\n    \n    const event = new CustomEvent('api-fallback-activated');\n    window.dispatchEvent(event);\n  }\n\n  /**\n   * Deactivate API fallback\n   */\n  private async deactivateAPIFallback(): Promise<void> {\n    (window as any).apiFallbackActive = false;\n    \n    const event = new CustomEvent('api-fallback-deactivated');\n    window.dispatchEvent(event);\n  }\n\n  /**\n   * Check component health\n   */\n  private async checkComponentHealth(componentName: string): Promise<'healthy' | 'degraded' | 'failed'> {\n    try {\n      // This would integrate with the ReliabilityMonitor\n      const reliabilityMonitor = (window as any).reliabilityMonitor;\n      if (reliabilityMonitor) {\n        const status = reliabilityMonitor.getComponentStatus(componentName);\n        return status?.status || 'unknown';\n      }\n\n      // Fallback health check\n      return 'healthy';\n    } catch (error) {\n      return 'failed';\n    }\n  }\n\n  /**\n   * Record component success\n   */\n  recordSuccess(fallbackName: string): void {\n    const status = this.fallbackStatuses.get(fallbackName);\n    if (status) {\n      status.successCount++;\n    }\n  }\n\n  /**\n   * Record component failure\n   */\n  recordFailure(fallbackName: string): void {\n    const status = this.fallbackStatuses.get(fallbackName);\n    if (status) {\n      status.failureCount++;\n    }\n  }\n\n  /**\n   * Get fallback status\n   */\n  getFallbackStatus(fallbackName: string): FallbackStatus | null {\n    return this.fallbackStatuses.get(fallbackName) || null;\n  }\n\n  /**\n   * Get all fallback statuses\n   */\n  getAllFallbackStatuses(): FallbackStatus[] {\n    return Array.from(this.fallbackStatuses.values());\n  }\n\n  /**\n   * Manually activate fallback\n   */\n  async activateFallbackManually(fallbackName: string): Promise<boolean> {\n    const config = this.fallbackConfigs.get(fallbackName);\n    const status = this.fallbackStatuses.get(fallbackName);\n\n    if (!config || !status) {\n      return false;\n    }\n\n    await this.activateFallback(fallbackName, config, status);\n    return true;\n  }\n\n  /**\n   * Manually deactivate fallback\n   */\n  async deactivateFallbackManually(fallbackName: string): Promise<boolean> {\n    const config = this.fallbackConfigs.get(fallbackName);\n    const status = this.fallbackStatuses.get(fallbackName);\n\n    if (!config || !status) {\n      return false;\n    }\n\n    await this.deactivateFallback(fallbackName, config, status);\n    return true;\n  }\n\n  /**\n   * Get fallback system report\n   */\n  getFallbackReport(): {\n    totalFallbacks: number;\n    activeFallbacks: number;\n    fallbackStatuses: FallbackStatus[];\n    recommendations: string[];\n  } {\n    const statuses = Array.from(this.fallbackStatuses.values());\n    const activeFallbacks = statuses.filter(s => s.active).length;\n    \n    const recommendations: string[] = [];\n    \n    statuses.forEach(status => {\n      if (status.active) {\n        recommendations.push(`Fallback active for ${status.name} - investigate primary component`);\n      }\n      \n      if (status.metrics.errorRate > 0.2) {\n        recommendations.push(`High error rate in ${status.name} - consider system maintenance`);\n      }\n      \n      if (status.metrics.uptime < 0.8) {\n        recommendations.push(`Low uptime for ${status.name} - review reliability measures`);\n      }\n    });\n\n    return {\n      totalFallbacks: statuses.length,\n      activeFallbacks,\n      fallbackStatuses: statuses,\n      recommendations\n    };\n  }\n\n  /**\n   * Stop monitoring\n   */\n  stopMonitoring(): void {\n    if (this.monitoringInterval) {\n      clearInterval(this.monitoringInterval);\n      this.monitoringInterval = null;\n    }\n    console.log('🛑 Fallback system monitoring stopped');\n  }\n}\n\n// Export singleton instance\nexport const fallbackSystemManager = new FallbackSystemManager();\n","/**\n * TensorFlow.js Compatibility Layer\n * Advanced fallback system with backend detection and optimization\n * Based on enterprise best practices for cross-platform compatibility\n */\n\nimport * as tf from '@tensorflow/tfjs';\n\nexport interface CompatibilityReport {\n  webgl: number;\n  wasm: boolean;\n  simd: boolean;\n  memory: number;\n  device: 'mobile' | 'desktop';\n  browser: string;\n  optimalBackend: string;\n}\n\nexport interface BackendConfig {\n  name: string;\n  priority: number;\n  mobileOptimized: boolean;\n  fallbackTo: string[];\n}\n\nexport class TensorFlowCompatibilityLayer {\n  private optimalBackend: string | null = null;\n  private compatibilityReport: CompatibilityReport | null = null;\n  private backendConfigs: BackendConfig[] = [\n    {\n      name: 'webgl',\n      priority: 1,\n      mobileOptimized: false,\n      fallbackTo: ['wasm', 'cpu']\n    },\n    {\n      name: 'wasm',\n      priority: 2,\n      mobileOptimized: true,\n      fallbackTo: ['webgl', 'cpu']\n    },\n    {\n      name: 'cpu',\n      priority: 3,\n      mobileOptimized: true,\n      fallbackTo: []\n    }\n  ];\n\n  constructor() {\n    this.initialize();\n  }\n\n  private async initialize(): Promise<void> {\n    try {\n      await this.detectFeatures();\n      await this.configureEnvironment();\n      await this.verifyFunctionality();\n      console.log('✅ TensorFlow.js Compatibility Layer initialized successfully');\n    } catch (error) {\n      console.error('❌ TensorFlow.js Compatibility Layer initialization failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Detect device and browser capabilities\n   */\n  private async detectFeatures(): Promise<void> {\n    const isMobile = this.isMobileDevice();\n    const browser = this.detectBrowser();\n    \n    this.compatibilityReport = {\n      webgl: Number(await tf.ENV.getAsync('WEBGL_VERSION')) || 0,\n      wasm: typeof WebAssembly === 'object',\n      simd: Boolean(await tf.ENV.getAsync('WASM_HAS_SIMD_SUPPORT')) || false,\n      memory: Number(await tf.ENV.getAsync('WEBGL_MAX_TEXTURE_SIZE')) || 0,\n      device: isMobile ? 'mobile' : 'desktop',\n      browser,\n      optimalBackend: 'unknown'\n    };\n\n    console.log('🔍 Device capabilities detected:', this.compatibilityReport);\n  }\n\n  /**\n   * Configure TensorFlow.js environment based on device capabilities\n   */\n  private async configureEnvironment(): Promise<void> {\n    if (!this.compatibilityReport) return;\n\n    const { device, webgl, wasm } = this.compatibilityReport;\n\n    if (device === 'mobile') {\n      // Mobile optimizations\n      tf.ENV.set('WEBGL_PACK', false);\n      tf.ENV.set('WEBGL_DOWNLOAD_FLOAT_ENABLED', true);\n      tf.ENV.set('WEBGL_FORCE_F16_TEXTURES', true);\n      tf.ENV.set('WEBGL_DELETE_TEXTURE_THRESHOLD', 0);\n      \n      console.log('📱 Mobile optimizations applied');\n    } else {\n      // Desktop optimizations\n      tf.ENV.set('WEBGL_PACK', true);\n      tf.ENV.set('WEBGL_DELETE_TEXTURE_THRESHOLD', 0);\n      \n      console.log('🖥️ Desktop optimizations applied');\n    }\n\n    // Backend-specific configurations\n    if (webgl >= 2) {\n      tf.ENV.set('WEBGL_VERSION', 2);\n    } else if (webgl === 1) {\n      tf.ENV.set('WEBGL_VERSION', 1);\n    }\n\n    if (wasm) {\n      tf.ENV.set('WASM_HAS_SIMD_SUPPORT', this.compatibilityReport.simd);\n    }\n  }\n\n  /**\n   * Verify functionality with the current backend\n   */\n  private async verifyFunctionality(): Promise<void> {\n    try {\n      // Create a simple test model\n      const testModel = this.createTestModel();\n      const testInput = tf.randomNormal([1, 10]);\n      \n      // Test prediction\n      const output = testModel.predict(testInput) as tf.Tensor;\n      const result = await output.data();\n      \n      // Verify result is valid\n      if (result.length > 0 && !result.some(val => isNaN(val) || !isFinite(val))) {\n        const currentBackend = tf.getBackend();\n        this.optimalBackend = currentBackend;\n        if (this.compatibilityReport) {\n          this.compatibilityReport.optimalBackend = currentBackend;\n        }\n        console.log(`✅ Backend ${currentBackend} verified successfully`);\n      } else {\n        throw new Error('Invalid prediction result');\n      }\n      \n      // Cleanup\n      testInput.dispose();\n      output.dispose();\n      testModel.dispose();\n      \n    } catch (error) {\n      console.warn(`⚠️ Backend ${tf.getBackend()} verification failed:`, error);\n      await this.attemptFallback();\n    }\n  }\n\n  /**\n   * Attempt fallback to alternative backends\n   */\n  private async attemptFallback(): Promise<void> {\n    const currentBackend = tf.getBackend();\n    const currentConfig = this.backendConfigs.find(config => config.name === currentBackend);\n    \n    if (!currentConfig) {\n      throw new Error('No fallback configuration found');\n    }\n\n    for (const fallbackBackend of currentConfig.fallbackTo) {\n      try {\n        console.log(`🔄 Attempting fallback to ${fallbackBackend}...`);\n        \n        await tf.setBackend(fallbackBackend);\n        await tf.ready();\n        \n        // Reconfigure environment for new backend\n        await this.configureEnvironment();\n        \n        // Verify functionality with new backend\n        await this.verifyFunctionality();\n        \n        console.log(`✅ Successfully fell back to ${fallbackBackend}`);\n        return;\n        \n      } catch (fallbackError) {\n        console.warn(`❌ Fallback to ${fallbackBackend} failed:`, fallbackError);\n        continue;\n      }\n    }\n    \n    throw new Error('No functional backend available after fallback attempts');\n  }\n\n  /**\n   * Initialize TensorFlow.js with optimal backend selection\n   */\n  async initializeTensorFlow(): Promise<void> {\n    const backends = this.getOptimalBackendOrder();\n    \n    for (const backend of backends) {\n      try {\n        console.log(`🚀 Initializing TensorFlow.js with ${backend} backend...`);\n        \n        await tf.setBackend(backend);\n        await tf.ready();\n        \n        // Configure environment for this backend\n        await this.configureEnvironment();\n        \n        // Verify functionality\n        await this.verifyFunctionality();\n        \n        console.log(`✅ Successfully initialized with ${backend} backend`);\n        return;\n        \n      } catch (error) {\n        console.warn(`⚠️ Backend ${backend} initialization failed:`, error instanceof Error ? error.message : String(error));\n        continue;\n      }\n    }\n    \n    throw new Error('No compatible TensorFlow.js backend found');\n  }\n\n  /**\n   * Get optimal backend order based on device capabilities\n   */\n  private getOptimalBackendOrder(): string[] {\n    if (!this.compatibilityReport) {\n      return ['webgl', 'wasm', 'cpu'];\n    }\n\n    const { device, webgl, wasm } = this.compatibilityReport;\n    \n    if (device === 'mobile') {\n      // Mobile: prioritize CPU and WASM for battery life\n      if (wasm) {\n        return ['wasm', 'cpu', 'webgl'];\n      } else {\n        return ['cpu', 'webgl'];\n      }\n    } else {\n      // Desktop: prioritize WebGL for performance\n      if (webgl >= 2) {\n        return ['webgl', 'wasm', 'cpu'];\n      } else if (webgl === 1) {\n        return ['webgl', 'wasm', 'cpu'];\n      } else if (wasm) {\n        return ['wasm', 'cpu'];\n      } else {\n        return ['cpu'];\n      }\n    }\n  }\n\n  /**\n   * Create a simple test model for verification\n   */\n  private createTestModel(): tf.LayersModel {\n    const model = tf.sequential({\n      layers: [\n        tf.layers.dense({ units: 5, activation: 'relu', inputShape: [10] }),\n        tf.layers.dense({ units: 1, activation: 'sigmoid' })\n      ]\n    });\n    \n    model.compile({\n      optimizer: 'adam',\n      loss: 'binaryCrossentropy',\n      metrics: ['accuracy']\n    });\n    \n    return model;\n  }\n\n  /**\n   * Detect if device is mobile\n   */\n  private isMobileDevice(): boolean {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  }\n\n  /**\n   * Detect browser type\n   */\n  private detectBrowser(): string {\n    const userAgent = navigator.userAgent;\n    \n    if (userAgent.includes('Chrome')) return 'Chrome';\n    if (userAgent.includes('Firefox')) return 'Firefox';\n    if (userAgent.includes('Safari')) return 'Safari';\n    if (userAgent.includes('Edge')) return 'Edge';\n    if (userAgent.includes('Opera')) return 'Opera';\n    \n    return 'Unknown';\n  }\n\n  /**\n   * Get current backend information\n   */\n  getBackendInfo(): { current: string; optimal: string; report: CompatibilityReport | null } {\n    return {\n      current: tf.getBackend(),\n      optimal: this.optimalBackend || 'unknown',\n      report: this.compatibilityReport\n    };\n  }\n\n  /**\n   * Get performance recommendations\n   */\n  getPerformanceRecommendations(): string[] {\n    const recommendations: string[] = [];\n    \n    if (!this.compatibilityReport) return recommendations;\n    \n    const { device, webgl, wasm, memory } = this.compatibilityReport;\n    \n    if (device === 'mobile') {\n      recommendations.push('Mobile device detected - using battery-optimized settings');\n    }\n    \n    if (webgl === 0) {\n      recommendations.push('WebGL not available - using CPU/WASM backend');\n    } else if (webgl === 1) {\n      recommendations.push('WebGL 1.0 detected - limited performance expected');\n    }\n    \n    if (!wasm) {\n      recommendations.push('WebAssembly not available - limited backend options');\n    }\n    \n    if (memory < 2048) {\n      recommendations.push('Limited GPU memory - consider reducing model complexity');\n    }\n    \n    return recommendations;\n  }\n\n  /**\n   * Monitor backend performance\n   */\n  async monitorPerformance(): Promise<{ backend: string; performance: number }> {\n    const startTime = performance.now();\n    \n    try {\n      // Create and run a simple operation\n      const a = tf.randomNormal([100, 100]);\n      const b = tf.randomNormal([100, 100]);\n      const c = tf.matMul(a, b);\n      await c.data();\n      \n      const endTime = performance.now();\n      const performanceScore = 1000 / (endTime - startTime); // Operations per second\n      \n      // Cleanup\n      a.dispose();\n      b.dispose();\n      c.dispose();\n      \n      return {\n        backend: tf.getBackend(),\n        performance: Math.round(performanceScore)\n      };\n      \n    } catch (error) {\n      console.error('❌ Performance monitoring failed:', error);\n      return {\n        backend: tf.getBackend(),\n        performance: 0\n      };\n    }\n  }\n\n  /**\n   * Switch to a specific backend\n   */\n  async switchBackend(backendName: string): Promise<boolean> {\n    try {\n      console.log(`🔄 Switching to ${backendName} backend...`);\n      \n      await tf.setBackend(backendName);\n      await tf.ready();\n      \n      // Reconfigure environment\n      await this.configureEnvironment();\n      \n      // Verify functionality\n      await this.verifyFunctionality();\n      \n      console.log(`✅ Successfully switched to ${backendName} backend`);\n      return true;\n      \n    } catch (error) {\n      console.error(`❌ Failed to switch to ${backendName} backend:`, error);\n      return false;\n    }\n  }\n}\n\n// Export singleton instance\nexport const tfCompatibility = new TensorFlowCompatibilityLayer();\n","import React, { useState, useEffect, useRef } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  Brain, BarChart3, Database, FileText, Users, Settings, \n  Monitor, LogOut, Home, BookOpen, Scale, Gavel, Shield,\n  TrendingUp, Activity, Cpu, Globe, Download, Upload,\n  ChevronDown, ChevronRight, Dot, Sparkles, Briefcase,\n  ChevronUp, Zap, Clock, HardDrive, Target, Heart, Play, CheckCircle,\n  Server, CpuIcon, MemoryStick\n} from 'lucide-react';\n\ninterface NavItem {\n  path: string;\n  label: string;\n  icon: React.ComponentType<any>;\n  description?: string;\n  badge?: string;\n  children?: NavItem[];\n}\n\ninterface SystemStatus {\n  status: 'healthy' | 'warning' | 'error';\n  models_training: number;\n  cpu_usage: number;\n  memory_usage: number;\n}\n\nexport function ModernSidebar() {\n  const location = useLocation();\n  const [collapsed, setCollapsed] = useState(false);\n  const [expandedGroups, setExpandedGroups] = useState<string[]>(['main']);\n  const [activeTab, setActiveTab] = useState('status');\n  const [systemStatus, setSystemStatus] = useState<SystemStatus>({\n    status: 'healthy',\n    models_training: 2,\n    cpu_usage: 45,\n    memory_usage: 68\n  });\n  \n  const navRef = useRef<HTMLDivElement>(null);\n  const [navHeight, setNavHeight] = useState(0);\n\n  // Debug logging to help identify loading issues\n  useEffect(() => {\n    console.log('🔧 ModernSidebar: Component mounted successfully');\n    console.log('🔧 ModernSidebar: Current location:', location.pathname);\n    console.log('🔧 ModernSidebar: Collapsed state:', collapsed);\n  }, [location.pathname, collapsed]);\n\n  // Navigation structure for Persian Legal AI - Simplified and optimized\n  const navigation: { group: string; label: string; items: NavItem[] }[] = [\n    {\n      group: 'main',\n      label: 'داشبورد اصلی',\n      items: [\n        { path: '/overview', label: 'نمای کلی', icon: Home, description: 'داشبورد اصلی سیستم' },\n        { path: '/dashboard', label: 'مانیتورینگ', icon: BarChart3, description: 'آمار و نمودارها', badge: 'جدید' },\n        { path: '/dashboard-ultimate', label: 'داشبورد پیشرفته', icon: Sparkles, description: 'داشبورد تعاملی پیشرفته', badge: 'ویژه' }\n      ]\n    },\n    {\n      group: 'legal',\n      label: 'سیستم حقوقی',\n      items: [\n        { \n          path: '/models', \n          label: 'مدل‌های یادگیری', \n          icon: Brain, \n          description: 'مدیریت مدل‌های AI',\n          children: [\n            { path: '/models/civil', label: 'قوانین مدنی', icon: Scale },\n            { path: '/models/criminal', label: 'قوانین جزایی', icon: Gavel },\n            { path: '/models/commercial', label: 'قوانین تجاری', icon: Briefcase },\n            { path: '/models/administrative', label: 'قوانین اداری', icon: Shield }\n          ]\n        },\n        { path: '/datasets', label: 'مجموعه‌ داده‌ها', icon: Database, description: 'مدیریت داده‌های حقوقی' },\n        { path: '/legal-docs', label: 'اسناد قانونی', icon: FileText, description: 'آرشیو اسناد حقوقی' }\n      ]\n    },\n    {\n      group: 'analytics',\n      label: 'تحلیل و گزارش',\n      items: [\n        { path: '/analytics', label: 'آنالیتیکس', icon: TrendingUp, description: 'تحلیل عملکرد' },\n        { path: '/monitoring', label: 'نظارت سیستم', icon: Monitor, description: 'مانیتورینگ real-time' },\n        { path: '/logs', label: 'گزارش‌ها', icon: Activity, description: 'لاگ‌های سیستم' }\n      ]\n    }\n  ];\n\n  // Update nav height when collapsed state changes\n  useEffect(() => {\n    if (navRef.current) {\n      setNavHeight(navRef.current.scrollHeight);\n    }\n  }, [collapsed, expandedGroups, navigation]);\n\n  useEffect(() => {\n    // Simulate system status updates\n    const interval = setInterval(() => {\n      setSystemStatus(prev => ({\n        ...prev,\n        cpu_usage: Math.floor(Math.random() * 30 + 30),\n        memory_usage: Math.floor(Math.random() * 20 + 50),\n        models_training: Math.floor(Math.random() * 3 + 1)\n      }));\n    }, 8000); // Reduced frequency for better performance\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const toggleGroup = (group: string) => {\n    setExpandedGroups(prev => \n      prev.includes(group) \n        ? prev.filter(g => g !== group)\n        : [...prev, group]\n    );\n  };\n\n  const isActive = (path: string) => {\n    return location.pathname === path || location.pathname.startsWith(path + '/');\n  };\n\n  // Calculate dynamic height for the status panel based on nav height\n  const statusPanelHeight = `calc(100vh - ${navHeight + 140}px)`;\n\n  // Error boundary for sidebar rendering\n  try {\n    return (\n      <motion.div\n      initial={{ x: -300 }}\n      animate={{ x: 0 }}\n      transition={{ duration: 0.5, type: \"spring\", stiffness: 120 }}\n      className={`${\n        collapsed ? 'w-20' : 'w-80'\n      } h-screen bg-gradient-to-b from-slate-800/95 to-slate-900/95 backdrop-blur-xl border-r border-slate-600/50 transition-all duration-300 flex flex-col overflow-hidden relative z-40`}\n      dir=\"rtl\"\n      >\n      {/* Header */}\n      <div className=\"p-6 border-b border-slate-600/50 flex-shrink-0\">\n        <motion.div\n          className=\"flex items-center gap-4\"\n          layout\n        >\n          <motion.div \n            className=\"w-12 h-12 bg-gradient-to-r from-emerald-500 to-blue-500 rounded-2xl flex items-center justify-center shadow-lg\"\n            whileHover={{ scale: 1.05, rotate: 5 }}\n            transition={{ type: \"spring\", stiffness: 300 }}\n          >\n            <Brain className=\"h-6 w-6 text-white\" />\n          </motion.div>\n          \n          <AnimatePresence>\n            {!collapsed && (\n              <motion.div\n                initial={{ opacity: 0, width: 0 }}\n                animate={{ opacity: 1, width: \"auto\" }}\n                exit={{ opacity: 0, width: 0 }}\n                transition={{ duration: 0.2 }}\n                className=\"overflow-hidden\"\n              >\n                <h2 className=\"text-lg font-bold text-white\">AI حقوقی ایران</h2>\n                <p className=\"text-xs text-slate-300\">سامانه یادگیری عمیق</p>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <motion.button\n            whileHover={{ scale: 1.1, backgroundColor: \"rgba(255,255,255,0.1)\" }}\n            whileTap={{ scale: 0.9 }}\n            onClick={() => setCollapsed(!collapsed)}\n            className=\"p-2 hover:bg-slate-700/50 rounded-lg transition-colors mr-auto\"\n          >\n            <motion.div\n              animate={{ rotate: collapsed ? 180 : 0 }}\n              transition={{ duration: 0.2 }}\n            >\n              <ChevronRight className=\"w-4 h-4 text-slate-300\" />\n            </motion.div>\n          </motion.button>\n        </motion.div>\n      </div>\n\n      {/* Navigation - This will now scroll independently */}\n      <nav \n        ref={navRef}\n        className=\"flex-1 overflow-y-auto overflow-x-hidden p-4 space-y-2 custom-scrollbar\"\n        style={{ maxHeight: collapsed ? 'calc(100vh - 180px)' : 'calc(100vh - 280px)' }}\n      >\n        {navigation.map((section, sectionIndex) => (\n          <motion.div\n            key={section.group}\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3, delay: sectionIndex * 0.05 }}\n          >\n            {/* Section Header */}\n            <AnimatePresence>\n              {!collapsed && (\n                <motion.button\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                  onClick={() => toggleGroup(section.group)}\n                  className=\"w-full flex items-center gap-3 px-3 py-2 text-xs font-semibold text-slate-300 hover:text-white transition-colors\"\n                >\n                  <motion.div\n                    animate={{ rotate: expandedGroups.includes(section.group) ? 90 : 0 }}\n                    transition={{ duration: 0.15 }}\n                  >\n                    <ChevronDown className=\"w-3 h-3\" />\n                  </motion.div>\n                  {section.label}\n                </motion.button>\n              )}\n            </AnimatePresence>\n\n            {/* Navigation Items */}\n            <AnimatePresence>\n              {(collapsed || expandedGroups.includes(section.group)) && (\n                <motion.div\n                  initial={{ opacity: 0, height: 0 }}\n                  animate={{ opacity: 1, height: \"auto\" }}\n                  exit={{ opacity: 0, height: 0 }}\n                  transition={{ duration: 0.2 }}\n                  className=\"space-y-1\"\n                >\n                  {section.items.map((item, itemIndex) => (\n                    <div key={item.path}>\n                      <NavLink\n                        to={item.path}\n                        className={({ isActive }) => `\n                          group flex items-center gap-3 px-4 py-3 rounded-xl transition-all duration-200 relative overflow-hidden\n                          ${isActive \n                            ? 'bg-gradient-to-r from-emerald-500/20 to-blue-500/20 border border-emerald-400/30 text-white shadow-lg' \n                            : 'hover:bg-slate-700/30 text-slate-300 hover:text-white'\n                          }\n                        `}\n                      >\n                        {/* Active indicator */}\n                        {isActive(item.path) && (\n                          <motion.div\n                            layoutId=\"activeIndicator\"\n                            className=\"absolute right-0 top-0 bottom-0 w-1 bg-gradient-to-b from-emerald-400 to-blue-400 rounded-full\"\n                            transition={{ duration: 0.2 }}\n                          />\n                        )}\n\n                        <motion.div \n                          className={`w-10 h-10 rounded-xl flex items-center justify-center transition-all duration-200 ${\n                            isActive(item.path) \n                              ? 'bg-gradient-to-r from-emerald-500 to-blue-500 text-white shadow-md' \n                              : 'bg-slate-700/50 group-hover:bg-slate-600/50'\n                          }`}\n                          whileHover={{ scale: 1.05 }}\n                          whileTap={{ scale: 0.95 }}\n                        >\n                          <item.icon className=\"w-5 h-5\" />\n                        </motion.div>\n\n                        <AnimatePresence>\n                          {!collapsed && (\n                            <motion.div\n                              initial={{ opacity: 0, width: 0 }}\n                              animate={{ opacity: 1, width: \"auto\" }}\n                              exit={{ opacity: 0, width: 0 }}\n                              transition={{ duration: 0.2 }}\n                              className=\"flex-1 overflow-hidden\"\n                            >\n                              <div className=\"flex items-center justify-between\">\n                                <div>\n                                  <h3 className=\"font-medium\">{item.label}</h3>\n                                  {item.description && (\n                                    <p className=\"text-xs text-slate-400 group-hover:text-slate-300 transition-colors\">\n                                      {item.description}\n                                    </p>\n                                  )}\n                                </div>\n                                \n                                <div className=\"flex items-center gap-2\">\n                                  {item.badge && (\n                                    <motion.span\n                                      initial={{ scale: 0 }}\n                                      animate={{ scale: 1 }}\n                                      className=\"px-2 py-1 bg-gradient-to-r from-emerald-500 to-blue-500 text-white text-xs rounded-full font-medium shadow-sm\"\n                                    >\n                                      {item.badge}\n                                    </motion.span>\n                                  )}\n                                  \n                                  {item.children && (\n                                    <ChevronDown className=\"w-4 h-4 text-slate-400\" />\n                                  )}\n                                </div>\n                              </div>\n                            </motion.div>\n                          )}\n                        </AnimatePresence>\n                      </NavLink>\n\n                      {/* Sub-navigation */}\n                      <AnimatePresence>\n                        {!collapsed && item.children && isActive(item.path) && (\n                          <motion.div\n                            initial={{ opacity: 0, height: 0 }}\n                            animate={{ opacity: 1, height: \"auto\" }}\n                            exit={{ opacity: 0, height: 0 }}\n                            transition={{ duration: 0.2 }}\n                            className=\"ml-6 mt-2 space-y-1\"\n                          >\n                            {item.children.map((child, childIndex) => (\n                              <motion.div\n                                key={child.path}\n                                initial={{ opacity: 0, x: -10 }}\n                                animate={{ opacity: 1, x: 0 }}\n                                transition={{ duration: 0.2, delay: childIndex * 0.03 }}\n                              >\n                                <NavLink\n                                  to={child.path}\n                                  className={({ isActive }) => `\n                                    flex items-center gap-3 px-4 py-2 rounded-lg transition-all duration-150\n                                    ${isActive \n                                      ? 'bg-emerald-500/20 text-emerald-300 border border-emerald-400/30 shadow-sm' \n                                      : 'text-slate-400 hover:text-slate-300 hover:bg-slate-700/30'\n                                    }\n                                  `}\n                                >\n                                  <Dot className=\"w-4 h-4\" />\n                                  <child.icon className=\"w-4 h-4\" />\n                                  <span className=\"text-sm font-medium\">{child.label}</span>\n                                </NavLink>\n                              </motion.div>\n                            ))}\n                          </motion.div>\n                        )}\n                      </AnimatePresence>\n                    </div>\n                  ))}\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </motion.div>\n        ))}\n      </nav>\n\n      {/* Enhanced System Status & Model Status Tabs - Fixed at bottom */}\n      <div \n        className=\"p-3 border-t border-slate-600/50 mt-auto bg-slate-900/80 backdrop-blur-lg flex-shrink-0\"\n        style={{ \n          position: 'sticky', \n          bottom: 0, \n          left: 0, \n          right: 0,\n          zIndex: 10 \n        }}\n      >\n        <AnimatePresence>\n          {!collapsed && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              transition={{ duration: 0.2 }}\n              className=\"mb-2\"\n            >\n              {/* Enhanced Tab Navigation */}\n              <div className=\"flex bg-gradient-to-r from-slate-800/80 to-slate-700/80 rounded-lg p-0.5 shadow-lg backdrop-blur-sm border border-slate-500/40\">\n                <motion.button\n                  whileHover={{ scale: 1.02, y: -1 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={() => setActiveTab('status')}\n                  className={`flex-1 px-3 py-2 text-xs font-bold rounded-md transition-all duration-200 relative overflow-hidden ${\n                    activeTab === 'status'\n                      ? 'bg-gradient-to-r from-cyan-500/50 to-teal-500/50 text-white shadow-md shadow-cyan-500/30 border border-cyan-400/60'\n                      : 'text-slate-300 hover:text-white hover:bg-slate-600/30'\n                  }`}\n                >\n                  {activeTab === 'status' && (\n                    <motion.div\n                      initial={{ opacity: 0 }}\n                      animate={{ opacity: 1 }}\n                      className=\"absolute inset-0 bg-gradient-to-r from-cyan-400/30 to-teal-400/30 rounded-md\"\n                    />\n                  )}\n                  <div className=\"relative z-10 flex items-center justify-center gap-1.5\">\n                    <Server className=\"w-3 h-3\" />\n                    <span>وضعیت سیستم</span>\n                  </div>\n                </motion.button>\n                <motion.button\n                  whileHover={{ scale: 1.02, y: -1 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={() => setActiveTab('models')}\n                  className={`flex-1 px-3 py-2 text-xs font-bold rounded-md transition-all duration-200 relative overflow-hidden ${\n                    activeTab === 'models'\n                      ? 'bg-gradient-to-r from-indigo-500/50 to-slate-600/50 text-white shadow-md shadow-indigo-500/30 border border-indigo-400/60'\n                      : 'text-slate-300 hover:text-white hover:bg-slate-600/30'\n                  }`}\n                >\n                  {activeTab === 'models' && (\n                    <motion.div\n                      initial={{ opacity: 0 }}\n                      animate={{ opacity: 1 }}\n                      className=\"absolute inset-0 bg-gradient-to-r from-indigo-400/30 to-slate-400/30 rounded-md\"\n                    />\n                  )}\n                  <div className=\"relative z-10 flex items-center justify-center gap-1.5\">\n                    <Brain className=\"w-3 h-3\" />\n                    <span>وضعیت مدل‌ها</span>\n                  </div>\n                </motion.button>\n              </div>\n\n              {/* Enhanced Tab Content */}\n              <AnimatePresence mode=\"wait\">\n                {activeTab === 'status' && (\n                  <motion.div\n                    key=\"status\"\n                    initial={{ opacity: 0, y: 5 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    exit={{ opacity: 0, y: -5 }}\n                    transition={{ duration: 0.2 }}\n                    className=\"mt-2 p-3 bg-gradient-to-r from-cyan-500/15 to-teal-500/15 rounded-lg border border-cyan-400/30 shadow-md backdrop-blur-sm\"\n                  >\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-2\">\n                          <motion.div \n                            className=\"w-2 h-2 bg-teal-400 rounded-full shadow-lg shadow-teal-400/50\"\n                            animate={{ scale: [1, 1.2, 1] }}\n                            transition={{ duration: 2, repeat: Infinity }}\n                          />\n                          <span className=\"text-sm text-teal-200 font-bold\">وضعیت کلی</span>\n                        </div>\n                        <span className=\"text-sm text-white font-bold bg-white/20 px-2 py-1 rounded-full\">سالم</span>\n                      </div>\n                      <div className=\"flex items-center justify-between p-1.5 bg-white/5 rounded-md\">\n                        <div className=\"flex items-center gap-2\">\n                          <div className=\"w-6 h-6 bg-blue-500/20 rounded flex items-center justify-center\">\n                            <CpuIcon className=\"w-3 h-3 text-blue-400\" />\n                          </div>\n                          <span className=\"text-sm text-slate-200\">CPU</span>\n                        </div>\n                        <div className=\"flex items-center gap-1\">\n                          <span className=\"text-sm text-blue-300 font-bold\">{systemStatus.cpu_usage}%</span>\n                          <div className=\"w-12 h-1.5 bg-slate-600 rounded-full overflow-hidden\">\n                            <motion.div \n                              className=\"h-full bg-gradient-to-r from-blue-400 to-blue-500 rounded-full\"\n                              initial={{ width: 0 }}\n                              animate={{ width: `${systemStatus.cpu_usage}%` }}\n                              transition={{ duration: 0.5 }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center justify-between p-1.5 bg-white/5 rounded-md\">\n                        <div className=\"flex items-center gap-2\">\n                          <div className=\"w-6 h-6 bg-purple-500/20 rounded flex items-center justify-center\">\n                            <MemoryStick className=\"w-3 h-3 text-purple-400\" />\n                          </div>\n                          <span className=\"text-sm text-slate-200\">حافظه</span>\n                        </div>\n                        <div className=\"flex items-center gap-1\">\n                          <span className=\"text-sm text-purple-300 font-bold\">{systemStatus.memory_usage}%</span>\n                          <div className=\"w-12 h-1.5 bg-slate-600 rounded-full overflow-hidden\">\n                            <motion.div \n                              className=\"h-full bg-gradient-to-r from-purple-400 to-purple-500 rounded-full\"\n                              initial={{ width: 0 }}\n                              animate={{ width: `${systemStatus.memory_usage}%` }}\n                              transition={{ duration: 0.5 }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n                {activeTab === 'models' && (\n                  <motion.div\n                    key=\"models\"\n                    initial={{ opacity: 0, y: 5 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    exit={{ opacity: 0, y: -5 }}\n                    transition={{ duration: 0.2 }}\n                    className=\"mt-2 p-3 bg-gradient-to-r from-indigo-500/15 to-slate-500/15 rounded-lg border border-indigo-400/30 shadow-md backdrop-blur-sm\"\n                  >\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-2\">\n                          <motion.div \n                            className=\"w-2 h-2 bg-blue-400 rounded-full shadow-lg shadow-blue-400/50\"\n                            animate={{ scale: [1, 1.2, 1] }}\n                            transition={{ duration: 2, repeat: Infinity, delay: 0.5 }}\n                          />\n                          <span className=\"text-sm text-blue-200 font-bold\">مدل‌های فعال</span>\n                        </div>\n                        <span className=\"text-sm text-white font-bold bg-white/20 px-2 py-1 rounded-full\">{systemStatus.models_training}</span>\n                      </div>\n                      <div className=\"flex items-center justify-between p-1.5 bg-white/5 rounded-md\">\n                        <div className=\"flex items-center gap-2\">\n                          <div className=\"w-6 h-6 bg-emerald-500/20 rounded flex items-center justify-center\">\n                            <Play className=\"w-3 h-3 text-emerald-400\" />\n                          </div>\n                          <span className=\"text-sm text-slate-200\">در حال آموزش</span>\n                        </div>\n                        <span className=\"text-sm text-emerald-300 font-bold\">2</span>\n                      </div>\n                      <div className=\"flex items-center justify-between p-1.5 bg-white/5 rounded-md\">\n                        <div className=\"flex items-center gap-2\">\n                          <div className=\"w-6 h-6 bg-green-500/20 rounded flex items-center justify-center\">\n                            <CheckCircle className=\"w-3 h-3 text-green-400\" />\n                          </div>\n                          <span className=\"text-sm text-slate-200\">تکمیل شده</span>\n                        </div>\n                        <span className=\"text-sm text-green-300 font-bold\">1</span>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        {/* Enhanced Collapse/Expand Toggle */}\n        <motion.button\n          whileHover={{ scale: 1.02, y: -1 }}\n          whileTap={{ scale: 0.98 }}\n          onClick={() => setCollapsed(!collapsed)}\n          className=\"w-full p-2.5 bg-gradient-to-r from-slate-700/40 to-slate-600/40 hover:from-slate-600/50 hover:to-slate-500/50 rounded-xl transition-all duration-200 flex items-center justify-center shadow-md\"\n        >\n          <motion.div\n            animate={{ rotate: collapsed ? 0 : 180 }}\n            transition={{ duration: 0.2 }}\n            className=\"w-4 h-4 text-slate-300\"\n          >\n            <ChevronRight className=\"w-full h-full\" />\n          </motion.div>\n        </motion.button>\n      </div>\n\n      <style>{`\n        .custom-scrollbar::-webkit-scrollbar {\n          width: 4px;\n        }\n        .custom-scrollbar::-webkit-scrollbar-track {\n          background: rgba(255, 255, 255, 0.05);\n          border-radius: 10px;\n        }\n        .custom-scrollbar::-webkit-scrollbar-thumb {\n          background: rgba(255, 255, 255, 0.2);\n          border-radius: 10px;\n        }\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n          background: rgba(255, 255, 255, 0.3);\n        }\n      `}</style>\n    </motion.div>\n    );\n  } catch (error) {\n    console.error('❌ ModernSidebar rendering error:', error);\n    return (\n      <div className=\"w-80 h-screen bg-gradient-to-b from-slate-800/95 to-slate-900/95 backdrop-blur-xl border-r border-slate-600/50 flex items-center justify-center\" dir=\"rtl\">\n        <div className=\"text-center text-white\">\n          <div className=\"text-red-400 mb-2\">⚠️ خطا در بارگذاری منو</div>\n          <div className=\"text-sm text-slate-300\">لطفاً صفحه را رفرش کنید</div>\n        </div>\n      </div>\n    );\n  }\n}","\n// Reliability Systems Integration\n// Auto-generated integration for all reliability components\n\nimport { reliabilityMonitor } from './ReliabilityMonitor';\nimport { fallbackSystemManager } from './FallbackSystemManager';\nimport { tfCompatibility } from './ai/TensorFlowCompatibilityLayer';\n\n// Initialize reliability systems\nexport async function initializeReliabilitySystems() {\n  try {\n    console.log('🚀 Initializing reliability systems...');\n    \n    // Initialize TensorFlow.js compatibility layer\n    await tfCompatibility.initializeTensorFlow();\n    \n    // Make systems globally available\n    (window as any).reliabilityMonitor = reliabilityMonitor;\n    (window as any).fallbackSystemManager = fallbackSystemManager;\n    (window as any).tfCompatibility = tfCompatibility;\n    \n    // Set up event listeners for fallback notifications\n    setupFallbackEventListeners();\n    \n    console.log('✅ Reliability systems initialized successfully');\n    \n    return {\n      reliabilityMonitor,\n      fallbackSystemManager,\n      tfCompatibility\n    };\n    \n  } catch (error) {\n    console.error('❌ Failed to initialize reliability systems:', error);\n    throw error;\n  }\n}\n\n// Set up event listeners for fallback system notifications\nfunction setupFallbackEventListeners() {\n  // TensorFlow fallback events\n  window.addEventListener('tensorflow-fallback-activated', () => {\n    console.log('🔄 TensorFlow fallback activated');\n    reliabilityMonitor.updateComponentMetrics('ai-pipeline', {\n      fallbackActive: true,\n      fallbackActivatedAt: new Date()\n    });\n  });\n  \n  window.addEventListener('tensorflow-fallback-deactivated', () => {\n    console.log('✅ TensorFlow fallback deactivated');\n    reliabilityMonitor.updateComponentMetrics('ai-pipeline', {\n      fallbackActive: false,\n      fallbackDeactivatedAt: new Date()\n    });\n  });\n  \n  // Database fallback events\n  window.addEventListener('database-fallback-activated', () => {\n    console.log('🔄 Database fallback activated');\n    reliabilityMonitor.updateComponentMetrics('database', {\n      fallbackActive: true,\n      fallbackActivatedAt: new Date()\n    });\n  });\n  \n  window.addEventListener('database-fallback-deactivated', () => {\n    console.log('✅ Database fallback deactivated');\n    reliabilityMonitor.updateComponentMetrics('database', {\n      fallbackActive: false,\n      fallbackDeactivatedAt: new Date()\n    });\n  });\n  \n  // Cache fallback events\n  window.addEventListener('cache-fallback-activated', () => {\n    console.log('🔄 Cache fallback activated');\n    reliabilityMonitor.updateComponentMetrics('cache', {\n      fallbackActive: true,\n      fallbackActivatedAt: new Date()\n    });\n  });\n  \n  window.addEventListener('cache-fallback-deactivated', () => {\n    console.log('✅ Cache fallback deactivated');\n    reliabilityMonitor.updateComponentMetrics('cache', {\n      fallbackActive: false,\n      fallbackDeactivatedAt: new Date()\n    });\n  });\n  \n  // WebSocket fallback events\n  window.addEventListener('websocket-fallback-activated', () => {\n    console.log('🔄 WebSocket fallback activated');\n    reliabilityMonitor.updateComponentMetrics('websocket', {\n      fallbackActive: true,\n      fallbackActivatedAt: new Date()\n    });\n  });\n  \n  window.addEventListener('websocket-fallback-deactivated', () => {\n    console.log('✅ WebSocket fallback deactivated');\n    reliabilityMonitor.updateComponentMetrics('websocket', {\n      fallbackActive: false,\n      fallbackDeactivatedAt: new Date()\n    });\n  });\n  \n  // API fallback events\n  window.addEventListener('api-fallback-activated', () => {\n    console.log('🔄 API fallback activated');\n    reliabilityMonitor.updateComponentMetrics('api-server', {\n      fallbackActive: true,\n      fallbackActivatedAt: new Date()\n    });\n  });\n  \n  window.addEventListener('api-fallback-deactivated', () => {\n    console.log('✅ API fallback deactivated');\n    reliabilityMonitor.updateComponentMetrics('api-server', {\n      fallbackActive: false,\n      fallbackDeactivatedAt: new Date()\n    });\n  });\n}\n\n// Export reliability systems for external use\nexport { reliabilityMonitor, fallbackSystemManager, tfCompatibility };\n\n// Auto-initialize when module is loaded\nif (typeof window !== 'undefined') {\n  initializeReliabilitySystems().catch(console.error);\n}\n","const CLASS_PART_SEPARATOR = '-';\nconst createClassGroupUtils = config => {\n  const classMap = createClassMap(config);\n  const {\n    conflictingClassGroups,\n    conflictingClassGroupModifiers\n  } = config;\n  const getClassGroupId = className => {\n    const classParts = className.split(CLASS_PART_SEPARATOR);\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  };\n  const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier) => {\n    const conflicts = conflictingClassGroups[classGroupId] || [];\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];\n    }\n    return conflicts;\n  };\n  return {\n    getClassGroupId,\n    getConflictingClassGroupIds\n  };\n};\nconst getGroupRecursive = (classParts, classPartObject) => {\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n  const currentClassPart = classParts[0];\n  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n  const classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return classPartObject.validators.find(({\n    validator\n  }) => validator(classRest))?.classGroupId;\n};\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nconst getGroupIdForArbitraryProperty = className => {\n  if (arbitraryPropertyRegex.test(className)) {\n    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n};\n/**\n * Exported for testing only\n */\nconst createClassMap = config => {\n  const {\n    theme,\n    classGroups\n  } = config;\n  const classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  for (const classGroupId in classGroups) {\n    processClassesRecursively(classGroups[classGroupId], classMap, classGroupId, theme);\n  }\n  return classMap;\n};\nconst processClassesRecursively = (classGroup, classPartObject, classGroupId, theme) => {\n  classGroup.forEach(classDefinition => {\n    if (typeof classDefinition === 'string') {\n      const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId\n      });\n      return;\n    }\n    Object.entries(classDefinition).forEach(([key, classGroup]) => {\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n};\nconst getPart = (classPartObject, path) => {\n  let currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(pathPart => {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n};\nconst isThemeGetter = func => func.isThemeGetter;\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nconst createLruCache = maxCacheSize => {\n  if (maxCacheSize < 1) {\n    return {\n      get: () => undefined,\n      set: () => {}\n    };\n  }\n  let cacheSize = 0;\n  let cache = new Map();\n  let previousCache = new Map();\n  const update = (key, value) => {\n    cache.set(key, value);\n    cacheSize++;\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  };\n  return {\n    get(key) {\n      let value = cache.get(key);\n      if (value !== undefined) {\n        return value;\n      }\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n};\nconst IMPORTANT_MODIFIER = '!';\nconst MODIFIER_SEPARATOR = ':';\nconst MODIFIER_SEPARATOR_LENGTH = MODIFIER_SEPARATOR.length;\nconst createParseClassName = config => {\n  const {\n    prefix,\n    experimentalParseClassName\n  } = config;\n  /**\n   * Parse class name into parts.\n   *\n   * Inspired by `splitAtTopLevelOnly` used in Tailwind CSS\n   * @see https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n   */\n  let parseClassName = className => {\n    const modifiers = [];\n    let bracketDepth = 0;\n    let parenDepth = 0;\n    let modifierStart = 0;\n    let postfixModifierPosition;\n    for (let index = 0; index < className.length; index++) {\n      let currentCharacter = className[index];\n      if (bracketDepth === 0 && parenDepth === 0) {\n        if (currentCharacter === MODIFIER_SEPARATOR) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + MODIFIER_SEPARATOR_LENGTH;\n          continue;\n        }\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      } else if (currentCharacter === '(') {\n        parenDepth++;\n      } else if (currentCharacter === ')') {\n        parenDepth--;\n      }\n    }\n    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    const baseClassName = stripImportantModifier(baseClassNameWithImportantModifier);\n    const hasImportantModifier = baseClassName !== baseClassNameWithImportantModifier;\n    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    };\n  };\n  if (prefix) {\n    const fullPrefix = prefix + MODIFIER_SEPARATOR;\n    const parseClassNameOriginal = parseClassName;\n    parseClassName = className => className.startsWith(fullPrefix) ? parseClassNameOriginal(className.substring(fullPrefix.length)) : {\n      isExternal: true,\n      modifiers: [],\n      hasImportantModifier: false,\n      baseClassName: className,\n      maybePostfixModifierPosition: undefined\n    };\n  }\n  if (experimentalParseClassName) {\n    const parseClassNameOriginal = parseClassName;\n    parseClassName = className => experimentalParseClassName({\n      className,\n      parseClassName: parseClassNameOriginal\n    });\n  }\n  return parseClassName;\n};\nconst stripImportantModifier = baseClassName => {\n  if (baseClassName.endsWith(IMPORTANT_MODIFIER)) {\n    return baseClassName.substring(0, baseClassName.length - 1);\n  }\n  /**\n   * In Tailwind CSS v3 the important modifier was at the start of the base class name. This is still supported for legacy reasons.\n   * @see https://github.com/dcastil/tailwind-merge/issues/513#issuecomment-2614029864\n   */\n  if (baseClassName.startsWith(IMPORTANT_MODIFIER)) {\n    return baseClassName.substring(1);\n  }\n  return baseClassName;\n};\n\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nconst createSortModifiers = config => {\n  const orderSensitiveModifiers = Object.fromEntries(config.orderSensitiveModifiers.map(modifier => [modifier, true]));\n  const sortModifiers = modifiers => {\n    if (modifiers.length <= 1) {\n      return modifiers;\n    }\n    const sortedModifiers = [];\n    let unsortedModifiers = [];\n    modifiers.forEach(modifier => {\n      const isPositionSensitive = modifier[0] === '[' || orderSensitiveModifiers[modifier];\n      if (isPositionSensitive) {\n        sortedModifiers.push(...unsortedModifiers.sort(), modifier);\n        unsortedModifiers = [];\n      } else {\n        unsortedModifiers.push(modifier);\n      }\n    });\n    sortedModifiers.push(...unsortedModifiers.sort());\n    return sortedModifiers;\n  };\n  return sortModifiers;\n};\nconst createConfigUtils = config => ({\n  cache: createLruCache(config.cacheSize),\n  parseClassName: createParseClassName(config),\n  sortModifiers: createSortModifiers(config),\n  ...createClassGroupUtils(config)\n});\nconst SPLIT_CLASSES_REGEX = /\\s+/;\nconst mergeClassList = (classList, configUtils) => {\n  const {\n    parseClassName,\n    getClassGroupId,\n    getConflictingClassGroupIds,\n    sortModifiers\n  } = configUtils;\n  /**\n   * Set of classGroupIds in following format:\n   * `{importantModifier}{variantModifiers}{classGroupId}`\n   * @example 'float'\n   * @example 'hover:focus:bg-color'\n   * @example 'md:!pr'\n   */\n  const classGroupsInConflict = [];\n  const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);\n  let result = '';\n  for (let index = classNames.length - 1; index >= 0; index -= 1) {\n    const originalClassName = classNames[index];\n    const {\n      isExternal,\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    } = parseClassName(originalClassName);\n    if (isExternal) {\n      result = originalClassName + (result.length > 0 ? ' ' + result : result);\n      continue;\n    }\n    let hasPostfixModifier = !!maybePostfixModifierPosition;\n    let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n    if (!classGroupId) {\n      if (!hasPostfixModifier) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      classGroupId = getClassGroupId(baseClassName);\n      if (!classGroupId) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      hasPostfixModifier = false;\n    }\n    const variantModifier = sortModifiers(modifiers).join(':');\n    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    const classId = modifierId + classGroupId;\n    if (classGroupsInConflict.includes(classId)) {\n      // Tailwind class omitted due to conflict\n      continue;\n    }\n    classGroupsInConflict.push(classId);\n    const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);\n    for (let i = 0; i < conflictGroups.length; ++i) {\n      const group = conflictGroups[i];\n      classGroupsInConflict.push(modifierId + group);\n    }\n    // Tailwind class not in conflict\n    result = originalClassName + (result.length > 0 ? ' ' + result : result);\n  }\n  return result;\n};\n\n/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\nfunction twJoin() {\n  let index = 0;\n  let argument;\n  let resolvedValue;\n  let string = '';\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nconst toValue = mix => {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n  let resolvedValue;\n  let string = '';\n  for (let k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n};\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\n  let configUtils;\n  let cacheGet;\n  let cacheSet;\n  let functionToCall = initTailwindMerge;\n  function initTailwindMerge(classList) {\n    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n  function tailwindMerge(classList) {\n    const cachedResult = cacheGet(classList);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    const result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\nconst fromTheme = key => {\n  const themeGetter = theme => theme[key] || [];\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n};\nconst arbitraryValueRegex = /^\\[(?:(\\w[\\w-]*):)?(.+)\\]$/i;\nconst arbitraryVariableRegex = /^\\((?:(\\w[\\w-]*):)?(.+)\\)$/i;\nconst fractionRegex = /^\\d+\\/\\d+$/;\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch)|color-mix)\\(.+\\)$/;\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\nconst isFraction = value => fractionRegex.test(value);\nconst isNumber = value => !!value && !Number.isNaN(Number(value));\nconst isInteger = value => !!value && Number.isInteger(Number(value));\nconst isPercent = value => value.endsWith('%') && isNumber(value.slice(0, -1));\nconst isTshirtSize = value => tshirtUnitRegex.test(value);\nconst isAny = () => true;\nconst isLengthOnly = value =>\n// `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n// For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n// I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\nlengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\nconst isNever = () => false;\nconst isShadow = value => shadowRegex.test(value);\nconst isImage = value => imageRegex.test(value);\nconst isAnyNonArbitrary = value => !isArbitraryValue(value) && !isArbitraryVariable(value);\nconst isArbitrarySize = value => getIsArbitraryValue(value, isLabelSize, isNever);\nconst isArbitraryValue = value => arbitraryValueRegex.test(value);\nconst isArbitraryLength = value => getIsArbitraryValue(value, isLabelLength, isLengthOnly);\nconst isArbitraryNumber = value => getIsArbitraryValue(value, isLabelNumber, isNumber);\nconst isArbitraryPosition = value => getIsArbitraryValue(value, isLabelPosition, isNever);\nconst isArbitraryImage = value => getIsArbitraryValue(value, isLabelImage, isImage);\nconst isArbitraryShadow = value => getIsArbitraryValue(value, isLabelShadow, isShadow);\nconst isArbitraryVariable = value => arbitraryVariableRegex.test(value);\nconst isArbitraryVariableLength = value => getIsArbitraryVariable(value, isLabelLength);\nconst isArbitraryVariableFamilyName = value => getIsArbitraryVariable(value, isLabelFamilyName);\nconst isArbitraryVariablePosition = value => getIsArbitraryVariable(value, isLabelPosition);\nconst isArbitraryVariableSize = value => getIsArbitraryVariable(value, isLabelSize);\nconst isArbitraryVariableImage = value => getIsArbitraryVariable(value, isLabelImage);\nconst isArbitraryVariableShadow = value => getIsArbitraryVariable(value, isLabelShadow, true);\n// Helpers\nconst getIsArbitraryValue = (value, testLabel, testValue) => {\n  const result = arbitraryValueRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return testLabel(result[1]);\n    }\n    return testValue(result[2]);\n  }\n  return false;\n};\nconst getIsArbitraryVariable = (value, testLabel, shouldMatchNoLabel = false) => {\n  const result = arbitraryVariableRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return testLabel(result[1]);\n    }\n    return shouldMatchNoLabel;\n  }\n  return false;\n};\n// Labels\nconst isLabelPosition = label => label === 'position' || label === 'percentage';\nconst isLabelImage = label => label === 'image' || label === 'url';\nconst isLabelSize = label => label === 'length' || label === 'size' || label === 'bg-size';\nconst isLabelLength = label => label === 'length';\nconst isLabelNumber = label => label === 'number';\nconst isLabelFamilyName = label => label === 'family-name';\nconst isLabelShadow = label => label === 'shadow';\nconst validators = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  isAny,\n  isAnyNonArbitrary,\n  isArbitraryImage,\n  isArbitraryLength,\n  isArbitraryNumber,\n  isArbitraryPosition,\n  isArbitraryShadow,\n  isArbitrarySize,\n  isArbitraryValue,\n  isArbitraryVariable,\n  isArbitraryVariableFamilyName,\n  isArbitraryVariableImage,\n  isArbitraryVariableLength,\n  isArbitraryVariablePosition,\n  isArbitraryVariableShadow,\n  isArbitraryVariableSize,\n  isFraction,\n  isInteger,\n  isNumber,\n  isPercent,\n  isTshirtSize\n}, Symbol.toStringTag, {\n  value: 'Module'\n});\nconst getDefaultConfig = () => {\n  /**\n   * Theme getters for theme variable namespaces\n   * @see https://tailwindcss.com/docs/theme#theme-variable-namespaces\n   */\n  /***/\n  const themeColor = fromTheme('color');\n  const themeFont = fromTheme('font');\n  const themeText = fromTheme('text');\n  const themeFontWeight = fromTheme('font-weight');\n  const themeTracking = fromTheme('tracking');\n  const themeLeading = fromTheme('leading');\n  const themeBreakpoint = fromTheme('breakpoint');\n  const themeContainer = fromTheme('container');\n  const themeSpacing = fromTheme('spacing');\n  const themeRadius = fromTheme('radius');\n  const themeShadow = fromTheme('shadow');\n  const themeInsetShadow = fromTheme('inset-shadow');\n  const themeTextShadow = fromTheme('text-shadow');\n  const themeDropShadow = fromTheme('drop-shadow');\n  const themeBlur = fromTheme('blur');\n  const themePerspective = fromTheme('perspective');\n  const themeAspect = fromTheme('aspect');\n  const themeEase = fromTheme('ease');\n  const themeAnimate = fromTheme('animate');\n  /**\n   * Helpers to avoid repeating the same scales\n   *\n   * We use functions that create a new array every time they're called instead of static arrays.\n   * This ensures that users who modify any scale by mutating the array (e.g. with `array.push(element)`) don't accidentally mutate arrays in other parts of the config.\n   */\n  /***/\n  const scaleBreak = () => ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  const scalePosition = () => ['center', 'top', 'bottom', 'left', 'right', 'top-left',\n  // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n  'left-top', 'top-right',\n  // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n  'right-top', 'bottom-right',\n  // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n  'right-bottom', 'bottom-left',\n  // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n  'left-bottom'];\n  const scalePositionWithArbitrary = () => [...scalePosition(), isArbitraryVariable, isArbitraryValue];\n  const scaleOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  const scaleOverscroll = () => ['auto', 'contain', 'none'];\n  const scaleUnambiguousSpacing = () => [isArbitraryVariable, isArbitraryValue, themeSpacing];\n  const scaleInset = () => [isFraction, 'full', 'auto', ...scaleUnambiguousSpacing()];\n  const scaleGridTemplateColsRows = () => [isInteger, 'none', 'subgrid', isArbitraryVariable, isArbitraryValue];\n  const scaleGridColRowStartAndEnd = () => ['auto', {\n    span: ['full', isInteger, isArbitraryVariable, isArbitraryValue]\n  }, isInteger, isArbitraryVariable, isArbitraryValue];\n  const scaleGridColRowStartOrEnd = () => [isInteger, 'auto', isArbitraryVariable, isArbitraryValue];\n  const scaleGridAutoColsRows = () => ['auto', 'min', 'max', 'fr', isArbitraryVariable, isArbitraryValue];\n  const scaleAlignPrimaryAxis = () => ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch', 'baseline', 'center-safe', 'end-safe'];\n  const scaleAlignSecondaryAxis = () => ['start', 'end', 'center', 'stretch', 'center-safe', 'end-safe'];\n  const scaleMargin = () => ['auto', ...scaleUnambiguousSpacing()];\n  const scaleSizing = () => [isFraction, 'auto', 'full', 'dvw', 'dvh', 'lvw', 'lvh', 'svw', 'svh', 'min', 'max', 'fit', ...scaleUnambiguousSpacing()];\n  const scaleColor = () => [themeColor, isArbitraryVariable, isArbitraryValue];\n  const scaleBgPosition = () => [...scalePosition(), isArbitraryVariablePosition, isArbitraryPosition, {\n    position: [isArbitraryVariable, isArbitraryValue]\n  }];\n  const scaleBgRepeat = () => ['no-repeat', {\n    repeat: ['', 'x', 'y', 'space', 'round']\n  }];\n  const scaleBgSize = () => ['auto', 'cover', 'contain', isArbitraryVariableSize, isArbitrarySize, {\n    size: [isArbitraryVariable, isArbitraryValue]\n  }];\n  const scaleGradientStopPosition = () => [isPercent, isArbitraryVariableLength, isArbitraryLength];\n  const scaleRadius = () => [\n  // Deprecated since Tailwind CSS v4.0.0\n  '', 'none', 'full', themeRadius, isArbitraryVariable, isArbitraryValue];\n  const scaleBorderWidth = () => ['', isNumber, isArbitraryVariableLength, isArbitraryLength];\n  const scaleLineStyle = () => ['solid', 'dashed', 'dotted', 'double'];\n  const scaleBlendMode = () => ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\n  const scaleMaskImagePosition = () => [isNumber, isPercent, isArbitraryVariablePosition, isArbitraryPosition];\n  const scaleBlur = () => [\n  // Deprecated since Tailwind CSS v4.0.0\n  '', 'none', themeBlur, isArbitraryVariable, isArbitraryValue];\n  const scaleRotate = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue];\n  const scaleScale = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue];\n  const scaleSkew = () => [isNumber, isArbitraryVariable, isArbitraryValue];\n  const scaleTranslate = () => [isFraction, 'full', ...scaleUnambiguousSpacing()];\n  return {\n    cacheSize: 500,\n    theme: {\n      animate: ['spin', 'ping', 'pulse', 'bounce'],\n      aspect: ['video'],\n      blur: [isTshirtSize],\n      breakpoint: [isTshirtSize],\n      color: [isAny],\n      container: [isTshirtSize],\n      'drop-shadow': [isTshirtSize],\n      ease: ['in', 'out', 'in-out'],\n      font: [isAnyNonArbitrary],\n      'font-weight': ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black'],\n      'inset-shadow': [isTshirtSize],\n      leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose'],\n      perspective: ['dramatic', 'near', 'normal', 'midrange', 'distant', 'none'],\n      radius: [isTshirtSize],\n      shadow: [isTshirtSize],\n      spacing: ['px', isNumber],\n      text: [isTshirtSize],\n      'text-shadow': [isTshirtSize],\n      tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest']\n    },\n    classGroups: {\n      // --------------\n      // --- Layout ---\n      // --------------\n      /**\n       * Aspect Ratio\n       * @see https://tailwindcss.com/docs/aspect-ratio\n       */\n      aspect: [{\n        aspect: ['auto', 'square', isFraction, isArbitraryValue, isArbitraryVariable, themeAspect]\n      }],\n      /**\n       * Container\n       * @see https://tailwindcss.com/docs/container\n       * @deprecated since Tailwind CSS v4.0.0\n       */\n      container: ['container'],\n      /**\n       * Columns\n       * @see https://tailwindcss.com/docs/columns\n       */\n      columns: [{\n        columns: [isNumber, isArbitraryValue, isArbitraryVariable, themeContainer]\n      }],\n      /**\n       * Break After\n       * @see https://tailwindcss.com/docs/break-after\n       */\n      'break-after': [{\n        'break-after': scaleBreak()\n      }],\n      /**\n       * Break Before\n       * @see https://tailwindcss.com/docs/break-before\n       */\n      'break-before': [{\n        'break-before': scaleBreak()\n      }],\n      /**\n       * Break Inside\n       * @see https://tailwindcss.com/docs/break-inside\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n      /**\n       * Box Decoration Break\n       * @see https://tailwindcss.com/docs/box-decoration-break\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n      /**\n       * Box Sizing\n       * @see https://tailwindcss.com/docs/box-sizing\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n      /**\n       * Display\n       * @see https://tailwindcss.com/docs/display\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n      /**\n       * Screen Reader Only\n       * @see https://tailwindcss.com/docs/display#screen-reader-only\n       */\n      sr: ['sr-only', 'not-sr-only'],\n      /**\n       * Floats\n       * @see https://tailwindcss.com/docs/float\n       */\n      float: [{\n        float: ['right', 'left', 'none', 'start', 'end']\n      }],\n      /**\n       * Clear\n       * @see https://tailwindcss.com/docs/clear\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none', 'start', 'end']\n      }],\n      /**\n       * Isolation\n       * @see https://tailwindcss.com/docs/isolation\n       */\n      isolation: ['isolate', 'isolation-auto'],\n      /**\n       * Object Fit\n       * @see https://tailwindcss.com/docs/object-fit\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n      /**\n       * Object Position\n       * @see https://tailwindcss.com/docs/object-position\n       */\n      'object-position': [{\n        object: scalePositionWithArbitrary()\n      }],\n      /**\n       * Overflow\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      overflow: [{\n        overflow: scaleOverflow()\n      }],\n      /**\n       * Overflow X\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-x': [{\n        'overflow-x': scaleOverflow()\n      }],\n      /**\n       * Overflow Y\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-y': [{\n        'overflow-y': scaleOverflow()\n      }],\n      /**\n       * Overscroll Behavior\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      overscroll: [{\n        overscroll: scaleOverscroll()\n      }],\n      /**\n       * Overscroll Behavior X\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-x': [{\n        'overscroll-x': scaleOverscroll()\n      }],\n      /**\n       * Overscroll Behavior Y\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-y': [{\n        'overscroll-y': scaleOverscroll()\n      }],\n      /**\n       * Position\n       * @see https://tailwindcss.com/docs/position\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n      /**\n       * Top / Right / Bottom / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      inset: [{\n        inset: scaleInset()\n      }],\n      /**\n       * Right / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-x': [{\n        'inset-x': scaleInset()\n      }],\n      /**\n       * Top / Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-y': [{\n        'inset-y': scaleInset()\n      }],\n      /**\n       * Start\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      start: [{\n        start: scaleInset()\n      }],\n      /**\n       * End\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      end: [{\n        end: scaleInset()\n      }],\n      /**\n       * Top\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      top: [{\n        top: scaleInset()\n      }],\n      /**\n       * Right\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      right: [{\n        right: scaleInset()\n      }],\n      /**\n       * Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      bottom: [{\n        bottom: scaleInset()\n      }],\n      /**\n       * Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      left: [{\n        left: scaleInset()\n      }],\n      /**\n       * Visibility\n       * @see https://tailwindcss.com/docs/visibility\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n      /**\n       * Z-Index\n       * @see https://tailwindcss.com/docs/z-index\n       */\n      z: [{\n        z: [isInteger, 'auto', isArbitraryVariable, isArbitraryValue]\n      }],\n      // ------------------------\n      // --- Flexbox and Grid ---\n      // ------------------------\n      /**\n       * Flex Basis\n       * @see https://tailwindcss.com/docs/flex-basis\n       */\n      basis: [{\n        basis: [isFraction, 'full', 'auto', themeContainer, ...scaleUnambiguousSpacing()]\n      }],\n      /**\n       * Flex Direction\n       * @see https://tailwindcss.com/docs/flex-direction\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n      /**\n       * Flex Wrap\n       * @see https://tailwindcss.com/docs/flex-wrap\n       */\n      'flex-wrap': [{\n        flex: ['nowrap', 'wrap', 'wrap-reverse']\n      }],\n      /**\n       * Flex\n       * @see https://tailwindcss.com/docs/flex\n       */\n      flex: [{\n        flex: [isNumber, isFraction, 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n      /**\n       * Flex Grow\n       * @see https://tailwindcss.com/docs/flex-grow\n       */\n      grow: [{\n        grow: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Flex Shrink\n       * @see https://tailwindcss.com/docs/flex-shrink\n       */\n      shrink: [{\n        shrink: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Order\n       * @see https://tailwindcss.com/docs/order\n       */\n      order: [{\n        order: [isInteger, 'first', 'last', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Grid Template Columns\n       * @see https://tailwindcss.com/docs/grid-template-columns\n       */\n      'grid-cols': [{\n        'grid-cols': scaleGridTemplateColsRows()\n      }],\n      /**\n       * Grid Column Start / End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start-end': [{\n        col: scaleGridColRowStartAndEnd()\n      }],\n      /**\n       * Grid Column Start\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start': [{\n        'col-start': scaleGridColRowStartOrEnd()\n      }],\n      /**\n       * Grid Column End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-end': [{\n        'col-end': scaleGridColRowStartOrEnd()\n      }],\n      /**\n       * Grid Template Rows\n       * @see https://tailwindcss.com/docs/grid-template-rows\n       */\n      'grid-rows': [{\n        'grid-rows': scaleGridTemplateColsRows()\n      }],\n      /**\n       * Grid Row Start / End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start-end': [{\n        row: scaleGridColRowStartAndEnd()\n      }],\n      /**\n       * Grid Row Start\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start': [{\n        'row-start': scaleGridColRowStartOrEnd()\n      }],\n      /**\n       * Grid Row End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-end': [{\n        'row-end': scaleGridColRowStartOrEnd()\n      }],\n      /**\n       * Grid Auto Flow\n       * @see https://tailwindcss.com/docs/grid-auto-flow\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n      /**\n       * Grid Auto Columns\n       * @see https://tailwindcss.com/docs/grid-auto-columns\n       */\n      'auto-cols': [{\n        'auto-cols': scaleGridAutoColsRows()\n      }],\n      /**\n       * Grid Auto Rows\n       * @see https://tailwindcss.com/docs/grid-auto-rows\n       */\n      'auto-rows': [{\n        'auto-rows': scaleGridAutoColsRows()\n      }],\n      /**\n       * Gap\n       * @see https://tailwindcss.com/docs/gap\n       */\n      gap: [{\n        gap: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Gap X\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-x': [{\n        'gap-x': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Gap Y\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-y': [{\n        'gap-y': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Justify Content\n       * @see https://tailwindcss.com/docs/justify-content\n       */\n      'justify-content': [{\n        justify: [...scaleAlignPrimaryAxis(), 'normal']\n      }],\n      /**\n       * Justify Items\n       * @see https://tailwindcss.com/docs/justify-items\n       */\n      'justify-items': [{\n        'justify-items': [...scaleAlignSecondaryAxis(), 'normal']\n      }],\n      /**\n       * Justify Self\n       * @see https://tailwindcss.com/docs/justify-self\n       */\n      'justify-self': [{\n        'justify-self': ['auto', ...scaleAlignSecondaryAxis()]\n      }],\n      /**\n       * Align Content\n       * @see https://tailwindcss.com/docs/align-content\n       */\n      'align-content': [{\n        content: ['normal', ...scaleAlignPrimaryAxis()]\n      }],\n      /**\n       * Align Items\n       * @see https://tailwindcss.com/docs/align-items\n       */\n      'align-items': [{\n        items: [...scaleAlignSecondaryAxis(), {\n          baseline: ['', 'last']\n        }]\n      }],\n      /**\n       * Align Self\n       * @see https://tailwindcss.com/docs/align-self\n       */\n      'align-self': [{\n        self: ['auto', ...scaleAlignSecondaryAxis(), {\n          baseline: ['', 'last']\n        }]\n      }],\n      /**\n       * Place Content\n       * @see https://tailwindcss.com/docs/place-content\n       */\n      'place-content': [{\n        'place-content': scaleAlignPrimaryAxis()\n      }],\n      /**\n       * Place Items\n       * @see https://tailwindcss.com/docs/place-items\n       */\n      'place-items': [{\n        'place-items': [...scaleAlignSecondaryAxis(), 'baseline']\n      }],\n      /**\n       * Place Self\n       * @see https://tailwindcss.com/docs/place-self\n       */\n      'place-self': [{\n        'place-self': ['auto', ...scaleAlignSecondaryAxis()]\n      }],\n      // Spacing\n      /**\n       * Padding\n       * @see https://tailwindcss.com/docs/padding\n       */\n      p: [{\n        p: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding X\n       * @see https://tailwindcss.com/docs/padding\n       */\n      px: [{\n        px: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Y\n       * @see https://tailwindcss.com/docs/padding\n       */\n      py: [{\n        py: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Start\n       * @see https://tailwindcss.com/docs/padding\n       */\n      ps: [{\n        ps: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding End\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pe: [{\n        pe: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Top\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pt: [{\n        pt: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Right\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pr: [{\n        pr: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Bottom\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pb: [{\n        pb: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Left\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pl: [{\n        pl: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Margin\n       * @see https://tailwindcss.com/docs/margin\n       */\n      m: [{\n        m: scaleMargin()\n      }],\n      /**\n       * Margin X\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mx: [{\n        mx: scaleMargin()\n      }],\n      /**\n       * Margin Y\n       * @see https://tailwindcss.com/docs/margin\n       */\n      my: [{\n        my: scaleMargin()\n      }],\n      /**\n       * Margin Start\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ms: [{\n        ms: scaleMargin()\n      }],\n      /**\n       * Margin End\n       * @see https://tailwindcss.com/docs/margin\n       */\n      me: [{\n        me: scaleMargin()\n      }],\n      /**\n       * Margin Top\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mt: [{\n        mt: scaleMargin()\n      }],\n      /**\n       * Margin Right\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mr: [{\n        mr: scaleMargin()\n      }],\n      /**\n       * Margin Bottom\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mb: [{\n        mb: scaleMargin()\n      }],\n      /**\n       * Margin Left\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ml: [{\n        ml: scaleMargin()\n      }],\n      /**\n       * Space Between X\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */\n      'space-x': [{\n        'space-x': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Space Between X Reverse\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */\n      'space-x-reverse': ['space-x-reverse'],\n      /**\n       * Space Between Y\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */\n      'space-y': [{\n        'space-y': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Space Between Y Reverse\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // --------------\n      // --- Sizing ---\n      // --------------\n      /**\n       * Size\n       * @see https://tailwindcss.com/docs/width#setting-both-width-and-height\n       */\n      size: [{\n        size: scaleSizing()\n      }],\n      /**\n       * Width\n       * @see https://tailwindcss.com/docs/width\n       */\n      w: [{\n        w: [themeContainer, 'screen', ...scaleSizing()]\n      }],\n      /**\n       * Min-Width\n       * @see https://tailwindcss.com/docs/min-width\n       */\n      'min-w': [{\n        'min-w': [themeContainer, 'screen', /** Deprecated. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        'none', ...scaleSizing()]\n      }],\n      /**\n       * Max-Width\n       * @see https://tailwindcss.com/docs/max-width\n       */\n      'max-w': [{\n        'max-w': [themeContainer, 'screen', 'none', /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        'prose', /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        {\n          screen: [themeBreakpoint]\n        }, ...scaleSizing()]\n      }],\n      /**\n       * Height\n       * @see https://tailwindcss.com/docs/height\n       */\n      h: [{\n        h: ['screen', 'lh', ...scaleSizing()]\n      }],\n      /**\n       * Min-Height\n       * @see https://tailwindcss.com/docs/min-height\n       */\n      'min-h': [{\n        'min-h': ['screen', 'lh', 'none', ...scaleSizing()]\n      }],\n      /**\n       * Max-Height\n       * @see https://tailwindcss.com/docs/max-height\n       */\n      'max-h': [{\n        'max-h': ['screen', 'lh', ...scaleSizing()]\n      }],\n      // ------------------\n      // --- Typography ---\n      // ------------------\n      /**\n       * Font Size\n       * @see https://tailwindcss.com/docs/font-size\n       */\n      'font-size': [{\n        text: ['base', themeText, isArbitraryVariableLength, isArbitraryLength]\n      }],\n      /**\n       * Font Smoothing\n       * @see https://tailwindcss.com/docs/font-smoothing\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n      /**\n       * Font Style\n       * @see https://tailwindcss.com/docs/font-style\n       */\n      'font-style': ['italic', 'not-italic'],\n      /**\n       * Font Weight\n       * @see https://tailwindcss.com/docs/font-weight\n       */\n      'font-weight': [{\n        font: [themeFontWeight, isArbitraryVariable, isArbitraryNumber]\n      }],\n      /**\n       * Font Stretch\n       * @see https://tailwindcss.com/docs/font-stretch\n       */\n      'font-stretch': [{\n        'font-stretch': ['ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded', isPercent, isArbitraryValue]\n      }],\n      /**\n       * Font Family\n       * @see https://tailwindcss.com/docs/font-family\n       */\n      'font-family': [{\n        font: [isArbitraryVariableFamilyName, isArbitraryValue, themeFont]\n      }],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-normal': ['normal-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-ordinal': ['ordinal'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractions'],\n      /**\n       * Letter Spacing\n       * @see https://tailwindcss.com/docs/letter-spacing\n       */\n      tracking: [{\n        tracking: [themeTracking, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Line Clamp\n       * @see https://tailwindcss.com/docs/line-clamp\n       */\n      'line-clamp': [{\n        'line-clamp': [isNumber, 'none', isArbitraryVariable, isArbitraryNumber]\n      }],\n      /**\n       * Line Height\n       * @see https://tailwindcss.com/docs/line-height\n       */\n      leading: [{\n        leading: [/** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        themeLeading, ...scaleUnambiguousSpacing()]\n      }],\n      /**\n       * List Style Image\n       * @see https://tailwindcss.com/docs/list-style-image\n       */\n      'list-image': [{\n        'list-image': ['none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * List Style Position\n       * @see https://tailwindcss.com/docs/list-style-position\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n      /**\n       * List Style Type\n       * @see https://tailwindcss.com/docs/list-style-type\n       */\n      'list-style-type': [{\n        list: ['disc', 'decimal', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Text Alignment\n       * @see https://tailwindcss.com/docs/text-align\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n      /**\n       * Placeholder Color\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://v3.tailwindcss.com/docs/placeholder-color\n       */\n      'placeholder-color': [{\n        placeholder: scaleColor()\n      }],\n      /**\n       * Text Color\n       * @see https://tailwindcss.com/docs/text-color\n       */\n      'text-color': [{\n        text: scaleColor()\n      }],\n      /**\n       * Text Decoration\n       * @see https://tailwindcss.com/docs/text-decoration\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n      /**\n       * Text Decoration Style\n       * @see https://tailwindcss.com/docs/text-decoration-style\n       */\n      'text-decoration-style': [{\n        decoration: [...scaleLineStyle(), 'wavy']\n      }],\n      /**\n       * Text Decoration Thickness\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\n       */\n      'text-decoration-thickness': [{\n        decoration: [isNumber, 'from-font', 'auto', isArbitraryVariable, isArbitraryLength]\n      }],\n      /**\n       * Text Decoration Color\n       * @see https://tailwindcss.com/docs/text-decoration-color\n       */\n      'text-decoration-color': [{\n        decoration: scaleColor()\n      }],\n      /**\n       * Text Underline Offset\n       * @see https://tailwindcss.com/docs/text-underline-offset\n       */\n      'underline-offset': [{\n        'underline-offset': [isNumber, 'auto', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Text Transform\n       * @see https://tailwindcss.com/docs/text-transform\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n      /**\n       * Text Overflow\n       * @see https://tailwindcss.com/docs/text-overflow\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n      /**\n       * Text Wrap\n       * @see https://tailwindcss.com/docs/text-wrap\n       */\n      'text-wrap': [{\n        text: ['wrap', 'nowrap', 'balance', 'pretty']\n      }],\n      /**\n       * Text Indent\n       * @see https://tailwindcss.com/docs/text-indent\n       */\n      indent: [{\n        indent: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Vertical Alignment\n       * @see https://tailwindcss.com/docs/vertical-align\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Whitespace\n       * @see https://tailwindcss.com/docs/whitespace\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\n      }],\n      /**\n       * Word Break\n       * @see https://tailwindcss.com/docs/word-break\n       */\n      break: [{\n        break: ['normal', 'words', 'all', 'keep']\n      }],\n      /**\n       * Overflow Wrap\n       * @see https://tailwindcss.com/docs/overflow-wrap\n       */\n      wrap: [{\n        wrap: ['break-word', 'anywhere', 'normal']\n      }],\n      /**\n       * Hyphens\n       * @see https://tailwindcss.com/docs/hyphens\n       */\n      hyphens: [{\n        hyphens: ['none', 'manual', 'auto']\n      }],\n      /**\n       * Content\n       * @see https://tailwindcss.com/docs/content\n       */\n      content: [{\n        content: ['none', isArbitraryVariable, isArbitraryValue]\n      }],\n      // -------------------\n      // --- Backgrounds ---\n      // -------------------\n      /**\n       * Background Attachment\n       * @see https://tailwindcss.com/docs/background-attachment\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n      /**\n       * Background Clip\n       * @see https://tailwindcss.com/docs/background-clip\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n      /**\n       * Background Origin\n       * @see https://tailwindcss.com/docs/background-origin\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n      /**\n       * Background Position\n       * @see https://tailwindcss.com/docs/background-position\n       */\n      'bg-position': [{\n        bg: scaleBgPosition()\n      }],\n      /**\n       * Background Repeat\n       * @see https://tailwindcss.com/docs/background-repeat\n       */\n      'bg-repeat': [{\n        bg: scaleBgRepeat()\n      }],\n      /**\n       * Background Size\n       * @see https://tailwindcss.com/docs/background-size\n       */\n      'bg-size': [{\n        bg: scaleBgSize()\n      }],\n      /**\n       * Background Image\n       * @see https://tailwindcss.com/docs/background-image\n       */\n      'bg-image': [{\n        bg: ['none', {\n          linear: [{\n            to: ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n          }, isInteger, isArbitraryVariable, isArbitraryValue],\n          radial: ['', isArbitraryVariable, isArbitraryValue],\n          conic: [isInteger, isArbitraryVariable, isArbitraryValue]\n        }, isArbitraryVariableImage, isArbitraryImage]\n      }],\n      /**\n       * Background Color\n       * @see https://tailwindcss.com/docs/background-color\n       */\n      'bg-color': [{\n        bg: scaleColor()\n      }],\n      /**\n       * Gradient Color Stops From Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from-pos': [{\n        from: scaleGradientStopPosition()\n      }],\n      /**\n       * Gradient Color Stops Via Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via-pos': [{\n        via: scaleGradientStopPosition()\n      }],\n      /**\n       * Gradient Color Stops To Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to-pos': [{\n        to: scaleGradientStopPosition()\n      }],\n      /**\n       * Gradient Color Stops From\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from': [{\n        from: scaleColor()\n      }],\n      /**\n       * Gradient Color Stops Via\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via': [{\n        via: scaleColor()\n      }],\n      /**\n       * Gradient Color Stops To\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to': [{\n        to: scaleColor()\n      }],\n      // ---------------\n      // --- Borders ---\n      // ---------------\n      /**\n       * Border Radius\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      rounded: [{\n        rounded: scaleRadius()\n      }],\n      /**\n       * Border Radius Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-s': [{\n        'rounded-s': scaleRadius()\n      }],\n      /**\n       * Border Radius End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-e': [{\n        'rounded-e': scaleRadius()\n      }],\n      /**\n       * Border Radius Top\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-t': [{\n        'rounded-t': scaleRadius()\n      }],\n      /**\n       * Border Radius Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-r': [{\n        'rounded-r': scaleRadius()\n      }],\n      /**\n       * Border Radius Bottom\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-b': [{\n        'rounded-b': scaleRadius()\n      }],\n      /**\n       * Border Radius Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-l': [{\n        'rounded-l': scaleRadius()\n      }],\n      /**\n       * Border Radius Start Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ss': [{\n        'rounded-ss': scaleRadius()\n      }],\n      /**\n       * Border Radius Start End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-se': [{\n        'rounded-se': scaleRadius()\n      }],\n      /**\n       * Border Radius End End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ee': [{\n        'rounded-ee': scaleRadius()\n      }],\n      /**\n       * Border Radius End Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-es': [{\n        'rounded-es': scaleRadius()\n      }],\n      /**\n       * Border Radius Top Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tl': [{\n        'rounded-tl': scaleRadius()\n      }],\n      /**\n       * Border Radius Top Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tr': [{\n        'rounded-tr': scaleRadius()\n      }],\n      /**\n       * Border Radius Bottom Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-br': [{\n        'rounded-br': scaleRadius()\n      }],\n      /**\n       * Border Radius Bottom Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-bl': [{\n        'rounded-bl': scaleRadius()\n      }],\n      /**\n       * Border Width\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w': [{\n        border: scaleBorderWidth()\n      }],\n      /**\n       * Border Width X\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-x': [{\n        'border-x': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Y\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-y': [{\n        'border-y': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Start\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-s': [{\n        'border-s': scaleBorderWidth()\n      }],\n      /**\n       * Border Width End\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-e': [{\n        'border-e': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Top\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-t': [{\n        'border-t': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Right\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-r': [{\n        'border-r': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Bottom\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-b': [{\n        'border-b': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Left\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-l': [{\n        'border-l': scaleBorderWidth()\n      }],\n      /**\n       * Divide Width X\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */\n      'divide-x': [{\n        'divide-x': scaleBorderWidth()\n      }],\n      /**\n       * Divide Width X Reverse\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n      /**\n       * Divide Width Y\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */\n      'divide-y': [{\n        'divide-y': scaleBorderWidth()\n      }],\n      /**\n       * Divide Width Y Reverse\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n      /**\n       * Border Style\n       * @see https://tailwindcss.com/docs/border-style\n       */\n      'border-style': [{\n        border: [...scaleLineStyle(), 'hidden', 'none']\n      }],\n      /**\n       * Divide Style\n       * @see https://tailwindcss.com/docs/border-style#setting-the-divider-style\n       */\n      'divide-style': [{\n        divide: [...scaleLineStyle(), 'hidden', 'none']\n      }],\n      /**\n       * Border Color\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color': [{\n        border: scaleColor()\n      }],\n      /**\n       * Border Color X\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-x': [{\n        'border-x': scaleColor()\n      }],\n      /**\n       * Border Color Y\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-y': [{\n        'border-y': scaleColor()\n      }],\n      /**\n       * Border Color S\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-s': [{\n        'border-s': scaleColor()\n      }],\n      /**\n       * Border Color E\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-e': [{\n        'border-e': scaleColor()\n      }],\n      /**\n       * Border Color Top\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-t': [{\n        'border-t': scaleColor()\n      }],\n      /**\n       * Border Color Right\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-r': [{\n        'border-r': scaleColor()\n      }],\n      /**\n       * Border Color Bottom\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-b': [{\n        'border-b': scaleColor()\n      }],\n      /**\n       * Border Color Left\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-l': [{\n        'border-l': scaleColor()\n      }],\n      /**\n       * Divide Color\n       * @see https://tailwindcss.com/docs/divide-color\n       */\n      'divide-color': [{\n        divide: scaleColor()\n      }],\n      /**\n       * Outline Style\n       * @see https://tailwindcss.com/docs/outline-style\n       */\n      'outline-style': [{\n        outline: [...scaleLineStyle(), 'none', 'hidden']\n      }],\n      /**\n       * Outline Offset\n       * @see https://tailwindcss.com/docs/outline-offset\n       */\n      'outline-offset': [{\n        'outline-offset': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Outline Width\n       * @see https://tailwindcss.com/docs/outline-width\n       */\n      'outline-w': [{\n        outline: ['', isNumber, isArbitraryVariableLength, isArbitraryLength]\n      }],\n      /**\n       * Outline Color\n       * @see https://tailwindcss.com/docs/outline-color\n       */\n      'outline-color': [{\n        outline: scaleColor()\n      }],\n      // ---------------\n      // --- Effects ---\n      // ---------------\n      /**\n       * Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow\n       */\n      shadow: [{\n        shadow: [\n        // Deprecated since Tailwind CSS v4.0.0\n        '', 'none', themeShadow, isArbitraryVariableShadow, isArbitraryShadow]\n      }],\n      /**\n       * Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-shadow-color\n       */\n      'shadow-color': [{\n        shadow: scaleColor()\n      }],\n      /**\n       * Inset Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-shadow\n       */\n      'inset-shadow': [{\n        'inset-shadow': ['none', themeInsetShadow, isArbitraryVariableShadow, isArbitraryShadow]\n      }],\n      /**\n       * Inset Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-shadow-color\n       */\n      'inset-shadow-color': [{\n        'inset-shadow': scaleColor()\n      }],\n      /**\n       * Ring Width\n       * @see https://tailwindcss.com/docs/box-shadow#adding-a-ring\n       */\n      'ring-w': [{\n        ring: scaleBorderWidth()\n      }],\n      /**\n       * Ring Width Inset\n       * @see https://v3.tailwindcss.com/docs/ring-width#inset-rings\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */\n      'ring-w-inset': ['ring-inset'],\n      /**\n       * Ring Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-ring-color\n       */\n      'ring-color': [{\n        ring: scaleColor()\n      }],\n      /**\n       * Ring Offset Width\n       * @see https://v3.tailwindcss.com/docs/ring-offset-width\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isNumber, isArbitraryLength]\n      }],\n      /**\n       * Ring Offset Color\n       * @see https://v3.tailwindcss.com/docs/ring-offset-color\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */\n      'ring-offset-color': [{\n        'ring-offset': scaleColor()\n      }],\n      /**\n       * Inset Ring Width\n       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-ring\n       */\n      'inset-ring-w': [{\n        'inset-ring': scaleBorderWidth()\n      }],\n      /**\n       * Inset Ring Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-ring-color\n       */\n      'inset-ring-color': [{\n        'inset-ring': scaleColor()\n      }],\n      /**\n       * Text Shadow\n       * @see https://tailwindcss.com/docs/text-shadow\n       */\n      'text-shadow': [{\n        'text-shadow': ['none', themeTextShadow, isArbitraryVariableShadow, isArbitraryShadow]\n      }],\n      /**\n       * Text Shadow Color\n       * @see https://tailwindcss.com/docs/text-shadow#setting-the-shadow-color\n       */\n      'text-shadow-color': [{\n        'text-shadow': scaleColor()\n      }],\n      /**\n       * Opacity\n       * @see https://tailwindcss.com/docs/opacity\n       */\n      opacity: [{\n        opacity: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Mix Blend Mode\n       * @see https://tailwindcss.com/docs/mix-blend-mode\n       */\n      'mix-blend': [{\n        'mix-blend': [...scaleBlendMode(), 'plus-darker', 'plus-lighter']\n      }],\n      /**\n       * Background Blend Mode\n       * @see https://tailwindcss.com/docs/background-blend-mode\n       */\n      'bg-blend': [{\n        'bg-blend': scaleBlendMode()\n      }],\n      /**\n       * Mask Clip\n       * @see https://tailwindcss.com/docs/mask-clip\n       */\n      'mask-clip': [{\n        'mask-clip': ['border', 'padding', 'content', 'fill', 'stroke', 'view']\n      }, 'mask-no-clip'],\n      /**\n       * Mask Composite\n       * @see https://tailwindcss.com/docs/mask-composite\n       */\n      'mask-composite': [{\n        mask: ['add', 'subtract', 'intersect', 'exclude']\n      }],\n      /**\n       * Mask Image\n       * @see https://tailwindcss.com/docs/mask-image\n       */\n      'mask-image-linear-pos': [{\n        'mask-linear': [isNumber]\n      }],\n      'mask-image-linear-from-pos': [{\n        'mask-linear-from': scaleMaskImagePosition()\n      }],\n      'mask-image-linear-to-pos': [{\n        'mask-linear-to': scaleMaskImagePosition()\n      }],\n      'mask-image-linear-from-color': [{\n        'mask-linear-from': scaleColor()\n      }],\n      'mask-image-linear-to-color': [{\n        'mask-linear-to': scaleColor()\n      }],\n      'mask-image-t-from-pos': [{\n        'mask-t-from': scaleMaskImagePosition()\n      }],\n      'mask-image-t-to-pos': [{\n        'mask-t-to': scaleMaskImagePosition()\n      }],\n      'mask-image-t-from-color': [{\n        'mask-t-from': scaleColor()\n      }],\n      'mask-image-t-to-color': [{\n        'mask-t-to': scaleColor()\n      }],\n      'mask-image-r-from-pos': [{\n        'mask-r-from': scaleMaskImagePosition()\n      }],\n      'mask-image-r-to-pos': [{\n        'mask-r-to': scaleMaskImagePosition()\n      }],\n      'mask-image-r-from-color': [{\n        'mask-r-from': scaleColor()\n      }],\n      'mask-image-r-to-color': [{\n        'mask-r-to': scaleColor()\n      }],\n      'mask-image-b-from-pos': [{\n        'mask-b-from': scaleMaskImagePosition()\n      }],\n      'mask-image-b-to-pos': [{\n        'mask-b-to': scaleMaskImagePosition()\n      }],\n      'mask-image-b-from-color': [{\n        'mask-b-from': scaleColor()\n      }],\n      'mask-image-b-to-color': [{\n        'mask-b-to': scaleColor()\n      }],\n      'mask-image-l-from-pos': [{\n        'mask-l-from': scaleMaskImagePosition()\n      }],\n      'mask-image-l-to-pos': [{\n        'mask-l-to': scaleMaskImagePosition()\n      }],\n      'mask-image-l-from-color': [{\n        'mask-l-from': scaleColor()\n      }],\n      'mask-image-l-to-color': [{\n        'mask-l-to': scaleColor()\n      }],\n      'mask-image-x-from-pos': [{\n        'mask-x-from': scaleMaskImagePosition()\n      }],\n      'mask-image-x-to-pos': [{\n        'mask-x-to': scaleMaskImagePosition()\n      }],\n      'mask-image-x-from-color': [{\n        'mask-x-from': scaleColor()\n      }],\n      'mask-image-x-to-color': [{\n        'mask-x-to': scaleColor()\n      }],\n      'mask-image-y-from-pos': [{\n        'mask-y-from': scaleMaskImagePosition()\n      }],\n      'mask-image-y-to-pos': [{\n        'mask-y-to': scaleMaskImagePosition()\n      }],\n      'mask-image-y-from-color': [{\n        'mask-y-from': scaleColor()\n      }],\n      'mask-image-y-to-color': [{\n        'mask-y-to': scaleColor()\n      }],\n      'mask-image-radial': [{\n        'mask-radial': [isArbitraryVariable, isArbitraryValue]\n      }],\n      'mask-image-radial-from-pos': [{\n        'mask-radial-from': scaleMaskImagePosition()\n      }],\n      'mask-image-radial-to-pos': [{\n        'mask-radial-to': scaleMaskImagePosition()\n      }],\n      'mask-image-radial-from-color': [{\n        'mask-radial-from': scaleColor()\n      }],\n      'mask-image-radial-to-color': [{\n        'mask-radial-to': scaleColor()\n      }],\n      'mask-image-radial-shape': [{\n        'mask-radial': ['circle', 'ellipse']\n      }],\n      'mask-image-radial-size': [{\n        'mask-radial': [{\n          closest: ['side', 'corner'],\n          farthest: ['side', 'corner']\n        }]\n      }],\n      'mask-image-radial-pos': [{\n        'mask-radial-at': scalePosition()\n      }],\n      'mask-image-conic-pos': [{\n        'mask-conic': [isNumber]\n      }],\n      'mask-image-conic-from-pos': [{\n        'mask-conic-from': scaleMaskImagePosition()\n      }],\n      'mask-image-conic-to-pos': [{\n        'mask-conic-to': scaleMaskImagePosition()\n      }],\n      'mask-image-conic-from-color': [{\n        'mask-conic-from': scaleColor()\n      }],\n      'mask-image-conic-to-color': [{\n        'mask-conic-to': scaleColor()\n      }],\n      /**\n       * Mask Mode\n       * @see https://tailwindcss.com/docs/mask-mode\n       */\n      'mask-mode': [{\n        mask: ['alpha', 'luminance', 'match']\n      }],\n      /**\n       * Mask Origin\n       * @see https://tailwindcss.com/docs/mask-origin\n       */\n      'mask-origin': [{\n        'mask-origin': ['border', 'padding', 'content', 'fill', 'stroke', 'view']\n      }],\n      /**\n       * Mask Position\n       * @see https://tailwindcss.com/docs/mask-position\n       */\n      'mask-position': [{\n        mask: scaleBgPosition()\n      }],\n      /**\n       * Mask Repeat\n       * @see https://tailwindcss.com/docs/mask-repeat\n       */\n      'mask-repeat': [{\n        mask: scaleBgRepeat()\n      }],\n      /**\n       * Mask Size\n       * @see https://tailwindcss.com/docs/mask-size\n       */\n      'mask-size': [{\n        mask: scaleBgSize()\n      }],\n      /**\n       * Mask Type\n       * @see https://tailwindcss.com/docs/mask-type\n       */\n      'mask-type': [{\n        'mask-type': ['alpha', 'luminance']\n      }],\n      /**\n       * Mask Image\n       * @see https://tailwindcss.com/docs/mask-image\n       */\n      'mask-image': [{\n        mask: ['none', isArbitraryVariable, isArbitraryValue]\n      }],\n      // ---------------\n      // --- Filters ---\n      // ---------------\n      /**\n       * Filter\n       * @see https://tailwindcss.com/docs/filter\n       */\n      filter: [{\n        filter: [\n        // Deprecated since Tailwind CSS v3.0.0\n        '', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Blur\n       * @see https://tailwindcss.com/docs/blur\n       */\n      blur: [{\n        blur: scaleBlur()\n      }],\n      /**\n       * Brightness\n       * @see https://tailwindcss.com/docs/brightness\n       */\n      brightness: [{\n        brightness: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Contrast\n       * @see https://tailwindcss.com/docs/contrast\n       */\n      contrast: [{\n        contrast: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Drop Shadow\n       * @see https://tailwindcss.com/docs/drop-shadow\n       */\n      'drop-shadow': [{\n        'drop-shadow': [\n        // Deprecated since Tailwind CSS v4.0.0\n        '', 'none', themeDropShadow, isArbitraryVariableShadow, isArbitraryShadow]\n      }],\n      /**\n       * Drop Shadow Color\n       * @see https://tailwindcss.com/docs/filter-drop-shadow#setting-the-shadow-color\n       */\n      'drop-shadow-color': [{\n        'drop-shadow': scaleColor()\n      }],\n      /**\n       * Grayscale\n       * @see https://tailwindcss.com/docs/grayscale\n       */\n      grayscale: [{\n        grayscale: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Hue Rotate\n       * @see https://tailwindcss.com/docs/hue-rotate\n       */\n      'hue-rotate': [{\n        'hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Invert\n       * @see https://tailwindcss.com/docs/invert\n       */\n      invert: [{\n        invert: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Saturate\n       * @see https://tailwindcss.com/docs/saturate\n       */\n      saturate: [{\n        saturate: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Sepia\n       * @see https://tailwindcss.com/docs/sepia\n       */\n      sepia: [{\n        sepia: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Filter\n       * @see https://tailwindcss.com/docs/backdrop-filter\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': [\n        // Deprecated since Tailwind CSS v3.0.0\n        '', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Blur\n       * @see https://tailwindcss.com/docs/backdrop-blur\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': scaleBlur()\n      }],\n      /**\n       * Backdrop Brightness\n       * @see https://tailwindcss.com/docs/backdrop-brightness\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Contrast\n       * @see https://tailwindcss.com/docs/backdrop-contrast\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Grayscale\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Hue Rotate\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Invert\n       * @see https://tailwindcss.com/docs/backdrop-invert\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Opacity\n       * @see https://tailwindcss.com/docs/backdrop-opacity\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Saturate\n       * @see https://tailwindcss.com/docs/backdrop-saturate\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Sepia\n       * @see https://tailwindcss.com/docs/backdrop-sepia\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      // --------------\n      // --- Tables ---\n      // --------------\n      /**\n       * Border Collapse\n       * @see https://tailwindcss.com/docs/border-collapse\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n      /**\n       * Border Spacing\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing': [{\n        'border-spacing': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Border Spacing X\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Border Spacing Y\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Table Layout\n       * @see https://tailwindcss.com/docs/table-layout\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      /**\n       * Caption Side\n       * @see https://tailwindcss.com/docs/caption-side\n       */\n      caption: [{\n        caption: ['top', 'bottom']\n      }],\n      // ---------------------------------\n      // --- Transitions and Animation ---\n      // ---------------------------------\n      /**\n       * Transition Property\n       * @see https://tailwindcss.com/docs/transition-property\n       */\n      transition: [{\n        transition: ['', 'all', 'colors', 'opacity', 'shadow', 'transform', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Transition Behavior\n       * @see https://tailwindcss.com/docs/transition-behavior\n       */\n      'transition-behavior': [{\n        transition: ['normal', 'discrete']\n      }],\n      /**\n       * Transition Duration\n       * @see https://tailwindcss.com/docs/transition-duration\n       */\n      duration: [{\n        duration: [isNumber, 'initial', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Transition Timing Function\n       * @see https://tailwindcss.com/docs/transition-timing-function\n       */\n      ease: [{\n        ease: ['linear', 'initial', themeEase, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Transition Delay\n       * @see https://tailwindcss.com/docs/transition-delay\n       */\n      delay: [{\n        delay: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Animation\n       * @see https://tailwindcss.com/docs/animation\n       */\n      animate: [{\n        animate: ['none', themeAnimate, isArbitraryVariable, isArbitraryValue]\n      }],\n      // ------------------\n      // --- Transforms ---\n      // ------------------\n      /**\n       * Backface Visibility\n       * @see https://tailwindcss.com/docs/backface-visibility\n       */\n      backface: [{\n        backface: ['hidden', 'visible']\n      }],\n      /**\n       * Perspective\n       * @see https://tailwindcss.com/docs/perspective\n       */\n      perspective: [{\n        perspective: [themePerspective, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Perspective Origin\n       * @see https://tailwindcss.com/docs/perspective-origin\n       */\n      'perspective-origin': [{\n        'perspective-origin': scalePositionWithArbitrary()\n      }],\n      /**\n       * Rotate\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      rotate: [{\n        rotate: scaleRotate()\n      }],\n      /**\n       * Rotate X\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      'rotate-x': [{\n        'rotate-x': scaleRotate()\n      }],\n      /**\n       * Rotate Y\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      'rotate-y': [{\n        'rotate-y': scaleRotate()\n      }],\n      /**\n       * Rotate Z\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      'rotate-z': [{\n        'rotate-z': scaleRotate()\n      }],\n      /**\n       * Scale\n       * @see https://tailwindcss.com/docs/scale\n       */\n      scale: [{\n        scale: scaleScale()\n      }],\n      /**\n       * Scale X\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-x': [{\n        'scale-x': scaleScale()\n      }],\n      /**\n       * Scale Y\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-y': [{\n        'scale-y': scaleScale()\n      }],\n      /**\n       * Scale Z\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-z': [{\n        'scale-z': scaleScale()\n      }],\n      /**\n       * Scale 3D\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-3d': ['scale-3d'],\n      /**\n       * Skew\n       * @see https://tailwindcss.com/docs/skew\n       */\n      skew: [{\n        skew: scaleSkew()\n      }],\n      /**\n       * Skew X\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-x': [{\n        'skew-x': scaleSkew()\n      }],\n      /**\n       * Skew Y\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-y': [{\n        'skew-y': scaleSkew()\n      }],\n      /**\n       * Transform\n       * @see https://tailwindcss.com/docs/transform\n       */\n      transform: [{\n        transform: [isArbitraryVariable, isArbitraryValue, '', 'none', 'gpu', 'cpu']\n      }],\n      /**\n       * Transform Origin\n       * @see https://tailwindcss.com/docs/transform-origin\n       */\n      'transform-origin': [{\n        origin: scalePositionWithArbitrary()\n      }],\n      /**\n       * Transform Style\n       * @see https://tailwindcss.com/docs/transform-style\n       */\n      'transform-style': [{\n        transform: ['3d', 'flat']\n      }],\n      /**\n       * Translate\n       * @see https://tailwindcss.com/docs/translate\n       */\n      translate: [{\n        translate: scaleTranslate()\n      }],\n      /**\n       * Translate X\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-x': [{\n        'translate-x': scaleTranslate()\n      }],\n      /**\n       * Translate Y\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-y': [{\n        'translate-y': scaleTranslate()\n      }],\n      /**\n       * Translate Z\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-z': [{\n        'translate-z': scaleTranslate()\n      }],\n      /**\n       * Translate None\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-none': ['translate-none'],\n      // ---------------------\n      // --- Interactivity ---\n      // ---------------------\n      /**\n       * Accent Color\n       * @see https://tailwindcss.com/docs/accent-color\n       */\n      accent: [{\n        accent: scaleColor()\n      }],\n      /**\n       * Appearance\n       * @see https://tailwindcss.com/docs/appearance\n       */\n      appearance: [{\n        appearance: ['none', 'auto']\n      }],\n      /**\n       * Caret Color\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n       */\n      'caret-color': [{\n        caret: scaleColor()\n      }],\n      /**\n       * Color Scheme\n       * @see https://tailwindcss.com/docs/color-scheme\n       */\n      'color-scheme': [{\n        scheme: ['normal', 'dark', 'light', 'light-dark', 'only-dark', 'only-light']\n      }],\n      /**\n       * Cursor\n       * @see https://tailwindcss.com/docs/cursor\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Field Sizing\n       * @see https://tailwindcss.com/docs/field-sizing\n       */\n      'field-sizing': [{\n        'field-sizing': ['fixed', 'content']\n      }],\n      /**\n       * Pointer Events\n       * @see https://tailwindcss.com/docs/pointer-events\n       */\n      'pointer-events': [{\n        'pointer-events': ['auto', 'none']\n      }],\n      /**\n       * Resize\n       * @see https://tailwindcss.com/docs/resize\n       */\n      resize: [{\n        resize: ['none', '', 'y', 'x']\n      }],\n      /**\n       * Scroll Behavior\n       * @see https://tailwindcss.com/docs/scroll-behavior\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n      /**\n       * Scroll Margin\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-m': [{\n        'scroll-m': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin X\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mx': [{\n        'scroll-mx': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Y\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-my': [{\n        'scroll-my': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Start\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ms': [{\n        'scroll-ms': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin End\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-me': [{\n        'scroll-me': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Top\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mt': [{\n        'scroll-mt': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Right\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mr': [{\n        'scroll-mr': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Bottom\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mb': [{\n        'scroll-mb': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Left\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ml': [{\n        'scroll-ml': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-p': [{\n        'scroll-p': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding X\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-px': [{\n        'scroll-px': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Y\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-py': [{\n        'scroll-py': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Start\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-ps': [{\n        'scroll-ps': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding End\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pe': [{\n        'scroll-pe': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Top\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pt': [{\n        'scroll-pt': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Right\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pr': [{\n        'scroll-pr': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Bottom\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pb': [{\n        'scroll-pb': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Left\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pl': [{\n        'scroll-pl': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Snap Align\n       * @see https://tailwindcss.com/docs/scroll-snap-align\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n      /**\n       * Scroll Snap Stop\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n      /**\n       * Scroll Snap Type\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n      /**\n       * Scroll Snap Type Strictness\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n      /**\n       * Touch Action\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      touch: [{\n        touch: ['auto', 'none', 'manipulation']\n      }],\n      /**\n       * Touch Action X\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-x': [{\n        'touch-pan': ['x', 'left', 'right']\n      }],\n      /**\n       * Touch Action Y\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-y': [{\n        'touch-pan': ['y', 'up', 'down']\n      }],\n      /**\n       * Touch Action Pinch Zoom\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-pz': ['touch-pinch-zoom'],\n      /**\n       * User Select\n       * @see https://tailwindcss.com/docs/user-select\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n      /**\n       * Will Change\n       * @see https://tailwindcss.com/docs/will-change\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryVariable, isArbitraryValue]\n      }],\n      // -----------\n      // --- SVG ---\n      // -----------\n      /**\n       * Fill\n       * @see https://tailwindcss.com/docs/fill\n       */\n      fill: [{\n        fill: ['none', ...scaleColor()]\n      }],\n      /**\n       * Stroke Width\n       * @see https://tailwindcss.com/docs/stroke-width\n       */\n      'stroke-w': [{\n        stroke: [isNumber, isArbitraryVariableLength, isArbitraryLength, isArbitraryNumber]\n      }],\n      /**\n       * Stroke\n       * @see https://tailwindcss.com/docs/stroke\n       */\n      stroke: [{\n        stroke: ['none', ...scaleColor()]\n      }],\n      // ---------------------\n      // --- Accessibility ---\n      // ---------------------\n      /**\n       * Forced Color Adjust\n       * @see https://tailwindcss.com/docs/forced-color-adjust\n       */\n      'forced-color-adjust': [{\n        'forced-color-adjust': ['auto', 'none']\n      }]\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      size: ['w', 'h'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      'line-clamp': ['display', 'overflow'],\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-s': ['rounded-ss', 'rounded-es'],\n      'rounded-e': ['rounded-se', 'rounded-ee'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-x', 'border-w-y', 'border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-x', 'border-color-y', 'border-color-s', 'border-color-e', 'border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      translate: ['translate-x', 'translate-y', 'translate-none'],\n      'translate-none': ['translate', 'translate-x', 'translate-y', 'translate-z'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb'],\n      touch: ['touch-x', 'touch-y', 'touch-pz'],\n      'touch-x': ['touch'],\n      'touch-y': ['touch'],\n      'touch-pz': ['touch']\n    },\n    conflictingClassGroupModifiers: {\n      'font-size': ['leading']\n    },\n    orderSensitiveModifiers: ['*', '**', 'after', 'backdrop', 'before', 'details-content', 'file', 'first-letter', 'first-line', 'marker', 'placeholder', 'selection']\n  };\n};\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nconst mergeConfigs = (baseConfig, {\n  cacheSize,\n  prefix,\n  experimentalParseClassName,\n  extend = {},\n  override = {}\n}) => {\n  overrideProperty(baseConfig, 'cacheSize', cacheSize);\n  overrideProperty(baseConfig, 'prefix', prefix);\n  overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);\n  overrideConfigProperties(baseConfig.theme, override.theme);\n  overrideConfigProperties(baseConfig.classGroups, override.classGroups);\n  overrideConfigProperties(baseConfig.conflictingClassGroups, override.conflictingClassGroups);\n  overrideConfigProperties(baseConfig.conflictingClassGroupModifiers, override.conflictingClassGroupModifiers);\n  overrideProperty(baseConfig, 'orderSensitiveModifiers', override.orderSensitiveModifiers);\n  mergeConfigProperties(baseConfig.theme, extend.theme);\n  mergeConfigProperties(baseConfig.classGroups, extend.classGroups);\n  mergeConfigProperties(baseConfig.conflictingClassGroups, extend.conflictingClassGroups);\n  mergeConfigProperties(baseConfig.conflictingClassGroupModifiers, extend.conflictingClassGroupModifiers);\n  mergeArrayProperties(baseConfig, extend, 'orderSensitiveModifiers');\n  return baseConfig;\n};\nconst overrideProperty = (baseObject, overrideKey, overrideValue) => {\n  if (overrideValue !== undefined) {\n    baseObject[overrideKey] = overrideValue;\n  }\n};\nconst overrideConfigProperties = (baseObject, overrideObject) => {\n  if (overrideObject) {\n    for (const key in overrideObject) {\n      overrideProperty(baseObject, key, overrideObject[key]);\n    }\n  }\n};\nconst mergeConfigProperties = (baseObject, mergeObject) => {\n  if (mergeObject) {\n    for (const key in mergeObject) {\n      mergeArrayProperties(baseObject, mergeObject, key);\n    }\n  }\n};\nconst mergeArrayProperties = (baseObject, mergeObject, key) => {\n  const mergeValue = mergeObject[key];\n  if (mergeValue !== undefined) {\n    baseObject[key] = baseObject[key] ? baseObject[key].concat(mergeValue) : mergeValue;\n  }\n};\nconst extendTailwindMerge = (configExtension, ...createConfig) => typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\nconst twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\nexport { createTailwindMerge, extendTailwindMerge, fromTheme, getDefaultConfig, mergeConfigs, twJoin, twMerge, validators };\n//# sourceMappingURL=bundle-mjs.mjs.map\n","import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}","import React from 'react';\nimport { cn } from '../../utils/cn';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'default' | 'destructive' | 'outline' | 'secondary' | 'ghost' | 'link';\n  size?: 'default' | 'sm' | 'lg' | 'icon';\n  loading?: boolean;\n  asChild?: boolean;\n}\n\nexport function Button({\n  className,\n  variant = 'default',\n  size = 'default',\n  loading = false,\n  asChild = false,\n  children,\n  disabled,\n  ...props\n}: ButtonProps) {\n  const baseStyles = 'inline-flex items-center justify-center rounded-xl font-medium transition-all duration-200 ' +\n                    'focus:outline-none focus:ring-4 focus:ring-primary-500/20 disabled:pointer-events-none disabled:opacity-50';\n  \n  const variants = {\n    default: 'bg-gradient-to-r from-primary-600 to-primary-700 text-white shadow-lg ' +\n             'hover:shadow-xl hover:scale-[1.02] active:scale-[0.98]',\n    destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n    outline: 'bg-white/10 backdrop-blur-md border border-white/20 text-slate-700 hover:bg-white/20',\n    secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n    ghost: 'text-slate-700 hover:bg-slate-100',\n    link: 'text-primary underline-offset-4 hover:underline',\n  };\n\n  const sizes = {\n    default: 'h-10 px-4 py-2',\n    sm: 'h-9 rounded-md px-3',\n    lg: 'h-11 rounded-md px-8',\n    icon: 'h-10 w-10',\n  };\n\n  const classes = cn(baseStyles, variants[variant], sizes[size], className);\n\n  if (asChild && React.isValidElement(children)) {\n    const childProps = children.props as any;\n    return React.cloneElement(children, {\n      ...childProps,\n      className: cn(childProps.className, classes),\n      ...(disabled && { 'aria-disabled': true }),\n      ...props,\n    });\n  }\n\n  return (\n    <button\n      className={classes}\n      disabled={disabled || loading}\n      {...props}\n    >\n      {loading && (\n        <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-current border-t-transparent me-2\" />\n      )}\n      {children}\n    </button>\n  );\n}","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User, AuthState, LoginCredentials } from '../types/user';\n\ninterface AuthContextType extends AuthState {\n  login: (credentials: LoginCredentials) => Promise<boolean>;\n  logout: () => void;\n  register: (data: any) => Promise<boolean>;\n  refreshToken: () => Promise<boolean>;\n  updateUser: (updates: Partial<User>) => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [authState, setAuthState] = useState<AuthState>({\n    user: null,\n    isAuthenticated: false,\n    loading: true,\n    error: null\n  });\n\n  // Check for existing authentication on mount\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const userData = localStorage.getItem('user');\n      \n      if (token && userData) {\n        const user = JSON.parse(userData);\n        setAuthState({\n          user,\n          isAuthenticated: true,\n          loading: false,\n          error: null\n        });\n      } else {\n        setAuthState({\n          user: null,\n          isAuthenticated: false,\n          loading: false,\n          error: null\n        });\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      setAuthState({\n        user: null,\n        isAuthenticated: false,\n        loading: false,\n        error: 'خطا در بررسی وضعیت احراز هویت'\n      });\n    }\n  };\n\n  const login = async (credentials: LoginCredentials): Promise<boolean> => {\n    try {\n      setAuthState(prev => ({ ...prev, loading: true, error: null }));\n      \n      // Mock authentication - replace with real API call\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credentials),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        const { token, user } = data;\n        \n        // Store authentication data\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        \n        setAuthState({\n          user,\n          isAuthenticated: true,\n          loading: false,\n          error: null\n        });\n        \n        return true;\n      } else {\n        const errorData = await response.json();\n        setAuthState(prev => ({\n          ...prev,\n          loading: false,\n          error: errorData.message || 'خطا در ورود'\n        }));\n        return false;\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      setAuthState(prev => ({\n        ...prev,\n        loading: false,\n        error: 'خطا در اتصال به سرور'\n      }));\n      return false;\n    }\n  };\n\n  const register = async (data: any): Promise<boolean> => {\n    try {\n      setAuthState(prev => ({ ...prev, loading: true, error: null }));\n      \n      const response = await fetch('/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        setAuthState(prev => ({\n          ...prev,\n          loading: false,\n          error: null\n        }));\n        return true;\n      } else {\n        const errorData = await response.json();\n        setAuthState(prev => ({\n          ...prev,\n          loading: false,\n          error: errorData.message || 'خطا در ثبت‌نام'\n        }));\n        return false;\n      }\n    } catch (error) {\n      console.error('Registration failed:', error);\n      setAuthState(prev => ({\n        ...prev,\n        loading: false,\n        error: 'خطا در اتصال به سرور'\n      }));\n      return false;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setAuthState({\n      user: null,\n      isAuthenticated: false,\n      loading: false,\n      error: null\n    });\n  };\n\n  const refreshToken = async (): Promise<boolean> => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return false;\n\n      const response = await fetch('/api/auth/refresh', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('token', data.token);\n        return true;\n      } else {\n        logout();\n        return false;\n      }\n    } catch (error) {\n      console.error('Token refresh failed:', error);\n      logout();\n      return false;\n    }\n  };\n\n  const updateUser = (updates: Partial<User>) => {\n    if (authState.user) {\n      const updatedUser = { ...authState.user, ...updates };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      setAuthState(prev => ({\n        ...prev,\n        user: updatedUser\n      }));\n    }\n  };\n\n  const value: AuthContextType = {\n    ...authState,\n    login,\n    logout,\n    register,\n    refreshToken,\n    updateUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth(): AuthContextType {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}","import * as React from 'react';\r\nimport { cn } from '../../utils/cn';\r\n\r\nexport interface InputProps\r\n    extends React.InputHTMLAttributes<HTMLInputElement> {\r\n    error?: boolean;\r\n}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n    ({ className, type, error, ...props }, ref) => {\r\n        return (\r\n            <input\r\n                type={type}\r\n                className={cn(\r\n                    'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\r\n                    error && 'border-destructive focus-visible:ring-destructive',\r\n                    className\r\n                )}\r\n                ref={ref}\r\n                {...props}\r\n            />\r\n        );\r\n    }\r\n);\r\nInput.displayName = 'Input';\r\n\r\nexport { Input };\r\n","// Real API base configuration\nconst RAW_BASE = import.meta.env?.VITE_API_BASE ?? '/api';\n\n// RequestInit type for fetch\ntype RequestInit = globalThis.RequestInit;\n\nfunction normalizeApiBase(base: string): string {\n  const trimmed = (base || '').trim();\n  const withoutTrailingSlash = trimmed.endsWith('/') ? trimmed.slice(0, -1) : trimmed;\n  return withoutTrailingSlash.startsWith('/') ? withoutTrailingSlash : `/${withoutTrailingSlash}`;\n}\n\nexport const API_BASE = normalizeApiBase(RAW_BASE);\n\n// Safe URL joining\nexport function joinApiPath(basePath: string, endpoint: string): string {\n  const cleanEndpoint = endpoint.startsWith('/') ? endpoint : `/${endpoint}`;\n  return `${basePath}${cleanEndpoint}`;\n}\n\n// Request wrapper with proper error handling\nexport async function apiRequest(endpoint: string, options?: RequestInit): Promise<Response> {\n  const url = endpoint.startsWith('/api') || endpoint.startsWith('http') \n    ? endpoint \n    : joinApiPath(API_BASE, endpoint);\n  \n  const response = await fetch(url, {\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      ...options?.headers,\n    },\n    ...options,\n  });\n\n  if (!response.ok) {\n    throw new Error(`API Error: ${response.status} ${response.statusText} - ${url}`);\n  }\n\n  return response;\n}\n\n// Typed API responses\nexport interface ApiResponse<T> {\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\n// Helper for handling API responses\nexport async function handleApiResponse<T>(response: Response): Promise<T> {\n  const data = await response.json();\n  if (data.error) {\n    throw new Error(data.error);\n  }\n  return data.data || data;\n}\n\n// API endpoints configuration\nexport const API_ENDPOINTS = {\n  // Models\n  MODELS: '/models',\n  MODEL_BY_ID: (id: string) => `/models/${id}`,\n  MODEL_TRAIN: (id: string) => `/models/${id}/train`,\n  MODEL_PAUSE: (id: string) => `/models/${id}/pause`,\n  MODEL_RESUME: (id: string) => `/models/${id}/resume`,\n  MODEL_DELETE: (id: string) => `/models/${id}`,\n  MODEL_EXPORT: (id: string) => `/models/${id}/export`,\n  MODEL_CHECKPOINTS: (id: string) => `/models/${id}/checkpoints`,\n  \n  // Analytics\n  ANALYTICS: '/analytics',\n  ANALYTICS_ADVANCED: '/analytics/advanced',\n  ANALYTICS_PERFORMANCE: '/analytics/performance',\n  ANALYTICS_USAGE: '/analytics/usage',\n  \n  // Datasets\n  DATASETS: '/datasets',\n  DATASET_BY_ID: (id: string) => `/datasets/${id}`,\n  DATASET_DOWNLOAD: (id: string) => `/datasets/${id}/download`,\n  \n  // Monitoring\n  MONITORING: '/monitoring',\n  MONITORING_LOGS: '/monitoring/logs',\n  MONITORING_HEALTH: '/monitoring/health',\n  MONITORING_PERFORMANCE: '/monitoring/performance',\n  \n  // Logs\n  LOGS: '/logs',\n  \n  // Settings\n  SETTINGS: '/settings',\n  \n  // Team\n  TEAM: '/team',\n  \n  // Health\n  HEALTH: '/health',\n  \n  // System metrics\n  SYSTEM_METRICS: '/system/metrics',\n} as const;\n","import { API_BASE, joinApiPath, apiRequest } from '../lib/api-config';\nimport { User, LoginCredentials } from '../types/user';\n\nexport interface AuthResponse {\n  success: boolean;\n  token?: string;\n  user?: User;\n  message?: string;\n  error?: string;\n}\n\nexport interface RegisterData extends LoginCredentials {\n  name: string;\n  role?: string;\n}\n\nexport const authService = {\n  /**\n   * Login user\n   */\n  async login(credentials: LoginCredentials): Promise<AuthResponse> {\n    try {\n      const response = await apiRequest(\n        joinApiPath(API_BASE, '/auth/login'),\n        {\n          method: 'POST',\n          body: JSON.stringify(credentials),\n        }\n      );\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Login failed:', error);\n      return {\n        success: false,\n        error: 'خطا در ورود به سیستم'\n      };\n    }\n  },\n\n  /**\n   * Register new user\n   */\n  async register(data: RegisterData): Promise<AuthResponse> {\n    try {\n      const response = await apiRequest(\n        joinApiPath(API_BASE, '/auth/register'),\n        {\n          method: 'POST',\n          body: JSON.stringify(data),\n        }\n      );\n      const result = await response.json();\n      return result;\n    } catch (error) {\n      console.error('Registration failed:', error);\n      return {\n        success: false,\n        error: 'خطا در ثبت‌نام'\n      };\n    }\n  },\n\n  /**\n   * Logout user\n   */\n  async logout(): Promise<{ success: boolean; message: string }> {\n    try {\n      const response = await apiRequest(\n        joinApiPath(API_BASE, '/auth/logout'),\n        {\n          method: 'POST',\n        }\n      );\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Logout failed:', error);\n      return {\n        success: true,\n        message: 'خروج موفقیت‌آمیز'\n      };\n    }\n  },\n\n  /**\n   * Refresh authentication token\n   */\n  async refreshToken(): Promise<AuthResponse> {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return {\n          success: false,\n          error: 'توکن یافت نشد'\n        };\n      }\n\n      const response = await apiRequest(\n        joinApiPath(API_BASE, '/auth/refresh'),\n        {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n          },\n        }\n      );\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Token refresh failed:', error);\n      return {\n        success: false,\n        error: 'خطا در تازه‌سازی توکن'\n      };\n    }\n  },\n\n  /**\n   * Get current user profile\n   */\n  async getCurrentUser(): Promise<User | null> {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return null;\n\n      const response = await apiRequest(\n        joinApiPath(API_BASE, '/auth/me'),\n        {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n          },\n        }\n      );\n      const data = await response.json();\n      return data.user || data;\n    } catch (error) {\n      console.error('Get current user failed:', error);\n      return null;\n    }\n  },\n\n  /**\n   * Update user profile\n   */\n  async updateProfile(updates: Partial<User>): Promise<{ success: boolean; user?: User; message?: string }> {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return {\n          success: false,\n          message: 'توکن یافت نشد'\n        };\n      }\n\n      const response = await apiRequest(\n        joinApiPath(API_BASE, '/auth/profile'),\n        {\n          method: 'PUT',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n          },\n          body: JSON.stringify(updates),\n        }\n      );\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Update profile failed:', error);\n      return {\n        success: false,\n        message: 'خطا در به‌روزرسانی پروفایل'\n      };\n    }\n  },\n\n  /**\n   * Change password\n   */\n  async changePassword(currentPassword: string, newPassword: string): Promise<{ success: boolean; message: string }> {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return {\n          success: false,\n          message: 'توکن یافت نشد'\n        };\n      }\n\n      const response = await apiRequest(\n        joinApiPath(API_BASE, '/auth/change-password'),\n        {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n          },\n          body: JSON.stringify({\n            currentPassword,\n            newPassword\n          }),\n        }\n      );\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Change password failed:', error);\n      return {\n        success: false,\n        message: 'خطا در تغییر رمز عبور'\n      };\n    }\n  },\n\n  /**\n   * Request password reset\n   */\n  async requestPasswordReset(email: string): Promise<{ success: boolean; message: string }> {\n    try {\n      const response = await apiRequest(\n        joinApiPath(API_BASE, '/auth/forgot-password'),\n        {\n          method: 'POST',\n          body: JSON.stringify({ email }),\n        }\n      );\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Password reset request failed:', error);\n      return {\n        success: false,\n        message: 'خطا در درخواست بازنشانی رمز عبور'\n      };\n    }\n  },\n\n  /**\n   * Reset password with token\n   */\n  async resetPassword(token: string, newPassword: string): Promise<{ success: boolean; message: string }> {\n    try {\n      const response = await apiRequest(\n        joinApiPath(API_BASE, '/auth/reset-password'),\n        {\n          method: 'POST',\n          body: JSON.stringify({\n            token,\n            newPassword\n          }),\n        }\n      );\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Password reset failed:', error);\n      return {\n        success: false,\n        message: 'خطا در بازنشانی رمز عبور'\n      };\n    }\n  },\n\n  /**\n   * Verify email address\n   */\n  async verifyEmail(token: string): Promise<{ success: boolean; message: string }> {\n    try {\n      const response = await apiRequest(\n        joinApiPath(API_BASE, '/auth/verify-email'),\n        {\n          method: 'POST',\n          body: JSON.stringify({ token }),\n        }\n      );\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Email verification failed:', error);\n      return {\n        success: false,\n        message: 'خطا در تأیید ایمیل'\n      };\n    }\n  }\n};","import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { X, Eye, EyeOff, Lock, Mail, User, AlertCircle, CheckCircle } from 'lucide-react';\nimport { Button } from '../ui/Button';\nimport { Input } from '../ui/Input';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { authService } from '../../services/auth';\n\ninterface LoginModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSwitchToRegister?: () => void;\n}\n\nexport function LoginModal({ isOpen, onClose, onSwitchToRegister }: LoginModalProps) {\n  const { login } = useAuth();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      const result = await authService.login(formData);\n      \n      if (result.success && result.token && result.user) {\n        // Store authentication data\n        localStorage.setItem('token', result.token);\n        localStorage.setItem('user', JSON.stringify(result.user));\n        \n        setSuccess('ورود موفقیت‌آمیز');\n        setTimeout(() => {\n          onClose();\n          setFormData({ email: '', password: '' });\n        }, 1000);\n      } else {\n        setError(result.error || 'خطا در ورود');\n      }\n    } catch (err) {\n      setError('خطا در اتصال به سرور');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleClose = () => {\n    setFormData({ email: '', password: '' });\n    setError(null);\n    setSuccess(null);\n    onClose();\n  };\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4\">\n          {/* Backdrop */}\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"absolute inset-0 bg-black/50 backdrop-blur-sm\"\n            onClick={handleClose}\n          />\n          \n          {/* Modal */}\n          <motion.div\n            initial={{ opacity: 0, scale: 0.95, y: 20 }}\n            animate={{ opacity: 1, scale: 1, y: 0 }}\n            exit={{ opacity: 0, scale: 0.95, y: 20 }}\n            className=\"relative w-full max-w-md bg-white dark:bg-slate-800 rounded-2xl shadow-2xl\"\n            dir=\"rtl\"\n          >\n            {/* Header */}\n            <div className=\"flex items-center justify-between p-6 border-b border-slate-200 dark:border-slate-700\">\n              <h2 className=\"text-2xl font-bold text-slate-900 dark:text-slate-100\">\n                ورود به سیستم\n              </h2>\n              <button\n                onClick={handleClose}\n                className=\"p-2 hover:bg-slate-100 dark:hover:bg-slate-700 rounded-lg transition-colors\"\n              >\n                <X className=\"w-5 h-5 text-slate-500\" />\n              </button>\n            </div>\n\n            {/* Form */}\n            <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\n              {/* Email Field */}\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">\n                  ایمیل\n                </label>\n                <div className=\"relative\">\n                  <Mail className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-slate-400\" />\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    placeholder=\"ایمیل خود را وارد کنید\"\n                    className=\"pr-10\"\n                    required\n                    disabled={loading}\n                  />\n                </div>\n              </div>\n\n              {/* Password Field */}\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">\n                  رمز عبور\n                </label>\n                <div className=\"relative\">\n                  <Lock className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-slate-400\" />\n                  <Input\n                    type={showPassword ? 'text' : 'password'}\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleInputChange}\n                    placeholder=\"رمز عبور خود را وارد کنید\"\n                    className=\"pr-10 pl-10\"\n                    required\n                    disabled={loading}\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 hover:text-slate-600\"\n                    disabled={loading}\n                  >\n                    {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                  </button>\n                </div>\n              </div>\n\n              {/* Error Message */}\n              {error && (\n                <motion.div\n                  initial={{ opacity: 0, y: -10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  className=\"flex items-center gap-2 p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg\"\n                >\n                  <AlertCircle className=\"w-5 h-5 text-red-500\" />\n                  <span className=\"text-sm text-red-700 dark:text-red-300\">{error}</span>\n                </motion.div>\n              )}\n\n              {/* Success Message */}\n              {success && (\n                <motion.div\n                  initial={{ opacity: 0, y: -10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  className=\"flex items-center gap-2 p-3 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg\"\n                >\n                  <CheckCircle className=\"w-5 h-5 text-green-500\" />\n                  <span className=\"text-sm text-green-700 dark:text-green-300\">{success}</span>\n                </motion.div>\n              )}\n\n              {/* Submit Button */}\n              <Button\n                type=\"submit\"\n                className=\"w-full\"\n                disabled={loading}\n              >\n                {loading ? 'در حال ورود...' : 'ورود'}\n              </Button>\n\n              {/* Register Link */}\n              {onSwitchToRegister && (\n                <div className=\"text-center\">\n                  <span className=\"text-sm text-slate-600 dark:text-slate-400\">\n                    حساب کاربری ندارید؟{' '}\n                  </span>\n                  <button\n                    type=\"button\"\n                    onClick={onSwitchToRegister}\n                    className=\"text-sm font-medium text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300\"\n                    disabled={loading}\n                  >\n                    ثبت‌نام کنید\n                  </button>\n                </div>\n              )}\n\n              {/* Forgot Password */}\n              <div className=\"text-center\">\n                <button\n                  type=\"button\"\n                  className=\"text-sm text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300\"\n                  disabled={loading}\n                >\n                  فراموشی رمز عبور؟\n                </button>\n              </div>\n            </form>\n          </motion.div>\n        </div>\n      )}\n    </AnimatePresence>\n  );\n}","import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { X, Eye, EyeOff, Lock, Mail, User, AlertCircle, CheckCircle } from 'lucide-react';\nimport { Button } from '../ui/Button';\nimport { Input } from '../ui/Input';\nimport { authService } from '../../services/auth';\n\ninterface RegisterModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSwitchToLogin?: () => void;\n}\n\nexport function RegisterModal({ isOpen, onClose, onSwitchToLogin }: RegisterModalProps) {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    // Validation\n    if (formData.password !== formData.confirmPassword) {\n      setError('رمز عبور و تأیید رمز عبور مطابقت ندارند');\n      setLoading(false);\n      return;\n    }\n\n    if (formData.password.length < 6) {\n      setError('رمز عبور باید حداقل ۶ کاراکتر باشد');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const result = await authService.register({\n        name: formData.name,\n        email: formData.email,\n        password: formData.password\n      });\n      \n      if (result.success) {\n        setSuccess('ثبت‌نام موفقیت‌آمیز. لطفاً وارد شوید.');\n        setTimeout(() => {\n          onClose();\n          setFormData({ name: '', email: '', password: '', confirmPassword: '' });\n          if (onSwitchToLogin) {\n            onSwitchToLogin();\n          }\n        }, 2000);\n      } else {\n        setError(result.error || 'خطا در ثبت‌نام');\n      }\n    } catch (err) {\n      setError('خطا در اتصال به سرور');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleClose = () => {\n    setFormData({ name: '', email: '', password: '', confirmPassword: '' });\n    setError(null);\n    setSuccess(null);\n    onClose();\n  };\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4\">\n          {/* Backdrop */}\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"absolute inset-0 bg-black/50 backdrop-blur-sm\"\n            onClick={handleClose}\n          />\n          \n          {/* Modal */}\n          <motion.div\n            initial={{ opacity: 0, scale: 0.95, y: 20 }}\n            animate={{ opacity: 1, scale: 1, y: 0 }}\n            exit={{ opacity: 0, scale: 0.95, y: 20 }}\n            className=\"relative w-full max-w-md bg-white dark:bg-slate-800 rounded-2xl shadow-2xl\"\n            dir=\"rtl\"\n          >\n            {/* Header */}\n            <div className=\"flex items-center justify-between p-6 border-b border-slate-200 dark:border-slate-700\">\n              <h2 className=\"text-2xl font-bold text-slate-900 dark:text-slate-100\">\n                ثبت‌نام\n              </h2>\n              <button\n                onClick={handleClose}\n                className=\"p-2 hover:bg-slate-100 dark:hover:bg-slate-700 rounded-lg transition-colors\"\n              >\n                <X className=\"w-5 h-5 text-slate-500\" />\n              </button>\n            </div>\n\n            {/* Form */}\n            <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\n              {/* Name Field */}\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">\n                  نام و نام خانوادگی\n                </label>\n                <div className=\"relative\">\n                  <User className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-slate-400\" />\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleInputChange}\n                    placeholder=\"نام و نام خانوادگی خود را وارد کنید\"\n                    className=\"pr-10\"\n                    required\n                    disabled={loading}\n                  />\n                </div>\n              </div>\n\n              {/* Email Field */}\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">\n                  ایمیل\n                </label>\n                <div className=\"relative\">\n                  <Mail className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-slate-400\" />\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    placeholder=\"ایمیل خود را وارد کنید\"\n                    className=\"pr-10\"\n                    required\n                    disabled={loading}\n                  />\n                </div>\n              </div>\n\n              {/* Password Field */}\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">\n                  رمز عبور\n                </label>\n                <div className=\"relative\">\n                  <Lock className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-slate-400\" />\n                  <Input\n                    type={showPassword ? 'text' : 'password'}\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleInputChange}\n                    placeholder=\"رمز عبور خود را وارد کنید\"\n                    className=\"pr-10 pl-10\"\n                    required\n                    disabled={loading}\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 hover:text-slate-600\"\n                    disabled={loading}\n                  >\n                    {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                  </button>\n                </div>\n              </div>\n\n              {/* Confirm Password Field */}\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">\n                  تأیید رمز عبور\n                </label>\n                <div className=\"relative\">\n                  <Lock className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-slate-400\" />\n                  <Input\n                    type={showConfirmPassword ? 'text' : 'password'}\n                    name=\"confirmPassword\"\n                    value={formData.confirmPassword}\n                    onChange={handleInputChange}\n                    placeholder=\"رمز عبور را مجدداً وارد کنید\"\n                    className=\"pr-10 pl-10\"\n                    required\n                    disabled={loading}\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                    className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 hover:text-slate-600\"\n                    disabled={loading}\n                  >\n                    {showConfirmPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                  </button>\n                </div>\n              </div>\n\n              {/* Error Message */}\n              {error && (\n                <motion.div\n                  initial={{ opacity: 0, y: -10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  className=\"flex items-center gap-2 p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg\"\n                >\n                  <AlertCircle className=\"w-5 h-5 text-red-500\" />\n                  <span className=\"text-sm text-red-700 dark:text-red-300\">{error}</span>\n                </motion.div>\n              )}\n\n              {/* Success Message */}\n              {success && (\n                <motion.div\n                  initial={{ opacity: 0, y: -10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  className=\"flex items-center gap-2 p-3 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg\"\n                >\n                  <CheckCircle className=\"w-5 h-5 text-green-500\" />\n                  <span className=\"text-sm text-green-700 dark:text-green-300\">{success}</span>\n                </motion.div>\n              )}\n\n              {/* Submit Button */}\n              <Button\n                type=\"submit\"\n                className=\"w-full\"\n                disabled={loading}\n              >\n                {loading ? 'در حال ثبت‌نام...' : 'ثبت‌نام'}\n              </Button>\n\n              {/* Login Link */}\n              {onSwitchToLogin && (\n                <div className=\"text-center\">\n                  <span className=\"text-sm text-slate-600 dark:text-slate-400\">\n                    قبلاً ثبت‌نام کرده‌اید؟{' '}\n                  </span>\n                  <button\n                    type=\"button\"\n                    onClick={onSwitchToLogin}\n                    className=\"text-sm font-medium text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300\"\n                    disabled={loading}\n                  >\n                    وارد شوید\n                  </button>\n                </div>\n              )}\n            </form>\n          </motion.div>\n        </div>\n      )}\n    </AnimatePresence>\n  );\n}","import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { User, LogOut, Settings, Shield, Bell } from 'lucide-react';\nimport { Button } from '../ui/Button';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { LoginModal } from './LoginModal';\nimport { RegisterModal } from './RegisterModal';\n\nexport function AuthOverlay() {\n  const { isAuthenticated, user, logout } = useAuth();\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [showRegisterModal, setShowRegisterModal] = useState(false);\n\n  const handleLogout = () => {\n    logout();\n    setShowUserMenu(false);\n  };\n\n  const handleLoginSuccess = () => {\n    setShowLoginModal(false);\n  };\n\n  const handleRegisterSuccess = () => {\n    setShowRegisterModal(false);\n  };\n\n  return (\n    <>\n      {/* Auth Button */}\n      <div className=\"relative\">\n        {isAuthenticated ? (\n          <div className=\"relative\">\n            <button\n              onClick={() => setShowUserMenu(!showUserMenu)}\n              className=\"flex items-center gap-2 p-2 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-700 transition-colors\"\n            >\n              <div className=\"w-8 h-8 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center\">\n                <User className=\"w-4 h-4 text-white\" />\n              </div>\n              <span className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">\n                {user?.name || 'کاربر'}\n              </span>\n            </button>\n\n            {/* User Menu Dropdown */}\n            <AnimatePresence>\n              {showUserMenu && (\n                <motion.div\n                  initial={{ opacity: 0, scale: 0.95, y: -10 }}\n                  animate={{ opacity: 1, scale: 1, y: 0 }}\n                  exit={{ opacity: 0, scale: 0.95, y: -10 }}\n                  className=\"absolute left-0 top-full mt-2 w-64 bg-white dark:bg-slate-800 rounded-xl shadow-lg border border-slate-200 dark:border-slate-700 py-2 z-50\"\n                  dir=\"rtl\"\n                >\n                  {/* User Info */}\n                  <div className=\"px-4 py-3 border-b border-slate-200 dark:border-slate-700\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center\">\n                        <User className=\"w-5 h-5 text-white\" />\n                      </div>\n                      <div>\n                        <p className=\"font-medium text-slate-900 dark:text-slate-100\">\n                          {user?.name || 'کاربر'}\n                        </p>\n                        <p className=\"text-sm text-slate-500 dark:text-slate-400\">\n                          {user?.email || 'ایمیل'}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Menu Items */}\n                  <div className=\"py-2\">\n                    <button className=\"w-full flex items-center gap-3 px-4 py-2 text-sm text-slate-700 dark:text-slate-300 hover:bg-slate-50 dark:hover:bg-slate-700 transition-colors\">\n                      <Settings className=\"w-4 h-4\" />\n                      تنظیمات پروفایل\n                    </button>\n                    <button className=\"w-full flex items-center gap-3 px-4 py-2 text-sm text-slate-700 dark:text-slate-300 hover:bg-slate-50 dark:hover:bg-slate-700 transition-colors\">\n                      <Bell className=\"w-4 h-4\" />\n                      اعلان‌ها\n                    </button>\n                    <button className=\"w-full flex items-center gap-3 px-4 py-2 text-sm text-slate-700 dark:text-slate-300 hover:bg-slate-50 dark:hover:bg-slate-700 transition-colors\">\n                      <Shield className=\"w-4 h-4\" />\n                      امنیت\n                    </button>\n                  </div>\n\n                  {/* Logout */}\n                  <div className=\"border-t border-slate-200 dark:border-slate-700 pt-2\">\n                    <button\n                      onClick={handleLogout}\n                      className=\"w-full flex items-center gap-3 px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20 transition-colors\"\n                    >\n                      <LogOut className=\"w-4 h-4\" />\n                      خروج\n                    </button>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n        ) : (\n          <div className=\"flex items-center gap-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setShowLoginModal(true)}\n            >\n              ورود\n            </Button>\n            <Button\n              size=\"sm\"\n              onClick={() => setShowRegisterModal(true)}\n            >\n              ثبت‌نام\n            </Button>\n          </div>\n        )}\n      </div>\n\n      {/* Login Modal */}\n      <LoginModal\n        isOpen={showLoginModal}\n        onClose={() => setShowLoginModal(false)}\n        onSwitchToRegister={() => {\n          setShowLoginModal(false);\n          setShowRegisterModal(true);\n        }}\n      />\n\n      {/* Register Modal */}\n      <RegisterModal\n        isOpen={showRegisterModal}\n        onClose={() => setShowRegisterModal(false)}\n        onSwitchToLogin={() => {\n          setShowRegisterModal(false);\n          setShowLoginModal(true);\n        }}\n      />\n\n      {/* Click outside to close user menu */}\n      {showUserMenu && (\n        <div\n          className=\"fixed inset-0 z-40\"\n          onClick={() => setShowUserMenu(false)}\n        />\n      )}\n    </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { ModernSidebar } from './ModernSidebar';\nimport { AuthOverlay } from '../Auth/AuthOverlay';\nimport { \n  Bell, Search, Wifi, WifiOff,\n  Sun, Moon, Monitor, Sparkles, Brain, Shield\n} from 'lucide-react';\n\ninterface SystemNotification {\n  id: string;\n  type: 'success' | 'warning' | 'error' | 'info';\n  title: string;\n  message: string;\n  timestamp: Date;\n  read: boolean;\n}\n\ninterface ConnectionStatus {\n  backend: boolean;\n  websocket: boolean;\n  database: boolean;\n}\n\nexport function EnhancedAppLayout() {\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [notifications, setNotifications] = useState<SystemNotification[]>([]);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState<ConnectionStatus>({\n    backend: false,\n    websocket: false,\n    database: false\n  });\n  const [theme, setTheme] = useState<'light' | 'dark' | 'auto'>('dark');\n\n  // Page titles for different routes\n  const getPageTitle = (pathname: string) => {\n    const titles: Record<string, string> = {\n      '/overview': 'نمای کلی سیستم',\n      '/dashboard': 'داشبورد تحلیلی',\n      '/models': 'مدل‌های یادگیری',\n      '/datasets': 'مجموعه داده‌ها',\n      '/analytics': 'آنالیتیکس پیشرفته',\n      '/monitoring': 'نظارت سیستم',\n      '/logs': 'گزارش‌های سیستم',\n      '/training': 'مدیریت آموزش',\n      '/settings': 'تنظیمات سیستم',\n      '/team': 'مدیریت تیم'\n    };\n    return titles[pathname] || 'سیستم هوش مصنوعی حقوقی';\n  };\n\n  useEffect(() => {\n    // Check system connections\n    const checkConnections = async () => {\n      try {\n        const backendResponse = await fetch('/api/health').catch(() => null);\n        const wsTest = new Promise((resolve) => {\n          try {\n            const ws = new WebSocket('ws://localhost:8080/');\n            ws.onopen = () => { ws.close(); resolve(true); };\n            ws.onerror = () => resolve(false);\n            setTimeout(() => resolve(false), 3000);\n          } catch {\n            resolve(false);\n          }\n        });\n\n        setConnectionStatus({\n          backend: backendResponse?.ok || false,\n          websocket: await wsTest as boolean,\n          database: backendResponse?.ok || false // Simplified check\n        });\n\n        // Add sample notifications\n        if (notifications.length === 0) {\n          setNotifications([\n            {\n              id: '1',\n              type: 'success',\n              title: 'آموزش تکمیل شد',\n              message: 'مدل قوانین جزایی با دقت 92.3% آموزش دید',\n              timestamp: new Date(Date.now() - 5 * 60000),\n              read: false\n            },\n            {\n              id: '2',\n              type: 'info',\n              title: 'بروزرسانی داده',\n              message: 'مجموعه داده جدید قوانین تجاری افزوده شد',\n              timestamp: new Date(Date.now() - 15 * 60000),\n              read: false\n            },\n            {\n              id: '3',\n              type: 'warning',\n              title: 'هشدار سیستم',\n              message: 'استفاده حافظه به 85% رسیده است',\n              timestamp: new Date(Date.now() - 30 * 60000),\n              read: true\n            }\n          ]);\n        }\n      } catch (error) {\n        console.error('Connection check failed:', error);\n      }\n    };\n\n    checkConnections();\n    const interval = setInterval(checkConnections, 30000); // Check every 30 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  const unreadNotifications = notifications.filter(n => !n.read).length;\n\n  const getNotificationIcon = (type: string) => {\n    switch (type) {\n      case 'success': return '✅';\n      case 'warning': return '⚠️';\n      case 'error': return '❌';\n      default: return 'ℹ️';\n    }\n  };\n\n  const markAsRead = (id: string) => {\n    setNotifications(prev => \n      prev.map(n => n.id === id ? { ...n, read: true } : n)\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 flex\" dir=\"rtl\">\n      <ModernSidebar />\n\n      <div className=\"flex-1 min-w-0 flex flex-col min-h-screen\">\n        {/* Enhanced Header */}\n        <motion.header\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"sticky top-0 z-30 bg-white/5 backdrop-blur-xl border-b border-slate-700/50\"\n        >\n          <div className=\"px-6 py-4\">\n            <div className=\"flex items-center justify-between\">\n              {/* Page Title and Breadcrumb */}\n              <div className=\"flex items-center gap-4\">\n                <motion.div\n                  key={location.pathname}\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.4 }}\n                >\n                  <h1 className=\"text-2xl font-bold text-white\">\n                    {getPageTitle(location.pathname)}\n                  </h1>\n                  <div className=\"flex items-center gap-2 text-sm text-slate-400\">\n                    <span>داشبورد</span>\n                    <span>•</span>\n                    <span>{getPageTitle(location.pathname)}</span>\n                  </div>\n                </motion.div>\n              </div>\n\n              {/* Header Controls */}\n              <div className=\"flex items-center gap-4\">\n                {/* Search */}\n                <div className=\"relative\">\n                  <Search className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-slate-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"جستجو در سیستم...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className=\"w-64 pl-4 pr-10 py-2 bg-slate-800/50 border border-slate-600/50 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-blue-400 focus:ring-2 focus:ring-blue-400/20 transition-all\"\n                  />\n                </div>\n\n                {/* Connection Status */}\n                <div className=\"flex items-center gap-2\">\n                  {[\n                    { key: 'backend', label: 'بک‌اند', status: connectionStatus.backend },\n                    { key: 'websocket', label: 'WebSocket', status: connectionStatus.websocket },\n                    { key: 'database', label: 'دیتابیس', status: connectionStatus.database }\n                  ].map((conn) => (\n                    <motion.div\n                      key={conn.key}\n                      initial={{ scale: 0 }}\n                      animate={{ scale: 1 }}\n                      transition={{ duration: 0.3 }}\n                      className={`flex items-center gap-1 px-2 py-1 rounded-lg text-xs ${\n                        conn.status \n                          ? 'bg-green-500/20 text-green-300 border border-green-400/30' \n                          : 'bg-red-500/20 text-red-300 border border-red-400/30'\n                      }`}\n                      title={`${conn.label}: ${conn.status ? 'متصل' : 'قطع'}`}\n                    >\n                      {conn.status ? (\n                        <Wifi className=\"w-3 h-3\" />\n                      ) : (\n                        <WifiOff className=\"w-3 h-3\" />\n                      )}\n                      <span className=\"hidden sm:inline\">{conn.label}</span>\n                    </motion.div>\n                  ))}\n                </div>\n\n                {/* Notifications */}\n                <div className=\"relative\">\n                  <motion.button\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    onClick={() => setShowNotifications(!showNotifications)}\n                    className=\"relative p-2 bg-slate-700/50 hover:bg-slate-600/50 rounded-xl transition-all\"\n                  >\n                    <Bell className=\"w-5 h-5 text-slate-300\" />\n                    {unreadNotifications > 0 && (\n                      <motion.div\n                        initial={{ scale: 0 }}\n                        animate={{ scale: 1 }}\n                        className=\"absolute -top-1 -left-1 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center text-xs font-bold text-white\"\n                      >\n                        {unreadNotifications}\n                      </motion.div>\n                    )}\n                  </motion.button>\n\n                  {/* Notifications Dropdown */}\n                  <AnimatePresence>\n                    {showNotifications && (\n                      <motion.div\n                        initial={{ opacity: 0, scale: 0.95, y: -10 }}\n                        animate={{ opacity: 1, scale: 1, y: 0 }}\n                        exit={{ opacity: 0, scale: 0.95, y: -10 }}\n                        transition={{ duration: 0.2 }}\n                        className=\"absolute left-0 mt-2 w-80 bg-slate-800/95 backdrop-blur-xl rounded-2xl border border-slate-600/50 shadow-2xl z-50\"\n                      >\n                        <div className=\"p-4 border-b border-slate-700/50\">\n                          <h3 className=\"font-bold text-white\">اعلان‌ها</h3>\n                        </div>\n                        \n                        <div className=\"max-h-96 overflow-y-auto\">\n                          {notifications.length === 0 ? (\n                            <div className=\"p-8 text-center text-slate-400\">\n                              اعلانی وجود ندارد\n                            </div>\n                          ) : (\n                            notifications.map((notification) => (\n                              <motion.div\n                                key={notification.id}\n                                initial={{ opacity: 0, x: -20 }}\n                                animate={{ opacity: 1, x: 0 }}\n                                className={`p-4 border-b border-slate-700/30 hover:bg-slate-700/30 transition-colors cursor-pointer ${\n                                  !notification.read ? 'bg-blue-500/5' : ''\n                                }`}\n                                onClick={() => markAsRead(notification.id)}\n                              >\n                                <div className=\"flex items-start gap-3\">\n                                  <span className=\"text-lg\">{getNotificationIcon(notification.type)}</span>\n                                  <div className=\"flex-1\">\n                                    <h4 className=\"font-medium text-white text-sm\">{notification.title}</h4>\n                                    <p className=\"text-xs text-slate-400 mt-1\">{notification.message}</p>\n                                    <p className=\"text-xs text-slate-500 mt-2\">\n                                      {notification.timestamp.toLocaleTimeString('fa-IR')}\n                                    </p>\n                                  </div>\n                                  {!notification.read && (\n                                    <div className=\"w-2 h-2 bg-blue-400 rounded-full\" />\n                                  )}\n                                </div>\n                              </motion.div>\n                            ))\n                          )}\n                        </div>\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                </div>\n\n                {/* Authentication Overlay */}\n                <AuthOverlay />\n              </div>\n            </div>\n          </div>\n        </motion.header>\n\n        {/* Main Content Area */}\n        <main className=\"flex-1 min-w-0 relative flex flex-col\">\n          {/* Background Pattern */}\n          <div className=\"absolute inset-0 opacity-[0.02]\">\n            <div \n              style={{\n                backgroundImage: \"radial-gradient(circle at 1px 1px, rgba(255,255,255,0.3) 1px, transparent 0)\",\n                backgroundSize: \"50px 50px\"\n              }}\n              className=\"w-full h-full\"\n            />\n          </div>\n\n          {/* Page Content */}\n          <div className=\"relative z-10 p-6\">\n            <motion.div\n              key={location.pathname}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.4 }}\n              className=\"min-h-full\"\n            >\n              <Outlet />\n            </motion.div>\n          </div>\n        </main>\n\n        {/* Status Bar */}\n        <motion.footer\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.3 }}\n          className=\"bg-slate-800/30 backdrop-blur-sm border-t border-slate-700/50 px-6 py-3\"\n        >\n          <div className=\"flex items-center justify-between text-xs text-slate-400\">\n            <div className=\"flex items-center gap-6\">\n              <div className=\"flex items-center gap-2\">\n                <Brain className=\"w-3 h-3 text-blue-400\" />\n                <span>سیستم هوش مصنوعی حقوقی ایران</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Shield className=\"w-3 h-3 text-green-400\" />\n                <span>امنیت: فعال</span>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center gap-6\">\n              <div>نسخه 2.1.0</div>\n              <div>آخرین بروزرسانی: {new Date().toLocaleTimeString('fa-IR')}</div>\n              <div className=\"flex items-center gap-1\">\n                <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\" />\n                <span>آنلاین</span>\n              </div>\n            </div>\n          </div>\n        </motion.footer>\n      </div>\n\n      {/* Global Loading Overlay */}\n      <AnimatePresence>\n        {/* You can add global loading states here */}\n      </AnimatePresence>\n\n      {/* Click outside handlers */}\n      {(showNotifications || showUserMenu) && (\n        <div \n          className=\"fixed inset-0 z-30\" \n          onClick={() => {\n            setShowNotifications(false);\n            setShowUserMenu(false);\n          }}\n        />\n      )}\n    </div>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport { \n  Brain, ArrowLeft, Sparkles, Zap, Target, BookOpen, Shield, \n  Database, Users, TrendingUp, Award, CheckCircle, Play,\n  BarChart3, FileText, Globe, Cpu, Monitor, Heart\n} from \"lucide-react\";\n\ninterface SystemStats {\n  models: number;\n  datasets: number;\n  accuracy: number;\n  documents: number;\n}\n\nexport function EnhancedLandingPage(): React.ReactElement {\n  const navigate = useNavigate();\n  const [stats, setStats] = useState<SystemStats>({ models: 0, datasets: 0, accuracy: 0, documents: 0 });\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Animate numbers counting up\n  useEffect(() => {\n    const finalStats = { models: 12, datasets: 47, accuracy: 94.5, documents: 127000 };\n    \n    setTimeout(() => {\n      setStats(finalStats);\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n\n  const handleStart = () => {\n    navigate(\"/overview\");\n  };\n\n  const features = [\n    {\n      icon: Brain,\n      title: \"هوش مصنوعی پیشرفته\",\n      description: \"آموزش مدل‌های عمیق با معماری ترنسفورمر برای پردازش متون حقوقی فارسی\",\n      color: \"from-blue-500 to-cyan-500\"\n    },\n    {\n      icon: Shield,\n      title: \"قوانین جمهوری اسلامی\",\n      description: \"پایگاه داده جامع قوانین ایران با دسته‌بندی هوشمند و جستجوی پیشرفته\",\n      color: \"from-emerald-500 to-green-500\"\n    },\n    {\n      icon: BarChart3,\n      title: \"آنالیتیکس پیشرفته\",\n      description: \"داشبورد تحلیلی با نمودارهای تعاملی برای نظارت بر عملکرد مدل‌ها\",\n      color: \"from-purple-500 to-pink-500\"\n    },\n    {\n      icon: Database,\n      title: \"مدیریت داده‌های حقوقی\",\n      description: \"سیستم مدیریت داده با امتیازدهی کیفیت و ارزیابی منابع قانونی\",\n      color: \"from-orange-500 to-red-500\"\n    }\n  ];\n\n  const achievements = [\n    { label: \"مدل‌های آموزش دیده\", value: stats.models, suffix: \"+\" },\n    { label: \"مجموعه داده\", value: stats.datasets, suffix: \"+\" },\n    { label: \"دقت میانگین\", value: stats.accuracy, suffix: \"%\" },\n    { label: \"سند حقوقی\", value: stats.documents, suffix: \"+\" }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900 text-white overflow-hidden\" dir=\"rtl\">\n      {/* Enhanced Background Effects */}\n      <div className=\"absolute inset-0\">\n        <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-br from-blue-600/10 via-purple-600/5 to-pink-600/10\" />\n        <div className=\"absolute top-1/4 right-1/4 w-96 h-96 bg-blue-500/20 rounded-full blur-3xl animate-pulse\" />\n        <div className=\"absolute bottom-1/4 left-1/4 w-80 h-80 bg-purple-500/20 rounded-full blur-3xl animate-pulse delay-1000\" />\n        <div className=\"absolute top-1/2 right-1/3 w-64 h-64 bg-cyan-500/15 rounded-full blur-2xl animate-bounce delay-500\" />\n        \n        {/* Grid Pattern */}\n        <div className=\"absolute inset-0 opacity-[0.02]\">\n          <div \n            style={{\n              backgroundImage: \"radial-gradient(circle at 1px 1px, rgba(255,255,255,0.3) 1px, transparent 0)\",\n              backgroundSize: \"40px 40px\"\n            }}\n            className=\"w-full h-full\"\n          />\n        </div>\n      </div>\n\n      <div className=\"relative z-10 min-h-screen flex flex-col\">\n        {/* Navigation Header */}\n        <motion.header \n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"p-6 flex justify-between items-center\"\n        >\n          <div className=\"flex items-center gap-4\">\n            <div className=\"w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl flex items-center justify-center\">\n              <Brain className=\"h-6 w-6 text-white\" />\n            </div>\n            <div>\n              <h2 className=\"text-xl font-bold text-white\">هوش مصنوعی حقوقی ایران</h2>\n              <p className=\"text-blue-200 text-sm\">سیستم یادگیری عمیق قوانین</p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-4\">\n            <div className=\"flex items-center gap-2 px-4 py-2 bg-white/10 backdrop-blur-md rounded-full border border-white/20\">\n              <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\" />\n              <span className=\"text-sm text-green-200\">سیستم آماده</span>\n            </div>\n          </div>\n        </motion.header>\n\n        {/* Main Content */}\n        <div className=\"flex-1 flex items-center justify-center px-6\">\n          <div className=\"max-w-7xl mx-auto\">\n            {/* Hero Section */}\n            <div className=\"text-center mb-16\">\n              <motion.div\n                initial={{ scale: 0.5, opacity: 0, rotate: -10 }}\n                animate={{ scale: 1, opacity: 1, rotate: 0 }}\n                transition={{ type: 'spring', stiffness: 260, damping: 20 }}\n                className=\"mb-8\"\n              >\n                <div className=\"relative inline-block\">\n                  <div className=\"w-24 h-24 mx-auto bg-gradient-to-r from-blue-500 via-purple-600 to-pink-500 rounded-3xl flex items-center justify-center shadow-2xl transform hover:scale-110 transition-transform duration-500\">\n                    <Brain className=\"h-12 w-12 text-white\" />\n                  </div>\n                  <div className=\"absolute inset-0 w-24 h-24 mx-auto bg-gradient-to-r from-blue-500 to-purple-600 rounded-3xl blur-xl opacity-60 animate-pulse\" />\n                  \n                  {/* Floating particles */}\n                  <motion.div\n                    className=\"absolute -top-2 -right-2 w-4 h-4 bg-yellow-400 rounded-full\"\n                    animate={{ y: [-10, 10], rotate: [0, 360] }}\n                    transition={{ duration: 3, repeat: Infinity, repeatType: \"reverse\" }}\n                  />\n                  <motion.div\n                    className=\"absolute -bottom-2 -left-2 w-3 h-3 bg-pink-400 rounded-full\"\n                    animate={{ y: [10, -10], x: [-5, 5] }}\n                    transition={{ duration: 2.5, repeat: Infinity, repeatType: \"reverse\" }}\n                  />\n                </div>\n              </motion.div>\n\n              <motion.div\n                initial={{ opacity: 0, y: 30 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.8, delay: 0.3 }}\n              >\n                <h1 className=\"text-5xl md:text-8xl font-black mb-6 leading-tight\">\n                  <span className=\"bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 bg-clip-text text-transparent\">\n                    هوش مصنوعی حقوقی\n                  </span>\n                </h1>\n                \n                <div className=\"flex items-center justify-center gap-6 text-2xl md:text-4xl font-bold text-slate-300 mb-8\">\n                  <motion.div\n                    animate={{ rotate: 360 }}\n                    transition={{ duration: 8, repeat: Infinity, ease: \"linear\" }}\n                  >\n                    <Sparkles className=\"w-10 h-10 text-yellow-400\" />\n                  </motion.div>\n                  <span>نسل جدید قضاوت هوشمند</span>\n                  <motion.div\n                    animate={{ scale: [1, 1.2, 1] }}\n                    transition={{ duration: 2, repeat: Infinity }}\n                  >\n                    <Zap className=\"w-10 h-10 text-cyan-400\" />\n                  </motion.div>\n                </div>\n              </motion.div>\n\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.8, delay: 0.6 }}\n                className=\"mb-12\"\n              >\n                <p className=\"text-xl md:text-3xl text-slate-200 mb-8 max-w-5xl mx-auto leading-relaxed\">\n                  آموزش و ارزیابی مدل‌های یادگیری عمیق با قوانین جمهوری اسلامی ایران\n                  <br />\n                  <span className=\"text-cyan-300 font-semibold text-lg md:text-2xl\">\n                    دقت بالا • سرعت فوق‌العاده • قابلیت اعتماد کامل • هوش مصنوعی اخلاقی\n                  </span>\n                </p>\n\n                <motion.button\n                  onClick={handleStart}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  className=\"inline-flex items-center gap-3 px-8 py-4 bg-gradient-to-r from-blue-600 to-purple-600 rounded-2xl font-bold text-lg shadow-2xl hover:shadow-blue-500/25 transition-all duration-300\"\n                >\n                  <Play className=\"w-6 h-6\" />\n                  شروع کار با سیستم\n                  <motion.div\n                    animate={{ x: [0, 5, 0] }}\n                    transition={{ duration: 1.5, repeat: Infinity }}\n                  >\n                    <ArrowLeft className=\"w-5 h-5\" />\n                  </motion.div>\n                </motion.button>\n              </motion.div>\n            </div>\n\n            {/* Stats Section */}\n            <motion.div\n              initial={{ opacity: 0, y: 40 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.9 }}\n              className=\"grid grid-cols-2 md:grid-cols-4 gap-6 mb-16\"\n            >\n              {achievements.map((achievement, index) => (\n                <motion.div\n                  key={achievement.label}\n                  initial={{ opacity: 0, scale: 0.5 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.5, delay: 1.2 + index * 0.1 }}\n                  className=\"bg-white/10 backdrop-blur-md rounded-2xl p-6 border border-white/20 hover:scale-105 transition-all duration-300 group\"\n                >\n                  <div className=\"text-center\">\n                    <motion.div \n                      className=\"text-3xl md:text-4xl font-black text-transparent bg-gradient-to-r from-cyan-400 to-blue-400 bg-clip-text mb-2\"\n                      animate={isLoading ? {} : { scale: [1, 1.1, 1] }}\n                      transition={{ duration: 0.6, delay: 1.5 + index * 0.1 }}\n                    >\n                      {isLoading ? \"...\" : achievement.value.toLocaleString('fa-IR')}{achievement.suffix}\n                    </motion.div>\n                    <div className=\"text-slate-300 text-sm font-medium group-hover:text-white transition-colors\">\n                      {achievement.label}\n                    </div>\n                    <div className=\"w-full h-1 bg-gradient-to-r from-cyan-400 to-blue-400 rounded-full mt-3 opacity-70 group-hover:opacity-100 transition-opacity\" />\n                  </div>\n                </motion.div>\n              ))}\n            </motion.div>\n\n            {/* Features Grid */}\n            <motion.div\n              initial={{ opacity: 0, y: 50 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 1.4 }}\n              className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-16\"\n            >\n              {features.map((feature, index) => (\n                <motion.div\n                  key={feature.title}\n                  initial={{ opacity: 0, x: index % 2 === 0 ? -50 : 50 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.6, delay: 1.6 + index * 0.2 }}\n                  className=\"group\"\n                >\n                  <div className=\"bg-white/5 backdrop-blur-md rounded-3xl p-8 border border-white/10 hover:border-white/30 transition-all duration-500 hover:scale-105\">\n                    <div className=\"flex items-start gap-6\">\n                      <div className={`w-16 h-16 rounded-2xl bg-gradient-to-r ${feature.color} flex items-center justify-center group-hover:scale-110 transition-transform duration-300`}>\n                        <feature.icon className=\"h-8 w-8 text-white\" />\n                      </div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-xl font-bold text-white mb-3 group-hover:text-cyan-300 transition-colors\">\n                          {feature.title}\n                        </h3>\n                        <p className=\"text-slate-300 leading-relaxed group-hover:text-slate-200 transition-colors\">\n                          {feature.description}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </motion.div>\n              ))}\n            </motion.div>\n\n            {/* Technical Highlights */}\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 2.0 }}\n              className=\"bg-gradient-to-r from-slate-800/50 to-slate-900/50 backdrop-blur-xl rounded-3xl p-8 border border-slate-600/30 mb-12\"\n            >\n              <div className=\"text-center mb-8\">\n                <h3 className=\"text-2xl font-bold text-transparent bg-gradient-to-r from-cyan-400 to-blue-400 bg-clip-text mb-4\">\n                  ویژگی‌های فنی پیشرفته\n                </h3>\n                <p className=\"text-slate-300\">\n                  بر پایه جدیدترین تکنولوژی‌های هوش مصنوعی و پردازش زبان طبیعی\n                </p>\n              </div>\n\n              <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-6\">\n                {[\n                  { icon: Cpu, name: \"پردازش موازی\", desc: \"GPU Acceleration\" },\n                  { icon: Database, name: \"پایگاه داده\", desc: \"SQLite + Vector DB\" },\n                  { icon: Globe, name: \"WebSocket\", desc: \"Real-time Updates\" },\n                  { icon: Shield, name: \"امنیت\", desc: \"Enterprise Security\" },\n                  { icon: Monitor, name: \"مانیتورینگ\", desc: \"Live Monitoring\" },\n                  { icon: Heart, name: \"عملکرد\", desc: \"High Performance\" }\n                ].map((tech, index) => (\n                  <motion.div\n                    key={tech.name}\n                    initial={{ opacity: 0, scale: 0.8 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    transition={{ duration: 0.4, delay: 2.2 + index * 0.1 }}\n                    className=\"text-center group cursor-pointer\"\n                  >\n                    <div className=\"w-16 h-16 mx-auto mb-3 bg-gradient-to-r from-slate-700 to-slate-600 rounded-2xl flex items-center justify-center group-hover:from-cyan-500 group-hover:to-blue-500 transition-all duration-300\">\n                      <tech.icon className=\"h-8 w-8 text-slate-300 group-hover:text-white transition-colors\" />\n                    </div>\n                    <div className=\"text-sm font-semibold text-slate-200 group-hover:text-white transition-colors\">\n                      {tech.name}\n                    </div>\n                    <div className=\"text-xs text-slate-400 group-hover:text-slate-300 transition-colors\">\n                      {tech.desc}\n                    </div>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n\n            {/* Call to Action */}\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 2.5 }}\n              className=\"text-center\"\n            >\n              <div className=\"bg-gradient-to-r from-blue-600/20 to-purple-600/20 backdrop-blur-xl rounded-3xl p-8 border border-blue-500/30\">\n                <h3 className=\"text-3xl font-bold text-white mb-4\">\n                  آماده شروع هستید؟\n                </h3>\n                <p className=\"text-xl text-slate-300 mb-8\">\n                  به سیستم هوش مصنوعی حقوقی ایران بپیوندید و تجربه آینده قضاوت را داشته باشید\n                </p>\n                \n                <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n                  <motion.button\n                    onClick={handleStart}\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    className=\"inline-flex items-center gap-3 px-8 py-4 bg-gradient-to-r from-cyan-500 to-blue-600 rounded-2xl font-bold text-lg shadow-2xl hover:shadow-cyan-500/30 transition-all duration-300\"\n                  >\n                    <Play className=\"w-6 h-6\" />\n                    ورود به داشبورد\n                  </motion.button>\n                  \n                  <motion.button\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    className=\"inline-flex items-center gap-3 px-8 py-4 bg-white/10 backdrop-blur-md rounded-2xl font-bold text-lg border border-white/20 hover:bg-white/20 transition-all duration-300\"\n                  >\n                    <FileText className=\"w-6 h-6\" />\n                    مطالعه مستندات\n                  </motion.button>\n                </div>\n              </div>\n            </motion.div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <motion.footer\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 0.6, delay: 3.0 }}\n          className=\"p-6 text-center\"\n        >\n          <div className=\"text-slate-400 text-sm\">\n            © 2024 سیستم هوش مصنوعی حقوقی ایران - تمامی حقوق محفوظ است\n          </div>\n        </motion.footer>\n      </div>\n    </div>\n  );\n}","import React, { createContext, useContext, useCallback, useState, ReactNode } from 'react';\nimport { CheckCircle, AlertCircle, XCircle, Info, X } from 'lucide-react';\n\nexport interface Toast {\n  id: string;\n  type: 'success' | 'error' | 'warning' | 'info';\n  title: string;\n  message?: string;\n  duration?: number;\n  action?: {\n    label: string;\n    onClick: () => void;\n  };\n}\n\ninterface ToastContextType {\n  toasts: Toast[];\n  addToast: (toast: Omit<Toast, 'id'>) => string;\n  removeToast: (id: string) => void;\n  clearToasts: () => void;\n}\n\nconst ToastContext = createContext<ToastContextType | undefined>(undefined);\n\nexport function useToast() {\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error('useToast must be used within ToastProvider');\n  }\n  return context;\n}\n\ninterface ToastProviderProps {\n  children: ReactNode;\n}\n\nexport function ToastProvider({ children }: ToastProviderProps) {\n  const [toasts, setToasts] = useState<Toast[]>([]);\n\n  const addToast = useCallback((toast: Omit<Toast, 'id'>) => {\n    const id = Math.random().toString(36).substr(2, 9);\n    const newToast: Toast = {\n      ...toast,\n      id,\n      duration: toast.duration ?? 5000,\n    };\n\n    setToasts(prev => [...prev, newToast]);\n\n    // Auto remove toast after duration\n    if (newToast.duration && newToast.duration > 0) {\n      setTimeout(() => {\n        removeToast(id);\n      }, newToast.duration);\n    }\n\n    return id;\n  }, []);\n\n  const removeToast = useCallback((id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  }, []);\n\n  const clearToasts = useCallback(() => {\n    setToasts([]);\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ toasts, addToast, removeToast, clearToasts }}>\n      {children}\n      <ToastContainer toasts={toasts} onRemove={removeToast} />\n    </ToastContext.Provider>\n  );\n}\n\ninterface ToastContainerProps {\n  toasts: Toast[];\n  onRemove: (id: string) => void;\n}\n\nfunction ToastContainer({ toasts, onRemove }: ToastContainerProps) {\n  if (toasts.length === 0) return null;\n\n  return (\n    <div className=\"fixed top-4 left-4 right-4 z-50 flex flex-col gap-3 max-w-sm mx-auto pointer-events-none\">\n      {toasts.map((toast, index) => (\n        <ToastItem\n          key={toast.id}\n          toast={toast}\n          onRemove={onRemove}\n          index={index}\n        />\n      ))}\n    </div>\n  );\n}\n\ninterface ToastItemProps {\n  toast: Toast;\n  onRemove: (id: string) => void;\n  index: number;\n}\n\nfunction ToastItem({ toast, onRemove, index }: ToastItemProps) {\n  const icons = {\n    success: CheckCircle,\n    error: XCircle,\n    warning: AlertCircle,\n    info: Info,\n  };\n\n  const colors = {\n    success: 'bg-green-50 dark:bg-green-950 border-green-200 dark:border-green-800 text-green-800 dark:text-green-200',\n    error: 'bg-red-50 dark:bg-red-950 border-red-200 dark:border-red-800 text-red-800 dark:text-red-200',\n    warning: 'bg-yellow-50 dark:bg-yellow-950 border-yellow-200 dark:border-yellow-800 text-yellow-800 dark:text-yellow-200',\n    info: 'bg-blue-50 dark:bg-blue-950 border-blue-200 dark:border-blue-800 text-blue-800 dark:text-blue-200',\n  };\n\n  const iconColors = {\n    success: 'text-green-600 dark:text-green-400',\n    error: 'text-red-600 dark:text-red-400',\n    warning: 'text-yellow-600 dark:text-yellow-400',\n    info: 'text-blue-600 dark:text-blue-400',\n  };\n\n  const Icon = icons[toast.type];\n\n  return (\n    <div\n      className={`\n        relative p-4 rounded-lg border shadow-lg backdrop-blur-sm pointer-events-auto\n        transform transition-all duration-300 ease-out\n        animate-slide-in-down\n        ${colors[toast.type]}\n      `}\n      style={{\n        animationDelay: `${index * 100}ms`,\n        transform: `translateY(${index * 4}px)`,\n      }}\n      dir=\"rtl\"\n    >\n      <div className=\"flex items-start gap-3\">\n        <Icon className={`h-5 w-5 flex-shrink-0 mt-0.5 ${iconColors[toast.type]}`} />\n        \n        <div className=\"flex-1 min-w-0\">\n          <h4 className=\"font-medium text-sm\">{toast.title}</h4>\n          {toast.message && (\n            <p className=\"mt-1 text-sm opacity-90\">{toast.message}</p>\n          )}\n          \n          {toast.action && (\n            <button\n              onClick={toast.action.onClick}\n              className=\"mt-2 text-sm font-medium underline hover:no-underline transition-all duration-200\"\n            >\n              {toast.action.label}\n            </button>\n          )}\n        </div>\n\n        <button\n          onClick={() => onRemove(toast.id)}\n          className=\"flex-shrink-0 p-1 rounded-md hover:bg-black hover:bg-opacity-10 dark:hover:bg-white dark:hover:bg-opacity-10 transition-colors duration-200\"\n          aria-label=\"بستن اعلان\"\n        >\n          <X className=\"h-4 w-4\" />\n        </button>\n      </div>\n\n      {/* Progress bar for timed toasts */}\n      {toast.duration && toast.duration > 0 && (\n        <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-black bg-opacity-10 dark:bg-white dark:bg-opacity-10 rounded-b-lg overflow-hidden\">\n          <div\n            className=\"h-full bg-current opacity-30 transition-all ease-linear\"\n            style={{\n              width: '100%',\n              animation: `shrink ${toast.duration}ms linear forwards`,\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Toast helper functions\nexport const toast = {\n  success: (title: string, message?: string, options?: Partial<Toast>) => {\n    const { addToast } = useToast();\n    return addToast({ type: 'success', title, message, ...options });\n  },\n  \n  error: (title: string, message?: string, options?: Partial<Toast>) => {\n    const { addToast } = useToast();\n    return addToast({ type: 'error', title, message, ...options });\n  },\n  \n  warning: (title: string, message?: string, options?: Partial<Toast>) => {\n    const { addToast } = useToast();\n    return addToast({ type: 'warning', title, message, ...options });\n  },\n  \n  info: (title: string, message?: string, options?: Partial<Toast>) => {\n    const { addToast } = useToast();\n    return addToast({ type: 'info', title, message, ...options });\n  },\n};\n\n// Add CSS for the shrink animation\nconst style = document.createElement('style');\nstyle.textContent = `\n  @keyframes shrink {\n    from { width: 100%; }\n    to { width: 0%; }\n  }\n`;\ndocument.head.appendChild(style);","// Normalize API base: in dev we proxy '/api' via Vite; in prod we can use relative '/api'.\nconst RAW = (import.meta as any)?.env?.VITE_API_BASE ?? '/api';\n\n// remove trailing slash and ensure leading slash\nfunction norm(base: string) {\n  const t = (base || '').trim();\n  const noTrail = t.endsWith('/') ? t.slice(0, -1) : t;\n  return noTrail.startsWith('/') ? noTrail : `/${noTrail}`;\n}\n\nexport const API_BASE = norm(RAW);\nexport const WS_BASE = (import.meta as any)?.env?.VITE_WS_BASE ?? '';\nexport const WS_PATH = import.meta.env.VITE_WS_PATH || (typeof window !== 'undefined' ? `ws://${window.location.hostname}:8080/socket.io/` : 'ws://localhost:8080/socket.io/')\n\n// Legacy exports for compatibility\nexport const API_URL = API_BASE\nexport const WS_URL = WS_PATH","import { z } from 'zod'\nimport { API_BASE } from '../lib/config'\n\ntype RequestInit = globalThis.RequestInit\n\n// safe join: join('/api', '/health') => '/api/health'; join('/api', 'health') => '/api/health'\nfunction join(base: string, path: string) {\n  return `${base}${path.startsWith('/') ? path : `/${path}`}`;\n}\n\nlet csrf = ''\n\n// Zod schemas for API responses\nexport const SystemMetricsSchema = z.object({\n  cpu: z.number(),\n  memory: z.object({\n    used: z.number(),\n    total: z.number(),\n    percentage: z.number(),\n  }),\n  process_memory: z.object({\n    used: z.number(),\n    total: z.number(),\n    percentage: z.number(),\n  }).optional(),\n  uptime: z.number(),\n  system_uptime: z.number().optional(),\n  platform: z.string().optional(),\n  arch: z.string().optional(),\n  training: z.object({\n    active: z.number(),\n    total: z.number(),\n    completed: z.number(),\n  }).optional(),\n  timestamp: z.string(),\n})\n\nexport const TrainingSessionSchema = z.object({\n  id: z.union([z.string(), z.number()]),\n  name: z.string(),\n  type: z.string(),\n  status: z.string(),\n  accuracy: z.number(),\n  loss: z.number(),\n  epochs: z.number(),\n  current_epoch: z.number(),\n  progress: z.number(),\n  dataset_id: z.union([z.string(), z.number()]),\n  estimated_time: z.number(),\n  learning_rate: z.number(),\n  batch_size: z.number(),\n  created_at: z.string(),\n  updated_at: z.string(),\n  metrics_history: z.array(z.object({\n    epoch: z.number(),\n    accuracy: z.number(),\n    loss: z.number(),\n    timestamp: z.string(),\n  })),\n})\n\nexport const DatasetSchema = z.object({\n  id: z.union([z.string(), z.number()]),\n  name: z.string(),\n  source: z.string(),\n  samples: z.number(),\n  size_mb: z.number(),\n  size: z.number().optional(), // Alias from controller\n  records: z.number().optional(), // Alias from controller\n  status: z.string(),\n  type: z.string().optional(),\n  created_at: z.string(),\n  last_used: z.string().optional(),\n  description: z.string().optional(),\n})\n\nexport const HealthSchema = z.object({\n  status: z.string(),\n  database: z.string().optional(),\n  uptime: z.number().optional(),\n  memory: z.object({\n    used: z.number(),\n    total: z.number(),\n    percentage: z.number(),\n  }).optional(),\n  cpu: z.number().optional(),\n  timestamp: z.string().optional(),\n  beacon: z.string().optional(),\n})\n\nexport type SystemMetrics = z.infer<typeof SystemMetricsSchema>\nexport type TrainingSession = z.infer<typeof TrainingSessionSchema>\nexport type Dataset = z.infer<typeof DatasetSchema>\nexport type Health = z.infer<typeof HealthSchema>\n\nasync function getCsrf() {\n  try {\n    const r = await fetch(`${API_BASE}/csrf-token`, { credentials: 'include' })\n    if (r.ok) {\n      const j = await r.json()\n      csrf = j?.token || ''\n    }\n  } catch (error) {\n    // Ignore CSRF errors\n  }\n}\n\nasync function request<T>(path: string, init: RequestInit = {}): Promise<T> {\n  const token = localStorage.getItem('token') || ''\n  const headers: Record<string, string> = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    ...(init.headers as any),\n  }\n  if (token) headers.Authorization = `Bearer ${token}`\n  if (init.method && init.method !== 'GET') headers['X-CSRF-Token'] = csrf\n\n  const url = path.startsWith('/api') || path.startsWith('http')\n    ? path\n    : join(API_BASE, path);\n  \n  let res = await fetch(url, { ...init, headers, credentials: 'include' })\n  if (res.status === 403) {\n    await getCsrf()\n    headers['X-CSRF-Token'] = csrf\n    res = await fetch(url, { ...init, headers, credentials: 'include' })\n  }\n  if (!res.ok) {\n    const text = await res.text().catch(() => '');\n    throw new Error(`HTTP ${res.status} on ${url}: ${text || res.statusText}`);\n  }\n  return res.json()\n}\n\nasync function requestWithSchema<T>(\n  path: string, \n  schema: z.ZodSchema<T>, \n  init: RequestInit = {}\n): Promise<T> {\n  try {\n    const data = await request(path, init)\n    return schema.parse(data)\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      console.error(`API Schema validation error for ${path}:`, error.issues)\n      throw new Error(`Invalid API response format for ${path}`)\n    }\n    throw error\n  }\n}\n\nexport const API = {\n  // Health check\n  health: (): Promise<Health> => requestWithSchema('/health', HealthSchema),\n  \n  // System monitoring\n  monitoring: (): Promise<SystemMetrics> => requestWithSchema('/monitoring', SystemMetricsSchema),\n  systemStats: (): Promise<SystemMetrics> => requestWithSchema('/monitoring', SystemMetricsSchema),\n  \n  // Models and training\n  models: (): Promise<TrainingSession[]> => requestWithSchema('/models', z.object({\n    models: z.array(TrainingSessionSchema),\n    pagination: z.object({\n      page: z.number(),\n      limit: z.number(),\n      total: z.number(),\n      pages: z.number(),\n    })\n  })).then(data => data.models),\n  getModels: (): Promise<TrainingSession[]> => requestWithSchema('/models', z.object({\n    models: z.array(TrainingSessionSchema),\n    pagination: z.object({\n      page: z.number(),\n      limit: z.number(),\n      total: z.number(),\n      pages: z.number(),\n    })\n  })).then(data => data.models),\n  getModel: (id: string | number): Promise<TrainingSession> => requestWithSchema(`/models/${id}`, TrainingSessionSchema),\n  createModel: (data: any) => request('/models', { method: 'POST', body: JSON.stringify(data) }),\n  startTraining: (id: string | number, body?: any) => request(`/models/${id}/start`, { method: 'POST', body: body ? JSON.stringify(body) : undefined }),\n  pauseTraining: (id: string | number) => request(`/models/${id}/pause`, { method: 'POST' }),\n  stopTraining: (id: string | number) => request(`/models/${id}/stop`, { method: 'POST' }),\n  resumeTraining: (id: string | number) => request(`/models/${id}/resume`, { method: 'POST' }),\n  \n  // Datasets\n  datasets: (): Promise<Dataset[]> => requestWithSchema('/datasets', z.object({\n    datasets: z.array(DatasetSchema),\n    pagination: z.object({\n      page: z.number(),\n      limit: z.number(),\n      total: z.number(),\n      pages: z.number(),\n    })\n  })).then(data => data.datasets),\n  getDatasets: (): Promise<Dataset[]> => requestWithSchema('/datasets', z.object({\n    datasets: z.array(DatasetSchema),\n    pagination: z.object({\n      page: z.number(),\n      limit: z.number(),\n      total: z.number(),\n      pages: z.number(),\n    })\n  })).then(data => data.datasets.map((d: any) => ({\n    ...d,\n    sizeMB: typeof d.size === 'number' ? d.size : (typeof d.size_mb === 'number' ? d.size_mb : undefined),\n  }))),\n  getDataset: (id: string | number): Promise<Dataset> => requestWithSchema(`/datasets/${id}`, DatasetSchema),\n  downloadDataset: (id: string | number) => request(`/datasets/${id}/download`, { method: 'POST' }),\n  \n  // Logs (fallback to raw request since schema varies)\n  logs: (params?: { page?: number; limit?: number }) => {\n    const query = params ? `?${new URLSearchParams(params as any).toString()}` : ''\n    return request(`/logs${query}`)\n  },\n  getLogs: (params?: { page?: number; limit?: number }) => {\n    const query = params ? `?${new URLSearchParams(params as any).toString()}` : ''\n    return request(`/logs${query}`)\n  },\n  \n  // Additional API methods\n  getAnalytics: () => request('/analytics'),\n  getSystemMetrics: (): Promise<SystemMetrics> => requestWithSchema('/monitoring', SystemMetricsSchema),\n  getSettings: () => request('/settings'),\n  updateSettings: (settings: any) => request('/settings', { method: 'PUT', body: JSON.stringify(settings) }),\n  \n  // Model training methods\n  trainModel: (id: string, config?: any) => request(`/models/${id}/train`, { method: 'POST', body: config ? JSON.stringify(config) : undefined }),\n  deleteModel: (id: string) => request(`/models/${id}`, { method: 'DELETE' }),\n}\n\nexport async function bootstrapClient() {\n  await getCsrf()\n}\n\n// Export API as apiClient for backward compatibility\nexport const apiClient = API;","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { API } from '../services/api';\nimport { WSConnectionStatus } from '../lib/ws-events';\n\ninterface HealthCheck {\n  timestamp: number;\n  status: 'online' | 'offline';\n  responseTime?: number;\n  error?: string;\n}\n\ninterface SystemContextType {\n  status: 'online' | 'offline';\n  connectionStatus: WSConnectionStatus;\n  healthHistory: HealthCheck[];\n  lastHealthCheck: HealthCheck | null;\n  setStatus: (status: 'online' | 'offline') => void;\n  setConnectionStatus: (status: WSConnectionStatus) => void;\n  addHealthCheck: (check: HealthCheck) => void;\n  clearHealthHistory: () => void;\n}\n\nconst SystemContext = createContext<SystemContextType | undefined>(undefined);\n\ninterface SystemProviderProps {\n  children: ReactNode;\n}\n\nfunction SystemProvider({ children }: SystemProviderProps) {\n  const [status, setStatus] = useState<'online' | 'offline'>('online');\n  const [connectionStatus, setConnectionStatus] = useState<WSConnectionStatus>('disconnected');\n  const [healthHistory, setHealthHistory] = useState<HealthCheck[]>([]);\n  const [lastHealthCheck, setLastHealthCheck] = useState<HealthCheck | null>(null);\n\n  const addHealthCheck = (check: HealthCheck) => {\n    setLastHealthCheck(check);\n    setHealthHistory(prev => {\n      const newHistory = [check, ...prev].slice(0, 10); // Keep last 10 checks\n      return newHistory;\n    });\n  };\n\n  const clearHealthHistory = () => {\n    setHealthHistory([]);\n    setLastHealthCheck(null);\n  };\n\n  // Health check interval\n  useEffect(() => {\n    const checkHealth = async () => {\n      const startTime = Date.now();\n      try {\n        await API.health();\n        const responseTime = Date.now() - startTime;\n        const check: HealthCheck = {\n          timestamp: Date.now(),\n          status: 'online',\n          responseTime\n        };\n        setStatus('online');\n        addHealthCheck(check);\n      } catch (error) {\n        const check: HealthCheck = {\n          timestamp: Date.now(),\n          status: 'offline',\n          error: error instanceof Error ? error.message : 'Unknown error'\n        };\n        setStatus('offline');\n        addHealthCheck(check);\n      }\n    };\n\n    // Initial check\n    checkHealth();\n\n    // Set up interval\n    const healthInterval = setInterval(checkHealth, 30000); // Every 30 seconds\n\n    return () => {\n      clearInterval(healthInterval);\n    };\n  }, []);\n\n  const value: SystemContextType = {\n    status,\n    connectionStatus,\n    healthHistory,\n    lastHealthCheck,\n    setStatus,\n    setConnectionStatus,\n    addHealthCheck,\n    clearHealthHistory\n  };\n\n  return (\n    <SystemContext.Provider value={value}>\n      {children}\n    </SystemContext.Provider>\n  );\n}\n\nexport function useSystem() {\n  const context = useContext(SystemContext);\n  if (!context) {\n    throw new Error('useSystem must be used within a SystemProvider');\n  }\n  return context;\n}\n\n// System status hook for components\nexport function useSystemStatus() {\n  const { status, connectionStatus, lastHealthCheck, healthHistory } = useSystem();\n  \n  const getStatusColor = () => {\n    if (status === 'offline' || connectionStatus === 'error') return 'red';\n    if (connectionStatus === 'connecting') return 'yellow';\n    return 'green';\n  };\n\n  const getStatusText = () => {\n    if (status === 'offline') return 'آفلاین';\n    if (connectionStatus === 'connecting') return 'در حال اتصال';\n    if (connectionStatus === 'error') return 'خطا در اتصال';\n    return 'آنلاین';\n  };\n\n  const getAverageResponseTime = () => {\n    const onlineChecks = healthHistory.filter(check => check.status === 'online' && check.responseTime);\n    if (onlineChecks.length === 0) return null;\n    \n    const totalTime = onlineChecks.reduce((sum, check) => sum + (check.responseTime || 0), 0);\n    return Math.round(totalTime / onlineChecks.length);\n  };\n\n  return {\n    status,\n    connectionStatus,\n    lastHealthCheck,\n    healthHistory,\n    statusColor: getStatusColor(),\n    statusText: getStatusText(),\n    averageResponseTime: getAverageResponseTime(),\n    isHealthy: status === 'online' && connectionStatus === 'connected'\n  };\n}\n\n// Named export for stable API\nexport { SystemProvider };\n\n// Default export for Fast Refresh compatibility\nexport default SystemProvider;\n","import React, { useState, useEffect, createContext, useContext } from 'react';\nimport { Card, CardContent } from './ui/Card';\nimport { Button } from './ui/Button';\nimport { Badge } from './ui/Badge';\nimport { \n  CheckCircle, \n  AlertTriangle, \n  Info, \n  X, \n  Bell, \n  BellOff,\n  Settings,\n  Zap,\n  Brain,\n  Database,\n  Activity\n} from 'lucide-react';\n\nexport interface Notification {\n  id: string;\n  type: 'success' | 'warning' | 'error' | 'info';\n  title: string;\n  message: string;\n  timestamp: Date;\n  read: boolean;\n  category: 'system' | 'training' | 'model' | 'dataset' | 'user';\n  action?: {\n    label: string;\n    onClick: () => void;\n  };\n}\n\ninterface NotificationContextType {\n  notifications: Notification[];\n  addNotification: (notification: Omit<Notification, 'id' | 'timestamp' | 'read'>) => void;\n  markAsRead: (id: string) => void;\n  markAllAsRead: () => void;\n  removeNotification: (id: string) => void;\n  clearAll: () => void;\n  unreadCount: number;\n}\n\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined);\n\nexport const useNotifications = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotifications must be used within a NotificationProvider');\n  }\n  return context;\n};\n\ninterface NotificationProviderProps {\n  children: React.ReactNode;\n}\n\nexport function NotificationProvider({ children }: NotificationProviderProps) {\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n\n  const addNotification = (notification: Omit<Notification, 'id' | 'timestamp' | 'read'>) => {\n    const newNotification: Notification = {\n      ...notification,\n      id: Date.now().toString() + Math.random().toString(36).substr(2, 9),\n      timestamp: new Date(),\n      read: false,\n    };\n\n    setNotifications(prev => [newNotification, ...prev.slice(0, 49)]); // Keep last 50 notifications\n  };\n\n  const markAsRead = (id: string) => {\n    setNotifications(prev => \n      prev.map(notification => \n        notification.id === id ? { ...notification, read: true } : notification\n      )\n    );\n  };\n\n  const markAllAsRead = () => {\n    setNotifications(prev => \n      prev.map(notification => ({ ...notification, read: true }))\n    );\n  };\n\n  const removeNotification = (id: string) => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n\n  const clearAll = () => {\n    setNotifications([]);\n  };\n\n  const unreadCount = notifications.filter(n => !n.read).length;\n\n  return (\n    <NotificationContext.Provider value={{\n      notifications,\n      addNotification,\n      markAsRead,\n      markAllAsRead,\n      removeNotification,\n      clearAll,\n      unreadCount,\n    }}>\n      {children}\n    </NotificationContext.Provider>\n  );\n}\n\ninterface NotificationBellProps {\n  className?: string;\n}\n\nexport function NotificationBell({ className = '' }: NotificationBellProps) {\n  const { unreadCount, notifications } = useNotifications();\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className={`relative ${className}`}>\n      <Button\n        variant=\"ghost\"\n        size=\"sm\"\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"relative\"\n      >\n        {unreadCount > 0 ? (\n          <Bell className=\"h-5 w-5\" />\n        ) : (\n          <BellOff className=\"h-5 w-5\" />\n        )}\n        {unreadCount > 0 && (\n          <Badge \n            variant=\"destructive\" \n            className=\"absolute -top-1 -right-1 h-5 w-5 flex items-center justify-center p-0 text-xs\"\n          >\n            {unreadCount > 99 ? '99+' : unreadCount}\n          </Badge>\n        )}\n      </Button>\n\n      {isOpen && (\n        <div className=\"absolute top-full right-0 mt-2 w-80 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-50\">\n          <NotificationPanel onClose={() => setIsOpen(false)} />\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface NotificationPanelProps {\n  onClose: () => void;\n}\n\nfunction NotificationPanel({ onClose }: NotificationPanelProps) {\n  const { \n    notifications, \n    markAsRead, \n    markAllAsRead, \n    removeNotification, \n    clearAll, \n    unreadCount \n  } = useNotifications();\n\n  const getIcon = (type: Notification['type']) => {\n    switch (type) {\n      case 'success': return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case 'warning': return <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />;\n      case 'error': return <AlertTriangle className=\"h-4 w-4 text-red-500\" />;\n      case 'info': return <Info className=\"h-4 w-4 text-blue-500\" />;\n    }\n  };\n\n  const getCategoryIcon = (category: Notification['category']) => {\n    switch (category) {\n      case 'system': return <Settings className=\"h-3 w-3\" />;\n      case 'training': return <Activity className=\"h-3 w-3\" />;\n      case 'model': return <Brain className=\"h-3 w-3\" />;\n      case 'dataset': return <Database className=\"h-3 w-3\" />;\n      case 'user': return <Zap className=\"h-3 w-3\" />;\n    }\n  };\n\n  const formatTime = (timestamp: Date) => {\n    const now = new Date();\n    const diff = now.getTime() - timestamp.getTime();\n    const minutes = Math.floor(diff / 60000);\n    const hours = Math.floor(diff / 3600000);\n    const days = Math.floor(diff / 86400000);\n\n    if (days > 0) return `${days} روز پیش`;\n    if (hours > 0) return `${hours} ساعت پیش`;\n    if (minutes > 0) return `${minutes} دقیقه پیش`;\n    return 'همین الان';\n  };\n\n  return (\n    <div className=\"max-h-96 overflow-hidden\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"font-medium text-gray-900 dark:text-gray-100\">\n            اعلان‌ها\n            {unreadCount > 0 && (\n              <Badge variant=\"secondary\" className=\"mr-2\">\n                {unreadCount} جدید\n              </Badge>\n            )}\n          </h3>\n          <div className=\"flex items-center gap-2\">\n            {unreadCount > 0 && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={markAllAsRead}\n                className=\"text-xs\"\n              >\n                همه را خوانده شده علامت‌گذاری کن\n              </Button>\n            )}\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={onClose}\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Notifications List */}\n      <div className=\"max-h-64 overflow-y-auto\">\n        {notifications.length === 0 ? (\n          <div className=\"p-4 text-center text-gray-500 dark:text-gray-400\">\n            <BellOff className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n            <p className=\"text-sm\">هیچ اعلانی وجود ندارد</p>\n          </div>\n        ) : (\n          notifications.slice(0, 10).map((notification) => (\n            <div\n              key={notification.id}\n              className={`p-4 border-b border-gray-100 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors ${\n                !notification.read ? 'bg-blue-50 dark:bg-blue-900/20' : ''\n              }`}\n            >\n              <div className=\"flex items-start gap-3\">\n                <div className=\"flex-shrink-0 mt-0.5\">\n                  {getIcon(notification.type)}\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"flex items-center gap-2 mb-1\">\n                    <h4 className=\"text-sm font-medium text-gray-900 dark:text-gray-100 truncate\">\n                      {notification.title}\n                    </h4>\n                    <div className=\"flex items-center gap-1\">\n                      {getCategoryIcon(notification.category)}\n                      {!notification.read && (\n                        <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n                      )}\n                    </div>\n                  </div>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\n                    {notification.message}\n                  </p>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-xs text-gray-500 dark:text-gray-500\">\n                      {formatTime(notification.timestamp)}\n                    </span>\n                    <div className=\"flex items-center gap-1\">\n                      {notification.action && (\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={notification.action.onClick}\n                          className=\"text-xs h-6 px-2\"\n                        >\n                          {notification.action.label}\n                        </Button>\n                      )}\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => removeNotification(notification.id)}\n                        className=\"text-xs h-6 px-2 text-gray-400 hover:text-red-500\"\n                      >\n                        <X className=\"h-3 w-3\" />\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n\n      {/* Footer */}\n      {notifications.length > 0 && (\n        <div className=\"p-3 border-t border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center justify-between\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={clearAll}\n              className=\"text-xs text-red-500 hover:text-red-600\"\n            >\n              پاک کردن همه\n            </Button>\n            <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n              {notifications.length} اعلان\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Hook for easy notification creation\nexport const useNotificationActions = () => {\n  const { addNotification } = useNotifications();\n\n  const notifySuccess = (title: string, message: string, category: Notification['category'] = 'system') => {\n    addNotification({ type: 'success', title, message, category });\n  };\n\n  const notifyError = (title: string, message: string, category: Notification['category'] = 'system') => {\n    addNotification({ type: 'error', title, message, category });\n  };\n\n  const notifyWarning = (title: string, message: string, category: Notification['category'] = 'system') => {\n    addNotification({ type: 'warning', title, message, category });\n  };\n\n  const notifyInfo = (title: string, message: string, category: Notification['category'] = 'system') => {\n    addNotification({ type: 'info', title, message, category });\n  };\n\n  return {\n    notifySuccess,\n    notifyError,\n    notifyWarning,\n    notifyInfo,\n  };\n};\n","import './services/reliability-integration';\nimport React, { Suspense, lazy } from 'react'\nimport { Routes, Route, Navigate } from 'react-router-dom'\nimport { EnhancedAppLayout } from './components/layout/EnhancedAppLayout'\nimport { EnhancedLandingPage } from './components/EnhancedLandingPage'\nimport { ErrorBoundary } from './components/ErrorBoundary'\nimport { ToastProvider } from './components/ui/Toast'\nimport { SystemProvider } from './context/SystemContext'\nimport { NotificationProvider } from './components/NotificationSystem'\nimport { AuthProvider } from './contexts/AuthContext'\n\nconst lazyCompat = <T extends Record<string, any>>(imp: () => Promise<T>, key: string) =>\n  lazy(async () => { const m = await imp(); return { default: m.default ?? m[key] } })\n\nconst Overview           = lazyCompat(() => import('./components/Overview'), 'Overview')\nconst DashboardAdvanced  = lazyCompat(() => import('./components/EnhancedDashboard'), 'default')\nconst UltimateDashboard  = lazyCompat(() => import('./components/UltimatePersianDashboard'), 'default')\nconst AnalyticsPage      = lazyCompat(() => import('./components/AnalyticsPage'), 'AnalyticsPage')\nconst DataPage           = lazyCompat(() => import('./components/DataPage'), 'DataPage')\nconst ModelsPage         = lazyCompat(() => import('./components/ModelsPage'), 'ModelsPage')\nconst MonitoringPage     = lazyCompat(() => import('./components/MonitoringPage'), 'MonitoringPage')\nconst LogsPage           = lazyCompat(() => import('./components/LogsPage'), 'LogsPage')\nconst SettingsPage       = lazyCompat(() => import('./components/SettingsPage'), 'SettingsPage')\nconst TeamPage           = lazyCompat(() => import('./components/TeamPage'), 'TeamPage')\nconst TrainingManagement = lazyCompat(() => import('./components/TrainingManagement'), 'TrainingManagement')\nconst ProjectDownloader  = lazyCompat(() => import('./components/ProjectDownloader'), 'ProjectDownloader')\nconst DatasetGallery     = lazyCompat(() => import('./components/DatasetGallery'), 'DatasetGallery')\n\nfunction AppLoading() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-900 to-slate-800\" dir=\"rtl\">\n      <div className=\"text-center space-y-4\">\n        <div className=\"w-16 h-16 rounded-full border-4 border-blue-500 border-t-transparent animate-spin mx-auto\" />\n        <div className=\"text-white font-persian text-lg\">\n          در حال بارگذاری سیستم هوش مصنوعی حقوقی...\n        </div>\n        <div className=\"text-slate-400 text-sm\">\n          لطفاً صبر کنید\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default function App() {\n  return (\n    <ErrorBoundary>\n      <AuthProvider>\n        <SystemProvider>\n          <NotificationProvider>\n            <ToastProvider>\n              <Suspense fallback={<AppLoading />}>\n                <Routes>\n                <Route path=\"/\" element={<EnhancedLandingPage />} />\n                <Route element={<EnhancedAppLayout />}>\n                  <Route path=\"/overview\" element={<Overview />} />\n                  <Route path=\"/dashboard\" element={<DashboardAdvanced />} />\n                  <Route path=\"/dashboard-advanced\" element={<DashboardAdvanced />} />\n                  <Route path=\"/dashboard-ultimate\" element={<UltimateDashboard />} />\n                  <Route path=\"/analytics\" element={<AnalyticsPage />} />\n                  <Route path=\"/data\" element={<DataPage />} />\n                  <Route path=\"/data-gallery\" element={<DatasetGallery />} />\n                  <Route path=\"/logs\" element={<LogsPage />} />\n                  <Route path=\"/models\" element={<ModelsPage />} />\n                  <Route path=\"/models/:category\" element={<ModelsPage />} />\n                  <Route path=\"/monitoring\" element={<MonitoringPage />} />\n                  <Route path=\"/training\" element={<TrainingManagement />} />\n                  <Route path=\"/team\" element={<TeamPage />} />\n                  <Route path=\"/settings\" element={<SettingsPage />} />\n                  <Route path=\"/download\" element={<ProjectDownloader />} />\n                  <Route path=\"/legal-docs\" element={<DataPage />} />\n                  <Route path=\"/export\" element={<ProjectDownloader />} />\n                  <Route path=\"/import\" element={<DataPage />} />\n                </Route>\n                <Route path=\"*\" element={<Navigate to=\"/overview\" replace />} />\n                </Routes>\n              </Suspense>\n            </ToastProvider>\n          </NotificationProvider>\n        </SystemProvider>\n      </AuthProvider>\n    </ErrorBoundary>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\nimport { ErrorBoundary } from './components/ErrorBoundary';\nimport App from './App';\n\n// Import all CSS files in the correct order\nimport './index.css';\nimport './styles/animations.css';\nimport './styles/components.css';\nimport './styles/theme.css';\n\nconst basename = (import.meta as any).env.BASE_URL || '/newboltailearn/';\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <HashRouter \n      basename={basename}\n      future={{\n        v7_startTransition: true,\n        v7_relativeSplatPath: true\n      }}\n    >\n      <ErrorBoundary>\n        <App />\n      </ErrorBoundary>\n    </HashRouter>\n  </React.StrictMode>\n);"],"file":"assets/index-izy1IMjv.js"}
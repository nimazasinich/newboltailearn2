{"version":3,"mappings":"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","names":["Action","m","require$$0","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","client","createRoot","hydrateRoot","createHashHistory","options","getLocation","createHref","validateLocation","window","document","defaultView","v5Compat","globalHistory","history","action","Pop","listener","index","getIndex","replaceState","state","idx","handlePop","nextIndex","delta","location","createURL","to","base","origin","href","createPath","replace","invariant","URL","[object Object]","fn","Error","addEventListener","removeEventListener","url","pathname","search","hash","push","Push","createLocation","historyState","getHistoryState","pushState","error","DOMException","name","Replace","go","n","getUrlBasedHistory","parsePath","substr","startsWith","usr","querySelector","getAttribute","hashIndex","indexOf","slice","warning","charAt","JSON","stringify","value","message","cond","console","warn","e","current","Math","random","toString","_ref","path","parsedPath","searchIndex","ResultType","matchRoutes","routes","locationArg","basename","allowPartial","stripBasename","branches","flattenRoutes","parentsMeta","parentPath","flattenRoute","route","relativePath","meta","caseSensitive","childrenIndex","joinPaths","routesMeta","concat","children","score","computeScore","forEach","_route$path","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","join","result","map","subpath","sort","a","b","every","compareIndexes","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","matchRoutesImpl","paramRe","isSplat","s","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","memo","splatValue","v","decodeURIComponent","toLowerCase","startIndex","nextChar","getInvalidPathError","char","field","dest","getResolveToMatches","v7_relativeSplatPath","pathMatches","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","shift","fromPathname","pop","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","validMutationMethodsArr","Set","validRequestMethodsArr","DataRouterContext","React.createContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","React.useContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","cb","static","React.useLayoutEffect","useNavigate","router","hookName","ctx","useDataRouterContext","DataRouterHook","UseNavigateStable","id","useCurrentRouteId","DataRouterStateHook","activeRef","React.useRef","React.useCallback","navigate","fromRouteId","useNavigateStable","dataRouterContext","future","navigator","routePathnamesJson","UNSAFE_getResolveToMatches","parse","relative","useNavigateUnstable","OutletContext","useResolvedPath","_temp2","React.useMemo","useRoutes","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_dataRouterState","_future","errors","v7_partialHydration","initialized","errorIndex","findIndex","min","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","needsToRunLoader","loader","lazy","reduceRight","shouldRenderHydrateFallback","errorElement","defaultErrorElement","alreadyWarned$1","getChildren","Component","React.createElement","element","RenderedRoute","routeContext","ErrorBoundary","RenderErrorBoundary","revalidation","component","_renderMatches","encodeLocation","Provider","navigationType","useRoutesImpl","DefaultErrorComponent","_state$errors","useDataRouterState","routeId","useRouteError","status","statusText","internal","isRouteErrorResponse","stack","preStyles","padding","backgroundColor","React.Fragment","style","fontStyle","React.Component","props","super","errorInfo","staticContext","_deepestRenderedBoundaryId","useRouteContext","thisRoute","Navigate","_ref4","isStatic","jsonPath","React.useEffect","Outlet","context","useOutlet","Route","_props","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","React.Children","React.isValidElement","treePath","type","hasErrorBoundary","shouldRevalidate","handle","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","Promise","_excluded","_excluded2","__reactRouterVersion","ViewTransitionContext","isTransitioning","startTransitionImpl","React","HashRouter","historyRef","setStateImpl","React.useState","v7_startTransition","setState","newState","listen","UNSAFE_logV6DeprecationWarnings","renderFuture","isBrowser","createElement","ABSOLUTE_URL_REGEX","Link","React.forwardRef","_ref7","ref","absoluteHref","onClick","reloadDocument","preventScrollReset","viewTransition","UNSAFE_NavigationContext","isExternal","currentUrl","targetUrl","protocol","_temp","joinedPathname","useHref","internalOnClick","replaceProp","event","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","preventDefault","useLinkClickHandler","defaultPrevented","NavLink","_ref8","aria-current","ariaCurrentProp","className","classNameProp","styleProp","routerState","UNSAFE_DataRouterStateContext","opts","vtContext","UNSAFE_DataRouterContext","useViewTransitionState","currentPath","currentLocation","nextPath","nextLocation","nextLocationPathname","navigation","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","Boolean","cn","inputs","clsx","Button","variant","size","loading","asChild","disabled","classes","default","destructive","outline","secondary","ghost","link","sm","lg","icon","isValidElement","childProps","cloneElement","aria-disabled","jsxs","jsx","Card","CardHeader","CardTitle","CardContent","__publicField","hasError","errorId","copied","async","errorReport","Date","toLocaleString","define_process_env_default","REACT_APP_VERSION","componentStack","userAgent","trim","clipboard","writeText","setTimeout","err","now","_b","_a","onError","fallback","isDevelopment","dir","AlertTriangle","handleRetry","RefreshCw","handleGoHome","Home","handleCopyError","Fragment","CheckCircle","Copy","rel","ModernSidebar","collapsed","setCollapsed","useState","expandedGroups","setExpandedGroups","systemStatus","setSystemStatus","models_training","cpu_usage","memory_usage","group","label","items","description","BarChart3","badge","Brain","Scale","Gavel","Briefcase","Shield","Database","FileText","TrendingUp","Monitor","Activity","Cpu","Download","Upload","Users","Settings","useEffect","interval","setInterval","prev","floor","clearInterval","motion","div","initial","x","animate","transition","duration","stiffness","layout","AnimatePresence","opacity","width","exit","whileHover","scale","whileTap","rotate","ChevronRight","height","section","sectionIndex","y","delay","toggleGroup","g","ChevronDown","item","itemIndex","layoutId","span","child","childIndex","Dot","repeat","Infinity","Sparkles","EnhancedAppLayout","searchQuery","setSearchQuery","notifications","setNotifications","showNotifications","setShowNotifications","showUserMenu","setShowUserMenu","connectionStatus","setConnectionStatus","backend","websocket","database","theme","setTheme","getPageTitle","/overview","/dashboard","/models","/datasets","/analytics","/monitoring","/logs","/training","/settings","/team","checkConnections","backendResponse","fetch","catch","wsTest","resolve","ws","WebSocket","onopen","close","onerror","ok","title","timestamp","read","unreadNotifications","getNotificationIcon","header","Search","placeholder","onChange","conn","Wifi","WifiOff","Bell","notification","markAsRead","toLocaleTimeString","User","Globe","LogOut","danger","backgroundImage","backgroundSize","footer","EnhancedLandingPage","stats","setStats","models","datasets","accuracy","documents","isLoading","setIsLoading","finalStats","handleStart","features","color","achievements","suffix","damping","repeatType","ease","Zap","Play","ArrowLeft","achievement","feature","desc","Heart","tech","ToastContext","createContext","useToast","useContext","ToastProvider","toasts","setToasts","addToast","useCallback","toast","newToast","removeToast","clearToasts","ToastContainer","onRemove","ToastItem","Icon","success","XCircle","AlertCircle","info","Info","animationDelay","transform","aria-label","X","animation","$constructor","initializer","init","inst","def","defineProperty","_zod","enumerable","traits","add","k","constr","Parent","Definition","deferred","Symbol","hasInstance","has","textContent","head","appendChild","$ZodAsyncError","$ZodEncodeError","globalConfig","config","newConfig","jsonStringifyReplacer","cached","getter","nullish","input","cleanRegex","start","EVALUATING","defineLazy","object","configurable","assignProp","prop","writable","mergeDefs","defs","mergedDescriptors","descriptors","getOwnPropertyDescriptors","defineProperties","esc","str","captureStackTrace","_args","isObject","data","Array","isArray","allowsEval","Function","isPlainObject","o","ctor","constructor","prot","shallowClone","propertyKeyTypes","escapeRegex","clone","cl","parent","normalizeParams","_params","NUMBER_FORMAT_RANGES","safeint","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","int32","uint32","float32","float64","MAX_VALUE","aborted","issues","continue","prefixIssues","iss","unshift","unwrapMessage","finalizeIssue","full","_c","_d","_e","customError","_f","localeError","reportInput","getLengthableOrigin","issue","args","code","util.jsonStringifyReplacer","$ZodError","$ZodRealError","_parse","_Err","schema","_ctx","run","core.$ZodAsyncError","Err","util.finalizeIssue","core.config","util.captureStackTrace","callee","_parseAsync","_safeParse","errors.$ZodError","safeParse","errors.$ZodRealError","_safeParseAsync","safeParseAsync","_encode","direction","_decode","_encodeAsync","_decodeAsync","_safeEncode","_safeDecode","_safeEncodeAsync","_safeDecodeAsync","cuid","cuid2","ulid","xid","ksuid","nanoid","guid","uuid","version","email","ipv4","ipv6","cidrv4","cidrv6","base64","base64url","hostname","e164","dateSource","date","timeSource","hhmm","precision","integer","number","lowercase","uppercase","$ZodCheck","core.$constructor","onattach","numericOriginMap","bigint","$ZodCheckLessThan","bag","curr","inclusive","maximum","exclusiveMaximum","POSITIVE_INFINITY","check","payload","abort","$ZodCheckGreaterThan","minimum","exclusiveMinimum","NEGATIVE_INFINITY","$ZodCheckMultipleOf","multipleOf","BigInt","val","step","valDecCount","stepString","stepDecCount","parseInt","decCount","toFixed","util.floatSafeRemainder","divisor","$ZodCheckNumberFormat","format","isInt","util.NUMBER_FORMAT_RANGES","regexes.integer","isInteger","expected","isSafeInteger","note","$ZodCheckMaxLength","when","util.nullish","util.getLengthableOrigin","$ZodCheckMinLength","$ZodCheckLengthEquals","tooBig","exact","$ZodCheckStringFormat","patterns","lastIndex","$ZodCheckRegex","$ZodCheckLowerCase","regexes.lowercase","$ZodCheckUpperCase","regexes.uppercase","$ZodCheckIncludes","escapedRegex","util.escapeRegex","position","$ZodCheckStartsWith","prefix","$ZodCheckEndsWith","$ZodCheckOverwrite","tx","Doc","content","indent","arg","execution","lines","minIndent","trimStart","dedented","line","major","minor","patch","$ZodType","checks","ch","runChecks","asyncResult","isAborted","util.aborted","currLen","then","handleCanaryResult","canary","checkResult","skipChecks","validate","r","vendor","$ZodString","regex","regexes.string","coerce","String","$ZodStringFormat","checks.$ZodCheckStringFormat","$ZodGUID","regexes.guid","$ZodUUID","v1","v2","v3","v4","v5","v6","v7","v8","regexes.uuid","$ZodEmail","regexes.email","$ZodURL","trimmed","regexes.hostname","normalize","$ZodEmoji","$ZodNanoID","regexes.nanoid","$ZodCUID","regexes.cuid","$ZodCUID2","regexes.cuid2","$ZodULID","regexes.ulid","$ZodXID","regexes.xid","$ZodKSUID","regexes.ksuid","$ZodISODateTime","time","local","offset","timeRegex","regexes.datetime","$ZodISODate","regexes.date","$ZodISOTime","$ZodISODuration","regexes.duration","$ZodIPv4","regexes.ipv4","$ZodIPv6","regexes.ipv6","$ZodCIDRv4","regexes.cidrv4","$ZodCIDRv6","regexes.cidrv6","parts","address","prefixNum","isValidBase64","atob","$ZodBase64","regexes.base64","contentEncoding","$ZodBase64URL","regexes.base64url","c","padEnd","ceil","isValidBase64URL","$ZodE164","regexes.e164","$ZodJWT","token","algorithm","tokensParts","parsedHeader","typ","alg","isValidJWT","$ZodNumber","regexes.number","isNaN","isFinite","received","$ZodNumberFormat","checks.$ZodCheckNumberFormat","$ZodUnknown","$ZodNever","handleArrayResult","final","util.prefixIssues","$ZodArray","proms","all","handlePropertyResult","normalizeDef","shape","okeys","optin","optout","keySet","numKeys","optionalKeys","handleCatchall","unrecognized","_catchall","catchall","t","$ZodObject","getOwnPropertyDescriptor","get","sh","newSh","_normalized","util.cached","util.defineLazy","propValues","values","util.isObject","$ZodObjectJIT","superParse","fastpass","jit","core.globalConfig","jitless","fastEnabled","util.allowsEval","doc","normalized","parseStr","util.esc","write","ids","create","counter","compile","generateFastpass","handleUnionResults","results","nonaborted","$ZodUnion","flatMap","option","p","util.cleanRegex","single","$ZodIntersection","left","right","handleIntersectionResults","merged","mergeValues","valid","util.isPlainObject","bKeys","sharedKeys","newObj","sharedValue","mergeErrorPath","newArray","$ZodEnum","entries","numericValues","util.getEnumValues","valuesSet","util.propertyKeyTypes","$ZodTransform","core.$ZodEncodeError","_out","output","handleOptionalResult","$ZodOptional","innerType","$ZodNullable","$ZodDefault","defaultValue","handleDefaultResult","$ZodPrefault","$ZodNonOptional","handleNonOptionalResult","$ZodCatch","catchValue","$ZodPipe","in","out","handlePipeResult","next","$ZodReadonly","handleReadonlyResult","freeze","$ZodCustom","checks.$ZodCheck","handleRefineResult","_iss","util.issue","$ZodRegistry","_map","WeakMap","_idmap","Map","_meta","set","delete","pm","f","registry","globalRegistry","_guid","Class","util.normalizeParams","_lt","checks.$ZodCheckLessThan","_lte","_gt","checks.$ZodCheckGreaterThan","_gte","_multipleOf","checks.$ZodCheckMultipleOf","_maxLength","checks.$ZodCheckMaxLength","_minLength","checks.$ZodCheckMinLength","_length","checks.$ZodCheckLengthEquals","_overwrite","checks.$ZodCheckOverwrite","_superRefine","_check","addIssue","_issue","fatal","ZodISODateTime","core.$ZodISODateTime","schemas.ZodStringFormat","datetime","core._isoDateTime","ZodISODate","core.$ZodISODate","core._isoDate","ZodISOTime","core.$ZodISOTime","core._isoTime","ZodISODuration","core.$ZodISODuration","core._isoDuration","mapper","_mapper","fieldErrors","_errors","processError","el","core.formatError","flatten","formErrors","sub","core.flattenError","addIssues","isEmpty","ZodError","ZodRealError","parseAsync","encode","decode","encodeAsync","decodeAsync","safeEncode","safeDecode","safeEncodeAsync","safeDecodeAsync","ZodType","core.$ZodType","util.mergeDefs","core.clone","brand","register","reg","parse.parse","parse.safeParse","parse.parseAsync","parse.safeParseAsync","spa","parse.encode","parse.decode","parse.encodeAsync","parse.decodeAsync","parse.safeEncode","parse.safeDecode","parse.safeEncodeAsync","parse.safeDecodeAsync","refine","core._refine","ZodCustom","superRefine","refinement","core._superRefine","overwrite","checks.overwrite","optional","nullable","nonoptional","ZodNonOptional","array","or","union","and","ZodIntersection","pipe","ZodTransform","_default","ZodDefault","util.shallowClone","prefault","ZodPrefault","_catch","ZodCatch","readonly","ZodReadonly","describe","core.globalRegistry","isNullable","_ZodString","core.$ZodString","minLength","maxLength","checks.$ZodCheckRegex","checks.regex","checks.$ZodCheckIncludes","checks.includes","checks.$ZodCheckStartsWith","checks.startsWith","checks.$ZodCheckEndsWith","checks.endsWith","checks.minLength","max","checks.maxLength","checks.length","nonempty","checks.$ZodCheckLowerCase","checks.lowercase","checks.$ZodCheckUpperCase","checks.uppercase","form","checks.normalize","toUpperCase","ZodString","core._email","ZodEmail","core._url","ZodURL","jwt","core._jwt","ZodJWT","emoji","core._emoji","ZodEmoji","core._guid","ZodGUID","core._uuid","ZodUUID","uuidv4","core._uuidv4","uuidv6","core._uuidv6","uuidv7","core._uuidv7","core._nanoid","ZodNanoID","core._cuid","ZodCUID","core._cuid2","ZodCUID2","core._ulid","ZodULID","core._base64","ZodBase64","core._base64url","ZodBase64URL","core._xid","ZodXID","core._ksuid","ZodKSUID","core._ipv4","ZodIPv4","core._ipv6","ZodIPv6","core._cidrv4","ZodCIDRv4","core._cidrv6","ZodCIDRv6","core._e164","ZodE164","iso.datetime","iso.date","iso.time","iso.duration","string","core._string","ZodStringFormat","core.$ZodStringFormat","core.$ZodEmail","core.$ZodGUID","core.$ZodUUID","core.$ZodURL","core.$ZodEmoji","core.$ZodNanoID","core.$ZodCUID","core.$ZodCUID2","core.$ZodULID","core.$ZodXID","core.$ZodKSUID","core.$ZodIPv4","core.$ZodIPv6","core.$ZodCIDRv4","core.$ZodCIDRv6","core.$ZodBase64","core.$ZodBase64URL","core.$ZodE164","core.$ZodJWT","ZodNumber","core.$ZodNumber","gt","checks.gt","gte","checks.gte","lt","checks.lt","lte","checks.lte","int","safe","positive","nonnegative","negative","nonpositive","checks.multipleOf","finite","minValue","maxValue","core._number","ZodNumberFormat","core.$ZodNumberFormat","core._int","ZodUnknown","core.$ZodUnknown","unknown","ZodNever","core.$ZodNever","never","core._never","ZodArray","core.$ZodArray","len","unwrap","core._array","ZodObject","core.$ZodObjectJIT","keyof","fromEntries","ZodEnum","_enum","passthrough","loose","strict","strip","extend","incoming","_shape","util.extend","safeExtend","util.safeExtend","merge","other","util.merge","pick","mask","currDef","newShape","util.pick","omit","util.omit","partial","oldShape","util.partial","ZodOptional","util.required","ZodUnion","core.$ZodUnion","core.$ZodIntersection","core.$ZodEnum","enum","extract","newEntries","exclude","core.$ZodTransform","core.$ZodOptional","ZodNullable","core.$ZodNullable","core.$ZodDefault","removeDefault","core.$ZodPrefault","core.$ZodNonOptional","core.$ZodCatch","removeCatch","ZodPipe","core.$ZodPipe","in_","core.$ZodReadonly","core.$ZodCustom","API_BASE","noTrail","norm","__vite_import_meta_env__","VITE_API_BASE","csrf","SystemMetricsSchema","z.object","cpu","z.number","memory","used","total","percentage","process_memory","uptime","system_uptime","platform","z.string","arch","training","active","completed","TrainingSessionSchema","z.union","loss","epochs","current_epoch","progress","dataset_id","estimated_time","learning_rate","batch_size","created_at","updated_at","metrics_history","z.array","epoch","DatasetSchema","samples","size_mb","records","last_used","HealthSchema","beacon","request","localStorage","getItem","headers","Accept","Content-Type","Authorization","method","res","credentials","j","json","getCsrf","text","requestWithSchema","z.ZodError","API","health","monitoring","systemStats","pagination","page","limit","pages","getModels","getModel","createModel","body","startTraining","pauseTraining","stopTraining","resumeTraining","getDatasets","d","sizeMB","getDataset","downloadDataset","logs","URLSearchParams","getLogs","getAnalytics","getSystemMetrics","getSettings","updateSettings","settings","trainModel","deleteModel","SystemContext","SystemProvider","setStatus","healthHistory","setHealthHistory","lastHealthCheck","setLastHealthCheck","addHealthCheck","checkHealth","startTime","responseTime","healthInterval","clearHealthHistory","NotificationContext","NotificationProvider","unreadCount","addNotification","newNotification","markAllAsRead","removeNotification","clearAll","lazyCompat","imp","Overview","__vitePreload","import","__VITE_PRELOAD__","DashboardAdvanced","AnalyticsPage","DataPage","ModelsPage","MonitoringPage","LogsPage","SettingsPage","TeamPage","TrainingManagement","ProjectDownloader","DatasetGallery","AppLoading","App","Suspense","ReactDOM","getElementById","render","StrictMode"],"ignoreList":[0,1,2,3,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"sources":["../../node_modules/@remix-run/router/dist/router.js","../../node_modules/react-dom/client.js","../../node_modules/react-router/dist/index.js","../../node_modules/react-router-dom/dist/index.js","../../src/utils/cn.ts","../../src/components/ui/Button.tsx","../../src/components/ui/Card.tsx","../../src/components/ErrorBoundary.tsx","../../src/components/layout/ModernSidebar.tsx","../../src/components/layout/EnhancedAppLayout.tsx","../../src/components/EnhancedLandingPage.tsx","../../src/components/ui/Toast.tsx","../../node_modules/zod/v4/core/core.js","../../node_modules/zod/v4/core/util.js","../../node_modules/zod/v4/core/errors.js","../../node_modules/zod/v4/core/parse.js","../../node_modules/zod/v4/core/regexes.js","../../node_modules/zod/v4/core/checks.js","../../node_modules/zod/v4/core/doc.js","../../node_modules/zod/v4/core/versions.js","../../node_modules/zod/v4/core/schemas.js","../../node_modules/zod/v4/core/registries.js","../../node_modules/zod/v4/core/api.js","../../node_modules/zod/v4/classic/iso.js","../../node_modules/zod/v4/classic/errors.js","../../node_modules/zod/v4/classic/parse.js","../../node_modules/zod/v4/classic/schemas.js","../../src/lib/config.ts","../../src/services/api.ts","../../src/context/SystemContext.tsx","../../src/components/NotificationSystem.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @remix-run/router v1.23.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/v6/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial) {\n  if (allowPartial === void 0) {\n    allowPartial = false;\n  }\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/v6/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/v6/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/v6/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n *\n * @deprecated The `json` method is deprecated in favor of returning raw objects.\n * This method will be removed in v7.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass DataWithResponseInit {\n  constructor(data, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data;\n    this.init = init || null;\n  }\n}\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nfunction data(data, init) {\n  return new DataWithResponseInit(data, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n/**\n * @deprecated The `defer` method is deprecated in favor of returning raw\n * objects. This method will be removed in v7.\n */\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = new Set();\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate = undefined;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = undefined;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked, after the url\n            // restoration is also complete.  See:\n            // https://github.com/remix-run/react-router/issues/11613\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Remove any lingering deleted fetchers that have already been removed\n    // from state.fetchers\n    deletedFetchers.forEach(key => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        deletedFetchersKeys.push(key);\n      }\n    });\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      viewTransitionOpts: opts.viewTransitionOpts,\n      flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    } else {\n      // We already called deleteFetcher() on these, can remove them from this\n      // Set now that we've handed the keys off to the data layer\n      deletedFetchersKeys.forEach(key => deletedFetchers.delete(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts != null && opts.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ?\n    // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n    state.matches : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches: updatedMatches || matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: ResultType.error,\n            error: discoverResult.error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", state, request, [actionMatch], matches, null);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(_extends({\n          navigation: loadingNavigation\n        }, actionData !== undefined ? {\n          actionData\n        } : {}), {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = _extends({}, state.errors, errors);\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      matches,\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", state, fetchRequest, [match], requestMatches, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", state, fetchRequest, [match], matches, key);\n    let result = results[match.route.id];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, isNavigation, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true || redirect.response.headers.has(\"X-Remix-Replace\") ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, state, request, matchesToLoad, matches, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties);\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach(m => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, future.v7_relativeSplatPath)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(state, matches, matchesToLoad, fetchersToLoad, request) {\n    let currentMatches = state.matches;\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\"loader\", state, request, matchesToLoad, matches, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.controller) {\n        let results = await callDataStrategy(\"loader\", state, createClientSideRequest(init.history, f.path, f.controller.signal), [f.match], f.matches, f.key);\n        let result = results[f.match.route.id];\n        // Fetcher results are keyed by fetcher key from here on out, not routeId\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    await Promise.all([resolveNavigationDeferredResults(matches, loaderResults, request.signal, currentMatches, state.loaderData), resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    // If this fetcher was previously marked for deletion, unmark it since we\n    // have a new instance\n    if (deletedFetchers.has(key)) {\n      deletedFetchers.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    // If we opted into the flag we can clear this now since we're calling\n    // deleteFetcher() at the end of updateState() and we've already handed the\n    // deleted fetcher keys off to the data layer.\n    // If not, we're eagerly calling deleteFetcher() and we need to keep this\n    // Set populated until the next updateState call, and we'll clear\n    // `deletedFetchers` then\n    if (future.v7_fetcherPersist) {\n      deletedFetchers.delete(key);\n    }\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      deletedFetchers.add(key);\n      if (!future.v7_fetcherPersist) {\n        deleteFetcher(key);\n      }\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!patchRoutesOnNavigationImpl) {\n      return {\n        type: \"success\",\n        matches\n      };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties);\n          }\n        });\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      // Avoid loops if the second pass results in the same partial matches\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, dataStrategy);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(dataStrategy || defaultDataStrategy, type, null, request, matchesToLoad, matches, null, manifest, mapRouteProperties, requestContext);\n    let dataResults = {};\n    await Promise.all(matches.map(async match => {\n      if (!(match.route.id in results)) {\n        return;\n      }\n      let result = results[match.route.id];\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n    }));\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary) {\n  if (includeBoundary === void 0) {\n    includeBoundary = false;\n  }\n  let index = matches.findIndex(m => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);\n  }\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\n  var _childrenToPatch;\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(newRoute => !childrenToPatch.some(existingRoute => isSameRoute(newRoute, existingRoute)));\n  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties, [routeId || \"_\", \"patch\", String(((_childrenToPatch = childrenToPatch) == null ? void 0 : _childrenToPatch.length) || \"0\")], manifest);\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  // Most optimal check is by id\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  // Second is by pathing differences\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children.every((aChild, i) => {\n    var _existingRoute$childr;\n    return (_existingRoute$childr = existingRoute.children) == null ? void 0 : _existingRoute$childr.some(bChild => isSameRoute(aChild, bChild));\n  });\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy(_ref4) {\n  let {\n    matches\n  } = _ref4;\n  let matchesToLoad = matches.filter(m => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  return results.reduce((acc, result, i) => Object.assign(acc, {\n    [matchesToLoad[i].route.id]: result\n  }), {});\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties, requestContext) {\n  let loadRouteDefinitionsPromises = matches.map(m => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties, manifest) : undefined);\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some(m => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve = async handlerOverride => {\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        shouldLoad = true;\n      }\n      return shouldLoad ? callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({\n        type: ResultType.data,\n        result: undefined\n      });\n    };\n    return _extends({}, match, {\n      shouldLoad,\n      resolve\n    });\n  });\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext\n  });\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n  return results;\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadRoutePromise]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      var _result$init3, _result$init4;\n      if (result.data instanceof Error) {\n        var _result$init, _result$init2;\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n          headers: (_result$init2 = result.init) != null && _result$init2.headers ? new Headers(result.init.headers) : undefined\n        };\n      }\n      // Convert thrown data() to ErrorResponse instances\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(((_result$init3 = result.init) == null ? void 0 : _result$init3.status) || 500, undefined, result.data),\n        statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n        headers: (_result$init4 = result.init) != null && _result$init4.headers ? new Headers(result.init.headers) : undefined\n      };\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init5, _result$init6;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init5 = result.init) == null ? void 0 : _result$init5.status,\n      headers: ((_result$init6 = result.init) == null ? void 0 : _result$init6.headers) && new Headers(result.init.headers)\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    var _result$init7, _result$init8;\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: (_result$init7 = result.init) == null ? void 0 : _result$init7.status,\n      headers: (_result$init8 = result.init) != null && _result$init8.headers ? new Headers(result.init.headers) : undefined\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectDataStrategyResultResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveNavigationDeferredResults(matches, results, signal, currentMatches, currentLoaderData) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then(result => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveFetcherDeferredResults(matches, results, revalidatingFetchers) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      routeId,\n      controller\n    } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(controller, \"Expected an AbortController for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, controller.signal, true).then(result => {\n        if (result) {\n          results[key] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, decodePath as UNSAFE_decodePath, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, data, defer, generatePath, getStaticContextFromError, getToPathname, isDataWithResponseInit, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, replace, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * React Router v6.30.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_decodePath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, replace, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/v6/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/v6/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, UNSAFE_decodePath(pathname)), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/v6/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/v6/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/v6/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/v6/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/v6/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _future;\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else if ((_future = future) != null && _future.v7_partialHydration && parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState = dataRouterState) == null ? void 0 : _dataRouterState.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned$1 = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned$1[key]) {\n    alreadyWarned$1[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\nconst alreadyWarned = {};\nfunction warnOnce(key, message) {\n  if (process.env.NODE_ENV !== \"production\" && !alreadyWarned[message]) {\n    alreadyWarned[message] = true;\n    console.warn(message);\n  }\n}\nconst logDeprecation = (flag, msg, link) => warnOnce(flag, \"\\u26A0\\uFE0F React Router Future Flag Warning: \" + msg + \". \" + (\"You can use the `\" + flag + \"` future flag to opt-in early. \") + (\"For more information, see \" + link + \".\"));\nfunction logV6DeprecationWarnings(renderFuture, routerFuture) {\n  if ((renderFuture == null ? void 0 : renderFuture.v7_startTransition) === undefined) {\n    logDeprecation(\"v7_startTransition\", \"React Router will begin wrapping state updates in `React.startTransition` in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_starttransition\");\n  }\n  if ((renderFuture == null ? void 0 : renderFuture.v7_relativeSplatPath) === undefined && (!routerFuture || routerFuture.v7_relativeSplatPath === undefined)) {\n    logDeprecation(\"v7_relativeSplatPath\", \"Relative route resolution within Splat routes is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath\");\n  }\n  if (routerFuture) {\n    if (routerFuture.v7_fetcherPersist === undefined) {\n      logDeprecation(\"v7_fetcherPersist\", \"The persistence behavior of fetchers is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_fetcherpersist\");\n    }\n    if (routerFuture.v7_normalizeFormMethod === undefined) {\n      logDeprecation(\"v7_normalizeFormMethod\", \"Casing of `formMethod` fields is being normalized to uppercase in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_normalizeformmethod\");\n    }\n    if (routerFuture.v7_partialHydration === undefined) {\n      logDeprecation(\"v7_partialHydration\", \"`RouterProvider` hydration behavior is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_partialhydration\");\n    }\n    if (routerFuture.v7_skipActionErrorRevalidation === undefined) {\n      logDeprecation(\"v7_skipActionErrorRevalidation\", \"The revalidation behavior after 4xx/5xx `action` responses is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_skipactionerrorrevalidation\");\n    }\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  React.useEffect(() => logV6DeprecationWarnings(future, router.future), [router, future]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/v6/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/v6/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/v6/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/v6/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/v6/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/v6/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/v6/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.hydrateFallbackElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, logV6DeprecationWarnings as UNSAFE_logV6DeprecationWarnings, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.30.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_logV6DeprecationWarnings, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, replace, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\nexport { UNSAFE_ErrorResponseImpl } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"viewTransition\"];\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"6\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      flushSync: flushSync,\n      viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    let isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  let routerFuture = React.useMemo(() => ({\n    v7_relativeSplatPath: router.future.v7_relativeSplatPath\n  }), [router.future.v7_relativeSplatPath]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future, router.future), [future, router.future]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: routerFuture\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(MemoizedDataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = /*#__PURE__*/React.memo(DataRoutes);\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    viewTransition: viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        flushSync: options.flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        flushSync: options.flushSync,\n        viewTransition: options.viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some(v => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit, useViewTransitionState };\n//# sourceMappingURL=index.js.map\n","import { type ClassValue, clsx } from 'clsx';\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return clsx(inputs);\r\n}","import React from 'react';\r\nimport { cn } from '../../utils/cn';\r\n\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?: 'default' | 'destructive' | 'outline' | 'secondary' | 'ghost' | 'link';\r\n  size?: 'default' | 'sm' | 'lg' | 'icon';\r\n  loading?: boolean;\r\n  asChild?: boolean;\r\n}\r\n\r\nexport function Button({\r\n  className,\r\n  variant = 'default',\r\n  size = 'default',\r\n  loading = false,\r\n  asChild = false,\r\n  children,\r\n  disabled,\r\n  ...props\r\n}: ButtonProps) {\r\n  const baseStyles = 'inline-flex items-center justify-center rounded-xl font-medium transition-all duration-200 ' +\r\n                    'focus:outline-none focus:ring-4 focus:ring-primary-500/20 disabled:pointer-events-none disabled:opacity-50';\r\n  \r\n  const variants = {\r\n    default: 'bg-gradient-to-r from-primary-600 to-primary-700 text-white shadow-lg ' +\r\n             'hover:shadow-xl hover:scale-[1.02] active:scale-[0.98]',\r\n    destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\r\n    outline: 'bg-white/10 backdrop-blur-md border border-white/20 text-slate-700 hover:bg-white/20',\r\n    secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\r\n    ghost: 'text-slate-700 hover:bg-slate-100',\r\n    link: 'text-primary underline-offset-4 hover:underline',\r\n  };\r\n\r\n  const sizes = {\r\n    default: 'h-10 px-4 py-2',\r\n    sm: 'h-9 rounded-md px-3',\r\n    lg: 'h-11 rounded-md px-8',\r\n    icon: 'h-10 w-10',\r\n  };\r\n\r\n  const classes = cn(baseStyles, variants[variant], sizes[size], className);\r\n\r\n  if (asChild && React.isValidElement(children)) {\r\n    const childProps = children.props as any;\r\n    return React.cloneElement(children, {\r\n      ...childProps,\r\n      className: cn(childProps.className, classes),\r\n      ...(disabled && { 'aria-disabled': true }),\r\n      ...props,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className={classes}\r\n      disabled={disabled || loading}\r\n      {...props}\r\n    >\r\n      {loading && (\r\n        <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-current border-t-transparent me-2\" />\r\n      )}\r\n      {children}\r\n    </button>\r\n  );\r\n}","import React from 'react';\r\nimport { cn } from '../../utils/cn';\r\n\r\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {}\r\n\r\nexport function Card({ className, ...props }: CardProps) {\r\n  return (\r\n    <div\r\n      className={cn(\r\n        'bg-white/80 backdrop-blur-sm border border-slate-200/50 rounded-2xl shadow-sm ' +\r\n        'hover:shadow-lg hover:scale-[1.02] hover:border-primary-100 transition-all duration-300',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\ninterface CardHeaderProps extends React.HTMLAttributes<HTMLDivElement> {}\r\n\r\nexport function CardHeader({ className, ...props }: CardHeaderProps) {\r\n  return (\r\n    <div className={cn('flex flex-col space-y-1.5 p-6', className)} {...props} />\r\n  );\r\n}\r\n\r\ninterface CardTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {}\r\n\r\nexport function CardTitle({ className, ...props }: CardTitleProps) {\r\n  return (\r\n    <h3\r\n      className={cn(\r\n        'text-2xl font-semibold leading-none tracking-tight',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\ninterface CardDescriptionProps extends React.HTMLAttributes<HTMLParagraphElement> {}\r\n\r\nexport function CardDescription({ className, ...props }: CardDescriptionProps) {\r\n  return (\r\n    <p\r\n      className={cn('text-sm text-muted-foreground', className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\ninterface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {}\r\n\r\nexport function CardContent({ className, ...props }: CardContentProps) {\r\n  return <div className={cn('p-6 pt-0', className)} {...props} />;\r\n}\r\n\r\ninterface CardFooterProps extends React.HTMLAttributes<HTMLDivElement> {}\r\n\r\nexport function CardFooter({ className, ...props }: CardFooterProps) {\r\n  return (\r\n    <div className={cn('flex items-center p-6 pt-0', className)} {...props} />\r\n  );\r\n}","import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { AlertTriangle, RefreshCw, Home, Bug, Copy, CheckCircle } from 'lucide-react';\nimport { Button } from './ui/Button';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/Card';\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n  errorId: string;\n  copied: boolean;\n}\n\ninterface ErrorBoundaryProps {\n  children: ReactNode;\n  fallback?: ReactNode;\n  onError?: (error: Error, errorInfo: ErrorInfo) => void;\n}\n\nexport class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      errorId: '',\n      copied: false,\n    };\n  }\n\n  static getDerivedStateFromError(error: Error): Partial<ErrorBoundaryState> {\n    // Generate a unique error ID for tracking\n    const errorId = `error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    \n    return {\n      hasError: true,\n      error,\n      errorId,\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    this.setState({\n      error,\n      errorInfo,\n    });\n\n    // Log error to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.group('🚨 Error Boundary Caught Error');\n      console.error('Error:', error);\n      console.error('Error Info:', errorInfo);\n      console.error('Component Stack:', errorInfo.componentStack);\n      console.groupEnd();\n    }\n\n    // Call optional error handler\n    this.props.onError?.(error, errorInfo);\n\n    // In production, you might want to send this to an error reporting service\n    if (process.env.NODE_ENV === 'production') {\n      // Example: Send to error reporting service\n      // reportError(error, errorInfo, this.state.errorId);\n    }\n  }\n\n  handleRetry = () => {\n    this.setState({\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      errorId: '',\n      copied: false,\n    });\n  };\n\n  handleGoHome = () => {\n    window.location.href = '/';\n  };\n\n  handleCopyError = async () => {\n    const { error, errorInfo, errorId } = this.state;\n    \n    const errorReport = `\nخطای برنامه - گزارش خطا\n========================\n\nشناسه خطا: ${errorId}\nزمان: ${new Date().toLocaleString('fa-IR')}\nنسخه: ${process.env.REACT_APP_VERSION || 'نامشخص'}\nمحیط: ${process.env.NODE_ENV}\n\nخطا:\n${error?.name}: ${error?.message}\n\nجزئیات:\n${error?.stack}\n\nComponent Stack:\n${errorInfo?.componentStack}\n\nUser Agent:\n${navigator.userAgent}\n    `.trim();\n\n    try {\n      await navigator.clipboard.writeText(errorReport);\n      this.setState({ copied: true });\n      setTimeout(() => this.setState({ copied: false }), 3000);\n    } catch (err) {\n      console.error('Failed to copy error report:', err);\n    }\n  };\n\n  render() {\n    if (this.state.hasError) {\n      // Use custom fallback if provided\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      const { error, errorId } = this.state;\n      const isDevelopment = process.env.NODE_ENV === 'development';\n\n      return (\n        <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center p-4\" dir=\"rtl\">\n          <Card className=\"w-full max-w-2xl\">\n            <CardHeader className=\"text-center\">\n              <div className=\"mx-auto w-16 h-16 bg-red-100 dark:bg-red-900 rounded-full flex items-center justify-center mb-4\">\n                <AlertTriangle className=\"h-8 w-8 text-red-600 dark:text-red-400\" />\n              </div>\n              <CardTitle className=\"text-2xl text-red-600 dark:text-red-400\">\n                خطایی رخ داده است\n              </CardTitle>\n              <p className=\"text-gray-600 dark:text-gray-400 mt-2\">\n                متأسفانه در اجرای برنامه خطایی رخ داده است. لطفاً دوباره تلاش کنید.\n              </p>\n            </CardHeader>\n\n            <CardContent className=\"space-y-6\">\n              {/* Error ID for support */}\n              <div className=\"bg-gray-100 dark:bg-gray-800 p-4 rounded-lg\">\n                <h3 className=\"font-medium text-gray-900 dark:text-white mb-2\">\n                  شناسه خطا (برای پشتیبانی)\n                </h3>\n                <code className=\"text-sm text-gray-600 dark:text-gray-400 font-mono\">\n                  {errorId}\n                </code>\n              </div>\n\n              {/* Error details in development */}\n              {isDevelopment && error && (\n                <div className=\"bg-red-50 dark:bg-red-950 p-4 rounded-lg border border-red-200 dark:border-red-800\">\n                  <h3 className=\"font-medium text-red-800 dark:text-red-200 mb-2 flex items-center gap-2\">\n                    <Bug className=\"h-4 w-4\" />\n                    جزئیات خطا (حالت توسعه)\n                  </h3>\n                  <div className=\"text-sm text-red-700 dark:text-red-300 space-y-2\">\n                    <div>\n                      <strong>نوع خطا:</strong> {error.name}\n                    </div>\n                    <div>\n                      <strong>پیام:</strong> {error.message}\n                    </div>\n                    {error.stack && (\n                      <details className=\"mt-2\">\n                        <summary className=\"cursor-pointer font-medium hover:text-red-600 dark:hover:text-red-400\">\n                          Stack Trace\n                        </summary>\n                        <pre className=\"mt-2 text-xs bg-red-100 dark:bg-red-900 p-2 rounded overflow-auto max-h-40\">\n                          {error.stack}\n                        </pre>\n                      </details>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {/* Action buttons */}\n              <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n                <Button\n                  onClick={this.handleRetry}\n                  className=\"bg-blue-600 hover:bg-blue-700\"\n                >\n                  <RefreshCw className=\"h-4 w-4 ml-2\" />\n                  تلاش مجدد\n                </Button>\n\n                <Button\n                  onClick={this.handleGoHome}\n                  variant=\"outline\"\n                >\n                  <Home className=\"h-4 w-4 ml-2\" />\n                  بازگشت به صفحه اصلی\n                </Button>\n\n                <Button\n                  onClick={this.handleCopyError}\n                  variant=\"outline\"\n                  className={this.state.copied ? 'text-green-600 border-green-600' : ''}\n                >\n                  {this.state.copied ? (\n                    <>\n                      <CheckCircle className=\"h-4 w-4 ml-2\" />\n                      کپی شد\n                    </>\n                  ) : (\n                    <>\n                      <Copy className=\"h-4 w-4 ml-2\" />\n                      کپی گزارش خطا\n                    </>\n                  )}\n                </Button>\n              </div>\n\n              {/* Help text */}\n              <div className=\"text-center text-sm text-gray-500 dark:text-gray-400 border-t border-gray-200 dark:border-gray-700 pt-4\">\n                <p>\n                  اگر این خطا مداوم تکرار می‌شود، لطفاً گزارش خطا را کپی کرده و با تیم پشتیبانی تماس بگیرید.\n                </p>\n                <div className=\"mt-2 space-x-4 space-x-reverse\">\n                  <a\n                    href=\"mailto:support@persian-legal-ai.ir\"\n                    className=\"text-blue-600 dark:text-blue-400 hover:underline\"\n                  >\n                    ایمیل پشتیبانی\n                  </a>\n                  <span className=\"text-gray-300 dark:text-gray-600\">|</span>\n                  <a\n                    href=\"https://t.me/PersianLegalAI\"\n                    className=\"text-blue-600 dark:text-blue-400 hover:underline\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    تلگرام\n                  </a>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","import React, { useState, useEffect } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  Brain, BarChart3, Database, FileText, Users, Settings, \n  Monitor, LogOut, Home, BookOpen, Scale, Gavel, Shield,\n  TrendingUp, Activity, Cpu, Globe, Download, Upload,\n  ChevronDown, ChevronRight, Dot, Sparkles, Briefcase\n} from 'lucide-react';\n\ninterface NavItem {\n  path: string;\n  label: string;\n  icon: React.ComponentType<any>;\n  description?: string;\n  badge?: string;\n  children?: NavItem[];\n}\n\ninterface SystemStatus {\n  status: 'healthy' | 'warning' | 'error';\n  models_training: number;\n  cpu_usage: number;\n  memory_usage: number;\n}\n\nexport function ModernSidebar() {\n  const location = useLocation();\n  const [collapsed, setCollapsed] = useState(false);\n  const [expandedGroups, setExpandedGroups] = useState<string[]>(['main']);\n  const [systemStatus, setSystemStatus] = useState<SystemStatus>({\n    status: 'healthy',\n    models_training: 2,\n    cpu_usage: 45,\n    memory_usage: 68\n  });\n\n  // Navigation structure for Persian Legal AI\n  const navigation: { group: string; label: string; items: NavItem[] }[] = [\n    {\n      group: 'main',\n      label: 'داشبورد اصلی',\n      items: [\n        { path: '/overview', label: 'نمای کلی', icon: Home, description: 'داشبورد اصلی سیستم' },\n        { path: '/dashboard', label: 'مانیتورینگ', icon: BarChart3, description: 'آمار و نمودارها', badge: 'جدید' }\n      ]\n    },\n    {\n      group: 'legal',\n      label: 'سیستم حقوقی',\n      items: [\n        { \n          path: '/models', \n          label: 'مدل‌های یادگیری', \n          icon: Brain, \n          description: 'مدیریت مدل‌های AI',\n          children: [\n            { path: '/models/civil', label: 'قوانین مدنی', icon: Scale },\n            { path: '/models/criminal', label: 'قوانین جزایی', icon: Gavel },\n            { path: '/models/commercial', label: 'قوانین تجاری', icon: Briefcase },\n            { path: '/models/administrative', label: 'قوانین اداری', icon: Shield }\n          ]\n        },\n        { path: '/datasets', label: 'مجموعه‌ داده‌ها', icon: Database, description: 'مدیریت داده‌های حقوقی' },\n        { path: '/legal-docs', label: 'اسناد قانونی', icon: FileText, description: 'آرشیو اسناد حقوقی' }\n      ]\n    },\n    {\n      group: 'analytics',\n      label: 'تحلیل و گزارش',\n      items: [\n        { path: '/analytics', label: 'آنالیتیکس', icon: TrendingUp, description: 'تحلیل عملکرد' },\n        { path: '/monitoring', label: 'نظارت سیستم', icon: Monitor, description: 'مانیتورینگ real-time' },\n        { path: '/logs', label: 'گزارش‌ها', icon: Activity, description: 'لاگ‌های سیستم' }\n      ]\n    },\n    {\n      group: 'tools',\n      label: 'ابزارها',\n      items: [\n        { path: '/training', label: 'مدیریت آموزش', icon: Cpu, description: 'کنترل فرآیند آموزش' },\n        { path: '/export', label: 'صادرات داده', icon: Download, description: 'صادرات و پشتیبان‌گیری' },\n        { path: '/import', label: 'واردات داده', icon: Upload, description: 'واردات داده‌های جدید' }\n      ]\n    },\n    {\n      group: 'management',\n      label: 'مدیریت',\n      items: [\n        { path: '/team', label: 'تیم', icon: Users, description: 'مدیریت کاربران' },\n        { path: '/settings', label: 'تنظیمات', icon: Settings, description: 'پیکربندی سیستم' }\n      ]\n    }\n  ];\n\n  useEffect(() => {\n    // Simulate system status updates\n    const interval = setInterval(() => {\n      setSystemStatus(prev => ({\n        ...prev,\n        cpu_usage: Math.floor(Math.random() * 30 + 30),\n        memory_usage: Math.floor(Math.random() * 20 + 50),\n        models_training: Math.floor(Math.random() * 3 + 1)\n      }));\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const toggleGroup = (group: string) => {\n    setExpandedGroups(prev => \n      prev.includes(group) \n        ? prev.filter(g => g !== group)\n        : [...prev, group]\n    );\n  };\n\n  const isActive = (path: string) => {\n    return location.pathname === path || location.pathname.startsWith(path + '/');\n  };\n\n  return (\n    <motion.div\n      initial={{ x: -300 }}\n      animate={{ x: 0 }}\n      transition={{ duration: 0.6, type: \"spring\", stiffness: 100 }}\n      className={`${\n        collapsed ? 'w-20' : 'w-80'\n      } h-screen bg-gradient-to-b from-slate-900/95 to-slate-800/95 backdrop-blur-xl border-l border-slate-700/50 transition-all duration-300 flex flex-col`}\n      dir=\"rtl\"\n    >\n      {/* Header */}\n      <div className=\"p-6 border-b border-slate-700/50\">\n        <motion.div\n          className=\"flex items-center gap-4\"\n          layout\n        >\n          <div className=\"w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center\">\n            <Brain className=\"h-6 w-6 text-white\" />\n          </div>\n          \n          <AnimatePresence>\n            {!collapsed && (\n              <motion.div\n                initial={{ opacity: 0, width: 0 }}\n                animate={{ opacity: 1, width: \"auto\" }}\n                exit={{ opacity: 0, width: 0 }}\n                transition={{ duration: 0.3 }}\n                className=\"overflow-hidden\"\n              >\n                <h2 className=\"text-lg font-bold text-white\">AI حقوقی ایران</h2>\n                <p className=\"text-xs text-slate-400\">سامانه یادگیری عمیق</p>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <motion.button\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n            onClick={() => setCollapsed(!collapsed)}\n            className=\"p-2 hover:bg-slate-700/50 rounded-lg transition-colors mr-auto\"\n          >\n            <motion.div\n              animate={{ rotate: collapsed ? 180 : 0 }}\n              transition={{ duration: 0.3 }}\n            >\n              <ChevronRight className=\"w-4 h-4 text-slate-400\" />\n            </motion.div>\n          </motion.button>\n        </motion.div>\n      </div>\n\n      {/* System Status */}\n      <AnimatePresence>\n        {!collapsed && (\n          <motion.div\n            initial={{ opacity: 0, height: 0 }}\n            animate={{ opacity: 1, height: \"auto\" }}\n            exit={{ opacity: 0, height: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"p-4 mx-4 mt-4 bg-gradient-to-r from-slate-800/50 to-slate-700/50 rounded-2xl border border-slate-600/30\"\n          >\n            <div className=\"flex items-center gap-3 mb-3\">\n              <div className={`w-3 h-3 rounded-full animate-pulse ${\n                systemStatus.status === 'healthy' ? 'bg-green-400' :\n                systemStatus.status === 'warning' ? 'bg-yellow-400' : 'bg-red-400'\n              }`} />\n              <span className=\"text-sm font-medium text-white\">\n                {systemStatus.status === 'healthy' ? 'سیستم سالم' :\n                 systemStatus.status === 'warning' ? 'هشدار سیستم' : 'خطای سیستم'}\n              </span>\n            </div>\n            \n            <div className=\"space-y-2 text-xs\">\n              <div className=\"flex justify-between text-slate-300\">\n                <span>مدل‌های در حال آموزش</span>\n                <span className=\"font-bold text-blue-400\">{systemStatus.models_training}</span>\n              </div>\n              <div className=\"flex justify-between text-slate-300\">\n                <span>استفاده پردازنده</span>\n                <span className=\"font-bold text-cyan-400\">{systemStatus.cpu_usage}%</span>\n              </div>\n              <div className=\"flex justify-between text-slate-300\">\n                <span>استفاده حافظه</span>\n                <span className=\"font-bold text-purple-400\">{systemStatus.memory_usage}%</span>\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Navigation */}\n      <nav className=\"flex-1 overflow-y-auto p-4 space-y-2\">\n        {navigation.map((section, sectionIndex) => (\n          <motion.div\n            key={section.group}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.4, delay: sectionIndex * 0.1 }}\n          >\n            {/* Section Header */}\n            <AnimatePresence>\n              {!collapsed && (\n                <motion.button\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                  onClick={() => toggleGroup(section.group)}\n                  className=\"w-full flex items-center gap-3 px-3 py-2 text-xs font-semibold text-slate-400 hover:text-slate-300 transition-colors\"\n                >\n                  <motion.div\n                    animate={{ rotate: expandedGroups.includes(section.group) ? 90 : 0 }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    <ChevronDown className=\"w-3 h-3\" />\n                  </motion.div>\n                  {section.label}\n                </motion.button>\n              )}\n            </AnimatePresence>\n\n            {/* Navigation Items */}\n            <AnimatePresence>\n              {(collapsed || expandedGroups.includes(section.group)) && (\n                <motion.div\n                  initial={{ opacity: 0, height: 0 }}\n                  animate={{ opacity: 1, height: \"auto\" }}\n                  exit={{ opacity: 0, height: 0 }}\n                  transition={{ duration: 0.3 }}\n                  className=\"space-y-1\"\n                >\n                  {section.items.map((item, itemIndex) => (\n                    <div key={item.path}>\n                      <NavLink\n                        to={item.path}\n                        className={({ isActive }) => `\n                          group flex items-center gap-3 px-4 py-3 rounded-xl transition-all duration-300 relative overflow-hidden\n                          ${isActive \n                            ? 'bg-gradient-to-r from-blue-500/20 to-purple-500/20 border border-blue-400/30 text-white' \n                            : 'hover:bg-slate-700/30 text-slate-300 hover:text-white'\n                          }\n                        `}\n                      >\n                        {/* Active indicator */}\n                        {isActive(item.path) && (\n                          <motion.div\n                            layoutId=\"activeIndicator\"\n                            className=\"absolute right-0 top-0 bottom-0 w-1 bg-gradient-to-b from-blue-400 to-purple-400 rounded-full\"\n                            transition={{ duration: 0.3 }}\n                          />\n                        )}\n\n                        <div className={`w-10 h-10 rounded-xl flex items-center justify-center transition-all duration-300 ${\n                          isActive(item.path) \n                            ? 'bg-gradient-to-r from-blue-500 to-purple-500 text-white' \n                            : 'bg-slate-700/50 group-hover:bg-slate-600/50'\n                        }`}>\n                          <item.icon className=\"w-5 h-5\" />\n                        </div>\n\n                        <AnimatePresence>\n                          {!collapsed && (\n                            <motion.div\n                              initial={{ opacity: 0, width: 0 }}\n                              animate={{ opacity: 1, width: \"auto\" }}\n                              exit={{ opacity: 0, width: 0 }}\n                              transition={{ duration: 0.3 }}\n                              className=\"flex-1 overflow-hidden\"\n                            >\n                              <div className=\"flex items-center justify-between\">\n                                <div>\n                                  <h3 className=\"font-medium\">{item.label}</h3>\n                                  {item.description && (\n                                    <p className=\"text-xs text-slate-400 group-hover:text-slate-300 transition-colors\">\n                                      {item.description}\n                                    </p>\n                                  )}\n                                </div>\n                                \n                                <div className=\"flex items-center gap-2\">\n                                  {item.badge && (\n                                    <motion.span\n                                      initial={{ scale: 0 }}\n                                      animate={{ scale: 1 }}\n                                      className=\"px-2 py-1 bg-gradient-to-r from-cyan-500 to-blue-500 text-white text-xs rounded-full font-medium\"\n                                    >\n                                      {item.badge}\n                                    </motion.span>\n                                  )}\n                                  \n                                  {item.children && (\n                                    <ChevronDown className=\"w-4 h-4 text-slate-400\" />\n                                  )}\n                                </div>\n                              </div>\n                            </motion.div>\n                          )}\n                        </AnimatePresence>\n                      </NavLink>\n\n                      {/* Sub-navigation */}\n                      <AnimatePresence>\n                        {!collapsed && item.children && isActive(item.path) && (\n                          <motion.div\n                            initial={{ opacity: 0, height: 0 }}\n                            animate={{ opacity: 1, height: \"auto\" }}\n                            exit={{ opacity: 0, height: 0 }}\n                            transition={{ duration: 0.3 }}\n                            className=\"ml-6 mt-2 space-y-1\"\n                          >\n                            {item.children.map((child, childIndex) => (\n                              <motion.div\n                                key={child.path}\n                                initial={{ opacity: 0, x: -20 }}\n                                animate={{ opacity: 1, x: 0 }}\n                                transition={{ duration: 0.3, delay: childIndex * 0.05 }}\n                              >\n                                <NavLink\n                                  to={child.path}\n                                  className={({ isActive }) => `\n                                    flex items-center gap-3 px-4 py-2 rounded-lg transition-all duration-200\n                                    ${isActive \n                                      ? 'bg-blue-500/20 text-blue-300 border border-blue-400/30' \n                                      : 'text-slate-400 hover:text-slate-300 hover:bg-slate-700/30'\n                                    }\n                                  `}\n                                >\n                                  <Dot className=\"w-4 h-4\" />\n                                  <child.icon className=\"w-4 h-4\" />\n                                  <span className=\"text-sm font-medium\">{child.label}</span>\n                                </NavLink>\n                              </motion.div>\n                            ))}\n                          </motion.div>\n                        )}\n                      </AnimatePresence>\n                    </div>\n                  ))}\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </motion.div>\n        ))}\n      </nav>\n\n      {/* Training Status Indicator */}\n      <AnimatePresence>\n        {!collapsed && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 20 }}\n            transition={{ duration: 0.3 }}\n            className=\"p-4 mx-4 mb-4 bg-gradient-to-r from-emerald-500/10 to-blue-500/10 rounded-2xl border border-emerald-400/20\"\n          >\n            <div className=\"flex items-center gap-3 mb-3\">\n              <motion.div\n                animate={{ scale: [1, 1.2, 1], rotate: [0, 180, 360] }}\n                transition={{ duration: 2, repeat: Infinity }}\n              >\n                <Sparkles className=\"w-5 h-5 text-emerald-400\" />\n              </motion.div>\n              <span className=\"text-sm font-bold text-emerald-300\">آموزش فعال</span>\n            </div>\n            \n            <div className=\"text-xs text-slate-300 space-y-1\">\n              <div>مدل قوانین مدنی: 87% تکمیل</div>\n              <div>زمان باقیمانده: 23 دقیقه</div>\n            </div>\n            \n            <div className=\"w-full bg-slate-700 rounded-full h-1.5 mt-3\">\n              <motion.div\n                initial={{ width: 0 }}\n                animate={{ width: \"87%\" }}\n                transition={{ duration: 2 }}\n                className=\"h-1.5 bg-gradient-to-r from-emerald-400 to-blue-400 rounded-full\"\n              />\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Footer */}\n      <div className=\"p-4 border-t border-slate-700/50\">\n        <AnimatePresence>\n          {!collapsed && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              transition={{ duration: 0.3 }}\n              className=\"text-center\"\n            >\n              <div className=\"text-xs text-slate-400 mb-2\">\n                نسخه 2.1.0 - هوش مصنوعی حقوقی\n              </div>\n              <div className=\"text-xs text-slate-500\">\n                © 2024 تمامی حقوق محفوظ است\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        {/* Collapse/Expand Toggle */}\n        <motion.button\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={() => setCollapsed(!collapsed)}\n          className=\"w-full mt-3 p-2 bg-slate-700/30 hover:bg-slate-600/30 rounded-xl transition-all duration-300 flex items-center justify-center\"\n        >\n          <motion.div\n            animate={{ rotate: collapsed ? 0 : 180 }}\n            transition={{ duration: 0.3 }}\n          >\n            <ChevronRight className=\"w-4 h-4 text-slate-400\" />\n          </motion.div>\n        </motion.button>\n      </div>\n    </motion.div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { ModernSidebar } from './ModernSidebar';\nimport { \n  Bell, Search, User, Settings, LogOut, Globe, Wifi, WifiOff,\n  Sun, Moon, Monitor, ChevronDown, Sparkles, Brain, Shield\n} from 'lucide-react';\n\ninterface SystemNotification {\n  id: string;\n  type: 'success' | 'warning' | 'error' | 'info';\n  title: string;\n  message: string;\n  timestamp: Date;\n  read: boolean;\n}\n\ninterface ConnectionStatus {\n  backend: boolean;\n  websocket: boolean;\n  database: boolean;\n}\n\nexport function EnhancedAppLayout() {\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [notifications, setNotifications] = useState<SystemNotification[]>([]);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState<ConnectionStatus>({\n    backend: false,\n    websocket: false,\n    database: false\n  });\n  const [theme, setTheme] = useState<'light' | 'dark' | 'auto'>('dark');\n\n  // Page titles for different routes\n  const getPageTitle = (pathname: string) => {\n    const titles: Record<string, string> = {\n      '/overview': 'نمای کلی سیستم',\n      '/dashboard': 'داشبورد تحلیلی',\n      '/models': 'مدل‌های یادگیری',\n      '/datasets': 'مجموعه داده‌ها',\n      '/analytics': 'آنالیتیکس پیشرفته',\n      '/monitoring': 'نظارت سیستم',\n      '/logs': 'گزارش‌های سیستم',\n      '/training': 'مدیریت آموزش',\n      '/settings': 'تنظیمات سیستم',\n      '/team': 'مدیریت تیم'\n    };\n    return titles[pathname] || 'سیستم هوش مصنوعی حقوقی';\n  };\n\n  useEffect(() => {\n    // Check system connections\n    const checkConnections = async () => {\n      try {\n        const backendResponse = await fetch('/api/health').catch(() => null);\n        const wsTest = new Promise((resolve) => {\n          try {\n            const ws = new WebSocket('ws://localhost:8080');\n            ws.onopen = () => { ws.close(); resolve(true); };\n            ws.onerror = () => resolve(false);\n            setTimeout(() => resolve(false), 3000);\n          } catch {\n            resolve(false);\n          }\n        });\n\n        setConnectionStatus({\n          backend: backendResponse?.ok || false,\n          websocket: await wsTest as boolean,\n          database: backendResponse?.ok || false // Simplified check\n        });\n\n        // Add sample notifications\n        if (notifications.length === 0) {\n          setNotifications([\n            {\n              id: '1',\n              type: 'success',\n              title: 'آموزش تکمیل شد',\n              message: 'مدل قوانین جزایی با دقت 92.3% آموزش دید',\n              timestamp: new Date(Date.now() - 5 * 60000),\n              read: false\n            },\n            {\n              id: '2',\n              type: 'info',\n              title: 'بروزرسانی داده',\n              message: 'مجموعه داده جدید قوانین تجاری افزوده شد',\n              timestamp: new Date(Date.now() - 15 * 60000),\n              read: false\n            },\n            {\n              id: '3',\n              type: 'warning',\n              title: 'هشدار سیستم',\n              message: 'استفاده حافظه به 85% رسیده است',\n              timestamp: new Date(Date.now() - 30 * 60000),\n              read: true\n            }\n          ]);\n        }\n      } catch (error) {\n        console.error('Connection check failed:', error);\n      }\n    };\n\n    checkConnections();\n    const interval = setInterval(checkConnections, 30000); // Check every 30 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  const unreadNotifications = notifications.filter(n => !n.read).length;\n\n  const getNotificationIcon = (type: string) => {\n    switch (type) {\n      case 'success': return '✅';\n      case 'warning': return '⚠️';\n      case 'error': return '❌';\n      default: return 'ℹ️';\n    }\n  };\n\n  const markAsRead = (id: string) => {\n    setNotifications(prev => \n      prev.map(n => n.id === id ? { ...n, read: true } : n)\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 flex\" dir=\"rtl\">\n      <ModernSidebar />\n      \n      <div className=\"flex-1 flex flex-col min-h-screen\">\n        {/* Enhanced Header */}\n        <motion.header\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"sticky top-0 z-40 bg-white/5 backdrop-blur-xl border-b border-slate-700/50\"\n        >\n          <div className=\"px-6 py-4\">\n            <div className=\"flex items-center justify-between\">\n              {/* Page Title and Breadcrumb */}\n              <div className=\"flex items-center gap-4\">\n                <motion.div\n                  key={location.pathname}\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.4 }}\n                >\n                  <h1 className=\"text-2xl font-bold text-white\">\n                    {getPageTitle(location.pathname)}\n                  </h1>\n                  <div className=\"flex items-center gap-2 text-sm text-slate-400\">\n                    <span>داشبورد</span>\n                    <span>•</span>\n                    <span>{getPageTitle(location.pathname)}</span>\n                  </div>\n                </motion.div>\n              </div>\n\n              {/* Header Controls */}\n              <div className=\"flex items-center gap-4\">\n                {/* Search */}\n                <div className=\"relative\">\n                  <Search className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-slate-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"جستجو در سیستم...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className=\"w-64 pl-4 pr-10 py-2 bg-slate-800/50 border border-slate-600/50 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-blue-400 focus:ring-2 focus:ring-blue-400/20 transition-all\"\n                  />\n                </div>\n\n                {/* Connection Status */}\n                <div className=\"flex items-center gap-2\">\n                  {[\n                    { key: 'backend', label: 'بک‌اند', status: connectionStatus.backend },\n                    { key: 'websocket', label: 'WebSocket', status: connectionStatus.websocket },\n                    { key: 'database', label: 'دیتابیس', status: connectionStatus.database }\n                  ].map((conn) => (\n                    <motion.div\n                      key={conn.key}\n                      initial={{ scale: 0 }}\n                      animate={{ scale: 1 }}\n                      transition={{ duration: 0.3 }}\n                      className={`flex items-center gap-1 px-2 py-1 rounded-lg text-xs ${\n                        conn.status \n                          ? 'bg-green-500/20 text-green-300 border border-green-400/30' \n                          : 'bg-red-500/20 text-red-300 border border-red-400/30'\n                      }`}\n                      title={`${conn.label}: ${conn.status ? 'متصل' : 'قطع'}`}\n                    >\n                      {conn.status ? (\n                        <Wifi className=\"w-3 h-3\" />\n                      ) : (\n                        <WifiOff className=\"w-3 h-3\" />\n                      )}\n                      <span className=\"hidden sm:inline\">{conn.label}</span>\n                    </motion.div>\n                  ))}\n                </div>\n\n                {/* Notifications */}\n                <div className=\"relative\">\n                  <motion.button\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    onClick={() => setShowNotifications(!showNotifications)}\n                    className=\"relative p-2 bg-slate-700/50 hover:bg-slate-600/50 rounded-xl transition-all\"\n                  >\n                    <Bell className=\"w-5 h-5 text-slate-300\" />\n                    {unreadNotifications > 0 && (\n                      <motion.div\n                        initial={{ scale: 0 }}\n                        animate={{ scale: 1 }}\n                        className=\"absolute -top-1 -left-1 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center text-xs font-bold text-white\"\n                      >\n                        {unreadNotifications}\n                      </motion.div>\n                    )}\n                  </motion.button>\n\n                  {/* Notifications Dropdown */}\n                  <AnimatePresence>\n                    {showNotifications && (\n                      <motion.div\n                        initial={{ opacity: 0, scale: 0.95, y: -10 }}\n                        animate={{ opacity: 1, scale: 1, y: 0 }}\n                        exit={{ opacity: 0, scale: 0.95, y: -10 }}\n                        transition={{ duration: 0.2 }}\n                        className=\"absolute left-0 mt-2 w-80 bg-slate-800/95 backdrop-blur-xl rounded-2xl border border-slate-600/50 shadow-2xl z-50\"\n                      >\n                        <div className=\"p-4 border-b border-slate-700/50\">\n                          <h3 className=\"font-bold text-white\">اعلان‌ها</h3>\n                        </div>\n                        \n                        <div className=\"max-h-96 overflow-y-auto\">\n                          {notifications.length === 0 ? (\n                            <div className=\"p-8 text-center text-slate-400\">\n                              اعلانی وجود ندارد\n                            </div>\n                          ) : (\n                            notifications.map((notification) => (\n                              <motion.div\n                                key={notification.id}\n                                initial={{ opacity: 0, x: -20 }}\n                                animate={{ opacity: 1, x: 0 }}\n                                className={`p-4 border-b border-slate-700/30 hover:bg-slate-700/30 transition-colors cursor-pointer ${\n                                  !notification.read ? 'bg-blue-500/5' : ''\n                                }`}\n                                onClick={() => markAsRead(notification.id)}\n                              >\n                                <div className=\"flex items-start gap-3\">\n                                  <span className=\"text-lg\">{getNotificationIcon(notification.type)}</span>\n                                  <div className=\"flex-1\">\n                                    <h4 className=\"font-medium text-white text-sm\">{notification.title}</h4>\n                                    <p className=\"text-xs text-slate-400 mt-1\">{notification.message}</p>\n                                    <p className=\"text-xs text-slate-500 mt-2\">\n                                      {notification.timestamp.toLocaleTimeString('fa-IR')}\n                                    </p>\n                                  </div>\n                                  {!notification.read && (\n                                    <div className=\"w-2 h-2 bg-blue-400 rounded-full\" />\n                                  )}\n                                </div>\n                              </motion.div>\n                            ))\n                          )}\n                        </div>\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                </div>\n\n                {/* User Menu */}\n                <div className=\"relative\">\n                  <motion.button\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    onClick={() => setShowUserMenu(!showUserMenu)}\n                    className=\"flex items-center gap-3 p-2 bg-slate-700/50 hover:bg-slate-600/50 rounded-xl transition-all\"\n                  >\n                    <div className=\"w-8 h-8 bg-gradient-to-r from-cyan-500 to-blue-500 rounded-lg flex items-center justify-center\">\n                      <User className=\"w-4 h-4 text-white\" />\n                    </div>\n                    <div className=\"text-right hidden sm:block\">\n                      <div className=\"text-sm font-medium text-white\">مدیر سیستم</div>\n                      <div className=\"text-xs text-slate-400\">ادمین</div>\n                    </div>\n                    <ChevronDown className=\"w-4 h-4 text-slate-400\" />\n                  </motion.button>\n\n                  {/* User Dropdown */}\n                  <AnimatePresence>\n                    {showUserMenu && (\n                      <motion.div\n                        initial={{ opacity: 0, scale: 0.95, y: -10 }}\n                        animate={{ opacity: 1, scale: 1, y: 0 }}\n                        exit={{ opacity: 0, scale: 0.95, y: -10 }}\n                        transition={{ duration: 0.2 }}\n                        className=\"absolute left-0 mt-2 w-56 bg-slate-800/95 backdrop-blur-xl rounded-2xl border border-slate-600/50 shadow-2xl z-50\"\n                      >\n                        <div className=\"p-2\">\n                          {[\n                            { label: 'پروفایل کاربری', icon: User, action: () => {} },\n                            { label: 'تنظیمات حساب', icon: Settings, action: () => {} },\n                            { label: 'تغییر زبان', icon: Globe, action: () => {} },\n                            { label: 'خروج از سیستم', icon: LogOut, action: () => {}, danger: true }\n                          ].map((item, index) => (\n                            <motion.button\n                              key={item.label}\n                              initial={{ opacity: 0, x: -10 }}\n                              animate={{ opacity: 1, x: 0 }}\n                              transition={{ duration: 0.2, delay: index * 0.05 }}\n                              onClick={item.action}\n                              className={`w-full flex items-center gap-3 px-3 py-2 rounded-xl transition-all text-right ${\n                                item.danger \n                                  ? 'hover:bg-red-500/20 text-red-300 hover:text-red-200' \n                                  : 'hover:bg-slate-700/50 text-slate-300 hover:text-white'\n                              }`}\n                            >\n                              <item.icon className=\"w-4 h-4\" />\n                              <span className=\"text-sm\">{item.label}</span>\n                            </motion.button>\n                          ))}\n                        </div>\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.header>\n\n        {/* Main Content Area */}\n        <main className=\"flex-1 relative\">\n          {/* Background Pattern */}\n          <div className=\"absolute inset-0 opacity-[0.02]\">\n            <div \n              style={{\n                backgroundImage: \"radial-gradient(circle at 1px 1px, rgba(255,255,255,0.3) 1px, transparent 0)\",\n                backgroundSize: \"50px 50px\"\n              }}\n              className=\"w-full h-full\"\n            />\n          </div>\n\n          {/* Page Content */}\n          <div className=\"relative z-10 p-6\">\n            <motion.div\n              key={location.pathname}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.4 }}\n              className=\"min-h-full\"\n            >\n              <Outlet />\n            </motion.div>\n          </div>\n        </main>\n\n        {/* Status Bar */}\n        <motion.footer\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.3 }}\n          className=\"bg-slate-800/30 backdrop-blur-sm border-t border-slate-700/50 px-6 py-3\"\n        >\n          <div className=\"flex items-center justify-between text-xs text-slate-400\">\n            <div className=\"flex items-center gap-6\">\n              <div className=\"flex items-center gap-2\">\n                <Brain className=\"w-3 h-3 text-blue-400\" />\n                <span>سیستم هوش مصنوعی حقوقی ایران</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Shield className=\"w-3 h-3 text-green-400\" />\n                <span>امنیت: فعال</span>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center gap-6\">\n              <div>نسخه 2.1.0</div>\n              <div>آخرین بروزرسانی: {new Date().toLocaleTimeString('fa-IR')}</div>\n              <div className=\"flex items-center gap-1\">\n                <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\" />\n                <span>آنلاین</span>\n              </div>\n            </div>\n          </div>\n        </motion.footer>\n      </div>\n\n      {/* Global Loading Overlay */}\n      <AnimatePresence>\n        {/* You can add global loading states here */}\n      </AnimatePresence>\n\n      {/* Click outside handlers */}\n      {(showNotifications || showUserMenu) && (\n        <div \n          className=\"fixed inset-0 z-30\" \n          onClick={() => {\n            setShowNotifications(false);\n            setShowUserMenu(false);\n          }}\n        />\n      )}\n    </div>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport { \n  Brain, ArrowLeft, Sparkles, Zap, Target, BookOpen, Shield, \n  Database, Users, TrendingUp, Award, CheckCircle, Play,\n  BarChart3, FileText, Globe, Cpu, Monitor, Heart\n} from \"lucide-react\";\n\ninterface SystemStats {\n  models: number;\n  datasets: number;\n  accuracy: number;\n  documents: number;\n}\n\nexport function EnhancedLandingPage(): React.ReactElement {\n  const navigate = useNavigate();\n  const [stats, setStats] = useState<SystemStats>({ models: 0, datasets: 0, accuracy: 0, documents: 0 });\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Animate numbers counting up\n  useEffect(() => {\n    const finalStats = { models: 12, datasets: 47, accuracy: 94.5, documents: 127000 };\n    \n    setTimeout(() => {\n      setStats(finalStats);\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n\n  const handleStart = () => {\n    navigate(\"/overview\");\n  };\n\n  const features = [\n    {\n      icon: Brain,\n      title: \"هوش مصنوعی پیشرفته\",\n      description: \"آموزش مدل‌های عمیق با معماری ترنسفورمر برای پردازش متون حقوقی فارسی\",\n      color: \"from-blue-500 to-cyan-500\"\n    },\n    {\n      icon: Shield,\n      title: \"قوانین جمهوری اسلامی\",\n      description: \"پایگاه داده جامع قوانین ایران با دسته‌بندی هوشمند و جستجوی پیشرفته\",\n      color: \"from-emerald-500 to-green-500\"\n    },\n    {\n      icon: BarChart3,\n      title: \"آنالیتیکس پیشرفته\",\n      description: \"داشبورد تحلیلی با نمودارهای تعاملی برای نظارت بر عملکرد مدل‌ها\",\n      color: \"from-purple-500 to-pink-500\"\n    },\n    {\n      icon: Database,\n      title: \"مدیریت داده‌های حقوقی\",\n      description: \"سیستم مدیریت داده با امتیازدهی کیفیت و ارزیابی منابع قانونی\",\n      color: \"from-orange-500 to-red-500\"\n    }\n  ];\n\n  const achievements = [\n    { label: \"مدل‌های آموزش دیده\", value: stats.models, suffix: \"+\" },\n    { label: \"مجموعه داده\", value: stats.datasets, suffix: \"+\" },\n    { label: \"دقت میانگین\", value: stats.accuracy, suffix: \"%\" },\n    { label: \"سند حقوقی\", value: stats.documents, suffix: \"+\" }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900 text-white overflow-hidden\" dir=\"rtl\">\n      {/* Enhanced Background Effects */}\n      <div className=\"absolute inset-0\">\n        <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-br from-blue-600/10 via-purple-600/5 to-pink-600/10\" />\n        <div className=\"absolute top-1/4 right-1/4 w-96 h-96 bg-blue-500/20 rounded-full blur-3xl animate-pulse\" />\n        <div className=\"absolute bottom-1/4 left-1/4 w-80 h-80 bg-purple-500/20 rounded-full blur-3xl animate-pulse delay-1000\" />\n        <div className=\"absolute top-1/2 right-1/3 w-64 h-64 bg-cyan-500/15 rounded-full blur-2xl animate-bounce delay-500\" />\n        \n        {/* Grid Pattern */}\n        <div className=\"absolute inset-0 opacity-[0.02]\">\n          <div \n            style={{\n              backgroundImage: \"radial-gradient(circle at 1px 1px, rgba(255,255,255,0.3) 1px, transparent 0)\",\n              backgroundSize: \"40px 40px\"\n            }}\n            className=\"w-full h-full\"\n          />\n        </div>\n      </div>\n\n      <div className=\"relative z-10 min-h-screen flex flex-col\">\n        {/* Navigation Header */}\n        <motion.header \n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"p-6 flex justify-between items-center\"\n        >\n          <div className=\"flex items-center gap-4\">\n            <div className=\"w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl flex items-center justify-center\">\n              <Brain className=\"h-6 w-6 text-white\" />\n            </div>\n            <div>\n              <h2 className=\"text-xl font-bold text-white\">هوش مصنوعی حقوقی ایران</h2>\n              <p className=\"text-blue-200 text-sm\">سیستم یادگیری عمیق قوانین</p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-4\">\n            <div className=\"flex items-center gap-2 px-4 py-2 bg-white/10 backdrop-blur-md rounded-full border border-white/20\">\n              <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\" />\n              <span className=\"text-sm text-green-200\">سیستم آماده</span>\n            </div>\n          </div>\n        </motion.header>\n\n        {/* Main Content */}\n        <div className=\"flex-1 flex items-center justify-center px-6\">\n          <div className=\"max-w-7xl mx-auto\">\n            {/* Hero Section */}\n            <div className=\"text-center mb-16\">\n              <motion.div\n                initial={{ scale: 0.5, opacity: 0, rotate: -10 }}\n                animate={{ scale: 1, opacity: 1, rotate: 0 }}\n                transition={{ type: 'spring', stiffness: 260, damping: 20 }}\n                className=\"mb-8\"\n              >\n                <div className=\"relative inline-block\">\n                  <div className=\"w-24 h-24 mx-auto bg-gradient-to-r from-blue-500 via-purple-600 to-pink-500 rounded-3xl flex items-center justify-center shadow-2xl transform hover:scale-110 transition-transform duration-500\">\n                    <Brain className=\"h-12 w-12 text-white\" />\n                  </div>\n                  <div className=\"absolute inset-0 w-24 h-24 mx-auto bg-gradient-to-r from-blue-500 to-purple-600 rounded-3xl blur-xl opacity-60 animate-pulse\" />\n                  \n                  {/* Floating particles */}\n                  <motion.div\n                    className=\"absolute -top-2 -right-2 w-4 h-4 bg-yellow-400 rounded-full\"\n                    animate={{ y: [-10, 10], rotate: [0, 360] }}\n                    transition={{ duration: 3, repeat: Infinity, repeatType: \"reverse\" }}\n                  />\n                  <motion.div\n                    className=\"absolute -bottom-2 -left-2 w-3 h-3 bg-pink-400 rounded-full\"\n                    animate={{ y: [10, -10], x: [-5, 5] }}\n                    transition={{ duration: 2.5, repeat: Infinity, repeatType: \"reverse\" }}\n                  />\n                </div>\n              </motion.div>\n\n              <motion.div\n                initial={{ opacity: 0, y: 30 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.8, delay: 0.3 }}\n              >\n                <h1 className=\"text-5xl md:text-8xl font-black mb-6 leading-tight\">\n                  <span className=\"bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 bg-clip-text text-transparent\">\n                    هوش مصنوعی حقوقی\n                  </span>\n                </h1>\n                \n                <div className=\"flex items-center justify-center gap-6 text-2xl md:text-4xl font-bold text-slate-300 mb-8\">\n                  <motion.div\n                    animate={{ rotate: 360 }}\n                    transition={{ duration: 8, repeat: Infinity, ease: \"linear\" }}\n                  >\n                    <Sparkles className=\"w-10 h-10 text-yellow-400\" />\n                  </motion.div>\n                  <span>نسل جدید قضاوت هوشمند</span>\n                  <motion.div\n                    animate={{ scale: [1, 1.2, 1] }}\n                    transition={{ duration: 2, repeat: Infinity }}\n                  >\n                    <Zap className=\"w-10 h-10 text-cyan-400\" />\n                  </motion.div>\n                </div>\n              </motion.div>\n\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.8, delay: 0.6 }}\n                className=\"mb-12\"\n              >\n                <p className=\"text-xl md:text-3xl text-slate-200 mb-8 max-w-5xl mx-auto leading-relaxed\">\n                  آموزش و ارزیابی مدل‌های یادگیری عمیق با قوانین جمهوری اسلامی ایران\n                  <br />\n                  <span className=\"text-cyan-300 font-semibold text-lg md:text-2xl\">\n                    دقت بالا • سرعت فوق‌العاده • قابلیت اعتماد کامل • هوش مصنوعی اخلاقی\n                  </span>\n                </p>\n\n                <motion.button\n                  onClick={handleStart}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  className=\"inline-flex items-center gap-3 px-8 py-4 bg-gradient-to-r from-blue-600 to-purple-600 rounded-2xl font-bold text-lg shadow-2xl hover:shadow-blue-500/25 transition-all duration-300\"\n                >\n                  <Play className=\"w-6 h-6\" />\n                  شروع کار با سیستم\n                  <motion.div\n                    animate={{ x: [0, 5, 0] }}\n                    transition={{ duration: 1.5, repeat: Infinity }}\n                  >\n                    <ArrowLeft className=\"w-5 h-5\" />\n                  </motion.div>\n                </motion.button>\n              </motion.div>\n            </div>\n\n            {/* Stats Section */}\n            <motion.div\n              initial={{ opacity: 0, y: 40 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.9 }}\n              className=\"grid grid-cols-2 md:grid-cols-4 gap-6 mb-16\"\n            >\n              {achievements.map((achievement, index) => (\n                <motion.div\n                  key={achievement.label}\n                  initial={{ opacity: 0, scale: 0.5 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.5, delay: 1.2 + index * 0.1 }}\n                  className=\"bg-white/10 backdrop-blur-md rounded-2xl p-6 border border-white/20 hover:scale-105 transition-all duration-300 group\"\n                >\n                  <div className=\"text-center\">\n                    <motion.div \n                      className=\"text-3xl md:text-4xl font-black text-transparent bg-gradient-to-r from-cyan-400 to-blue-400 bg-clip-text mb-2\"\n                      animate={isLoading ? {} : { scale: [1, 1.1, 1] }}\n                      transition={{ duration: 0.6, delay: 1.5 + index * 0.1 }}\n                    >\n                      {isLoading ? \"...\" : achievement.value.toLocaleString('fa-IR')}{achievement.suffix}\n                    </motion.div>\n                    <div className=\"text-slate-300 text-sm font-medium group-hover:text-white transition-colors\">\n                      {achievement.label}\n                    </div>\n                    <div className=\"w-full h-1 bg-gradient-to-r from-cyan-400 to-blue-400 rounded-full mt-3 opacity-70 group-hover:opacity-100 transition-opacity\" />\n                  </div>\n                </motion.div>\n              ))}\n            </motion.div>\n\n            {/* Features Grid */}\n            <motion.div\n              initial={{ opacity: 0, y: 50 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 1.4 }}\n              className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-16\"\n            >\n              {features.map((feature, index) => (\n                <motion.div\n                  key={feature.title}\n                  initial={{ opacity: 0, x: index % 2 === 0 ? -50 : 50 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.6, delay: 1.6 + index * 0.2 }}\n                  className=\"group\"\n                >\n                  <div className=\"bg-white/5 backdrop-blur-md rounded-3xl p-8 border border-white/10 hover:border-white/30 transition-all duration-500 hover:scale-105\">\n                    <div className=\"flex items-start gap-6\">\n                      <div className={`w-16 h-16 rounded-2xl bg-gradient-to-r ${feature.color} flex items-center justify-center group-hover:scale-110 transition-transform duration-300`}>\n                        <feature.icon className=\"h-8 w-8 text-white\" />\n                      </div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-xl font-bold text-white mb-3 group-hover:text-cyan-300 transition-colors\">\n                          {feature.title}\n                        </h3>\n                        <p className=\"text-slate-300 leading-relaxed group-hover:text-slate-200 transition-colors\">\n                          {feature.description}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </motion.div>\n              ))}\n            </motion.div>\n\n            {/* Technical Highlights */}\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 2.0 }}\n              className=\"bg-gradient-to-r from-slate-800/50 to-slate-900/50 backdrop-blur-xl rounded-3xl p-8 border border-slate-600/30 mb-12\"\n            >\n              <div className=\"text-center mb-8\">\n                <h3 className=\"text-2xl font-bold text-transparent bg-gradient-to-r from-cyan-400 to-blue-400 bg-clip-text mb-4\">\n                  ویژگی‌های فنی پیشرفته\n                </h3>\n                <p className=\"text-slate-300\">\n                  بر پایه جدیدترین تکنولوژی‌های هوش مصنوعی و پردازش زبان طبیعی\n                </p>\n              </div>\n\n              <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-6\">\n                {[\n                  { icon: Cpu, name: \"پردازش موازی\", desc: \"GPU Acceleration\" },\n                  { icon: Database, name: \"پایگاه داده\", desc: \"SQLite + Vector DB\" },\n                  { icon: Globe, name: \"WebSocket\", desc: \"Real-time Updates\" },\n                  { icon: Shield, name: \"امنیت\", desc: \"Enterprise Security\" },\n                  { icon: Monitor, name: \"مانیتورینگ\", desc: \"Live Monitoring\" },\n                  { icon: Heart, name: \"عملکرد\", desc: \"High Performance\" }\n                ].map((tech, index) => (\n                  <motion.div\n                    key={tech.name}\n                    initial={{ opacity: 0, scale: 0.8 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    transition={{ duration: 0.4, delay: 2.2 + index * 0.1 }}\n                    className=\"text-center group cursor-pointer\"\n                  >\n                    <div className=\"w-16 h-16 mx-auto mb-3 bg-gradient-to-r from-slate-700 to-slate-600 rounded-2xl flex items-center justify-center group-hover:from-cyan-500 group-hover:to-blue-500 transition-all duration-300\">\n                      <tech.icon className=\"h-8 w-8 text-slate-300 group-hover:text-white transition-colors\" />\n                    </div>\n                    <div className=\"text-sm font-semibold text-slate-200 group-hover:text-white transition-colors\">\n                      {tech.name}\n                    </div>\n                    <div className=\"text-xs text-slate-400 group-hover:text-slate-300 transition-colors\">\n                      {tech.desc}\n                    </div>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n\n            {/* Call to Action */}\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 2.5 }}\n              className=\"text-center\"\n            >\n              <div className=\"bg-gradient-to-r from-blue-600/20 to-purple-600/20 backdrop-blur-xl rounded-3xl p-8 border border-blue-500/30\">\n                <h3 className=\"text-3xl font-bold text-white mb-4\">\n                  آماده شروع هستید؟\n                </h3>\n                <p className=\"text-xl text-slate-300 mb-8\">\n                  به سیستم هوش مصنوعی حقوقی ایران بپیوندید و تجربه آینده قضاوت را داشته باشید\n                </p>\n                \n                <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n                  <motion.button\n                    onClick={handleStart}\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    className=\"inline-flex items-center gap-3 px-8 py-4 bg-gradient-to-r from-cyan-500 to-blue-600 rounded-2xl font-bold text-lg shadow-2xl hover:shadow-cyan-500/30 transition-all duration-300\"\n                  >\n                    <Play className=\"w-6 h-6\" />\n                    ورود به داشبورد\n                  </motion.button>\n                  \n                  <motion.button\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    className=\"inline-flex items-center gap-3 px-8 py-4 bg-white/10 backdrop-blur-md rounded-2xl font-bold text-lg border border-white/20 hover:bg-white/20 transition-all duration-300\"\n                  >\n                    <FileText className=\"w-6 h-6\" />\n                    مطالعه مستندات\n                  </motion.button>\n                </div>\n              </div>\n            </motion.div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <motion.footer\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 0.6, delay: 3.0 }}\n          className=\"p-6 text-center\"\n        >\n          <div className=\"text-slate-400 text-sm\">\n            © 2024 سیستم هوش مصنوعی حقوقی ایران - تمامی حقوق محفوظ است\n          </div>\n        </motion.footer>\n      </div>\n    </div>\n  );\n}","import React, { createContext, useContext, useCallback, useState, ReactNode } from 'react';\r\nimport { CheckCircle, AlertCircle, XCircle, Info, X } from 'lucide-react';\r\n\r\nexport interface Toast {\r\n  id: string;\r\n  type: 'success' | 'error' | 'warning' | 'info';\r\n  title: string;\r\n  message?: string;\r\n  duration?: number;\r\n  action?: {\r\n    label: string;\r\n    onClick: () => void;\r\n  };\r\n}\r\n\r\ninterface ToastContextType {\r\n  toasts: Toast[];\r\n  addToast: (toast: Omit<Toast, 'id'>) => string;\r\n  removeToast: (id: string) => void;\r\n  clearToasts: () => void;\r\n}\r\n\r\nconst ToastContext = createContext<ToastContextType | undefined>(undefined);\r\n\r\nexport function useToast() {\r\n  const context = useContext(ToastContext);\r\n  if (!context) {\r\n    throw new Error('useToast must be used within ToastProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\ninterface ToastProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport function ToastProvider({ children }: ToastProviderProps) {\r\n  const [toasts, setToasts] = useState<Toast[]>([]);\r\n\r\n  const addToast = useCallback((toast: Omit<Toast, 'id'>) => {\r\n    const id = Math.random().toString(36).substr(2, 9);\r\n    const newToast: Toast = {\r\n      ...toast,\r\n      id,\r\n      duration: toast.duration ?? 5000,\r\n    };\r\n\r\n    setToasts(prev => [...prev, newToast]);\r\n\r\n    // Auto remove toast after duration\r\n    if (newToast.duration > 0) {\r\n      setTimeout(() => {\r\n        removeToast(id);\r\n      }, newToast.duration);\r\n    }\r\n\r\n    return id;\r\n  }, []);\r\n\r\n  const removeToast = useCallback((id: string) => {\r\n    setToasts(prev => prev.filter(toast => toast.id !== id));\r\n  }, []);\r\n\r\n  const clearToasts = useCallback(() => {\r\n    setToasts([]);\r\n  }, []);\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ toasts, addToast, removeToast, clearToasts }}>\r\n      {children}\r\n      <ToastContainer toasts={toasts} onRemove={removeToast} />\r\n    </ToastContext.Provider>\r\n  );\r\n}\r\n\r\ninterface ToastContainerProps {\r\n  toasts: Toast[];\r\n  onRemove: (id: string) => void;\r\n}\r\n\r\nfunction ToastContainer({ toasts, onRemove }: ToastContainerProps) {\r\n  if (toasts.length === 0) return null;\r\n\r\n  return (\r\n    <div className=\"fixed top-4 left-4 right-4 z-50 flex flex-col gap-3 max-w-sm mx-auto pointer-events-none\">\r\n      {toasts.map((toast, index) => (\r\n        <ToastItem\r\n          key={toast.id}\r\n          toast={toast}\r\n          onRemove={onRemove}\r\n          index={index}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ToastItemProps {\r\n  toast: Toast;\r\n  onRemove: (id: string) => void;\r\n  index: number;\r\n}\r\n\r\nfunction ToastItem({ toast, onRemove, index }: ToastItemProps) {\r\n  const icons = {\r\n    success: CheckCircle,\r\n    error: XCircle,\r\n    warning: AlertCircle,\r\n    info: Info,\r\n  };\r\n\r\n  const colors = {\r\n    success: 'bg-green-50 dark:bg-green-950 border-green-200 dark:border-green-800 text-green-800 dark:text-green-200',\r\n    error: 'bg-red-50 dark:bg-red-950 border-red-200 dark:border-red-800 text-red-800 dark:text-red-200',\r\n    warning: 'bg-yellow-50 dark:bg-yellow-950 border-yellow-200 dark:border-yellow-800 text-yellow-800 dark:text-yellow-200',\r\n    info: 'bg-blue-50 dark:bg-blue-950 border-blue-200 dark:border-blue-800 text-blue-800 dark:text-blue-200',\r\n  };\r\n\r\n  const iconColors = {\r\n    success: 'text-green-600 dark:text-green-400',\r\n    error: 'text-red-600 dark:text-red-400',\r\n    warning: 'text-yellow-600 dark:text-yellow-400',\r\n    info: 'text-blue-600 dark:text-blue-400',\r\n  };\r\n\r\n  const Icon = icons[toast.type];\r\n\r\n  return (\r\n    <div\r\n      className={`\r\n        relative p-4 rounded-lg border shadow-lg backdrop-blur-sm pointer-events-auto\r\n        transform transition-all duration-300 ease-out\r\n        animate-slide-in-down\r\n        ${colors[toast.type]}\r\n      `}\r\n      style={{\r\n        animationDelay: `${index * 100}ms`,\r\n        transform: `translateY(${index * 4}px)`,\r\n      }}\r\n      dir=\"rtl\"\r\n    >\r\n      <div className=\"flex items-start gap-3\">\r\n        <Icon className={`h-5 w-5 flex-shrink-0 mt-0.5 ${iconColors[toast.type]}`} />\r\n        \r\n        <div className=\"flex-1 min-w-0\">\r\n          <h4 className=\"font-medium text-sm\">{toast.title}</h4>\r\n          {toast.message && (\r\n            <p className=\"mt-1 text-sm opacity-90\">{toast.message}</p>\r\n          )}\r\n          \r\n          {toast.action && (\r\n            <button\r\n              onClick={toast.action.onClick}\r\n              className=\"mt-2 text-sm font-medium underline hover:no-underline transition-all duration-200\"\r\n            >\r\n              {toast.action.label}\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <button\r\n          onClick={() => onRemove(toast.id)}\r\n          className=\"flex-shrink-0 p-1 rounded-md hover:bg-black hover:bg-opacity-10 dark:hover:bg-white dark:hover:bg-opacity-10 transition-colors duration-200\"\r\n          aria-label=\"بستن اعلان\"\r\n        >\r\n          <X className=\"h-4 w-4\" />\r\n        </button>\r\n      </div>\r\n\r\n      {/* Progress bar for timed toasts */}\r\n      {toast.duration && toast.duration > 0 && (\r\n        <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-black bg-opacity-10 dark:bg-white dark:bg-opacity-10 rounded-b-lg overflow-hidden\">\r\n          <div\r\n            className=\"h-full bg-current opacity-30 transition-all ease-linear\"\r\n            style={{\r\n              width: '100%',\r\n              animation: `shrink ${toast.duration}ms linear forwards`,\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Toast helper functions\r\nexport const toast = {\r\n  success: (title: string, message?: string, options?: Partial<Toast>) => {\r\n    const { addToast } = useToast();\r\n    return addToast({ type: 'success', title, message, ...options });\r\n  },\r\n  \r\n  error: (title: string, message?: string, options?: Partial<Toast>) => {\r\n    const { addToast } = useToast();\r\n    return addToast({ type: 'error', title, message, ...options });\r\n  },\r\n  \r\n  warning: (title: string, message?: string, options?: Partial<Toast>) => {\r\n    const { addToast } = useToast();\r\n    return addToast({ type: 'warning', title, message, ...options });\r\n  },\r\n  \r\n  info: (title: string, message?: string, options?: Partial<Toast>) => {\r\n    const { addToast } = useToast();\r\n    return addToast({ type: 'info', title, message, ...options });\r\n  },\r\n};\r\n\r\n// Add CSS for the shrink animation\r\nconst style = document.createElement('style');\r\nstyle.textContent = `\r\n  @keyframes shrink {\r\n    from { width: 100%; }\r\n    to { width: 0%; }\r\n  }\r\n`;\r\ndocument.head.appendChild(style);","/** A special constant with type `never` */\nexport const NEVER = Object.freeze({\n    status: \"aborted\",\n});\nexport /*@__NO_SIDE_EFFECTS__*/ function $constructor(name, initializer, params) {\n    function init(inst, def) {\n        var _a;\n        Object.defineProperty(inst, \"_zod\", {\n            value: inst._zod ?? {},\n            enumerable: false,\n        });\n        (_a = inst._zod).traits ?? (_a.traits = new Set());\n        inst._zod.traits.add(name);\n        initializer(inst, def);\n        // support prototype modifications\n        for (const k in _.prototype) {\n            if (!(k in inst))\n                Object.defineProperty(inst, k, { value: _.prototype[k].bind(inst) });\n        }\n        inst._zod.constr = _;\n        inst._zod.def = def;\n    }\n    // doesn't work if Parent has a constructor with arguments\n    const Parent = params?.Parent ?? Object;\n    class Definition extends Parent {\n    }\n    Object.defineProperty(Definition, \"name\", { value: name });\n    function _(def) {\n        var _a;\n        const inst = params?.Parent ? new Definition() : this;\n        init(inst, def);\n        (_a = inst._zod).deferred ?? (_a.deferred = []);\n        for (const fn of inst._zod.deferred) {\n            fn();\n        }\n        return inst;\n    }\n    Object.defineProperty(_, \"init\", { value: init });\n    Object.defineProperty(_, Symbol.hasInstance, {\n        value: (inst) => {\n            if (params?.Parent && inst instanceof params.Parent)\n                return true;\n            return inst?._zod?.traits?.has(name);\n        },\n    });\n    Object.defineProperty(_, \"name\", { value: name });\n    return _;\n}\n//////////////////////////////   UTILITIES   ///////////////////////////////////////\nexport const $brand = Symbol(\"zod_brand\");\nexport class $ZodAsyncError extends Error {\n    constructor() {\n        super(`Encountered Promise during synchronous parse. Use .parseAsync() instead.`);\n    }\n}\nexport class $ZodEncodeError extends Error {\n    constructor(name) {\n        super(`Encountered unidirectional transform during encode: ${name}`);\n        this.name = \"ZodEncodeError\";\n    }\n}\nexport const globalConfig = {};\nexport function config(newConfig) {\n    if (newConfig)\n        Object.assign(globalConfig, newConfig);\n    return globalConfig;\n}\n","// functions\nexport function assertEqual(val) {\n    return val;\n}\nexport function assertNotEqual(val) {\n    return val;\n}\nexport function assertIs(_arg) { }\nexport function assertNever(_x) {\n    throw new Error();\n}\nexport function assert(_) { }\nexport function getEnumValues(entries) {\n    const numericValues = Object.values(entries).filter((v) => typeof v === \"number\");\n    const values = Object.entries(entries)\n        .filter(([k, _]) => numericValues.indexOf(+k) === -1)\n        .map(([_, v]) => v);\n    return values;\n}\nexport function joinValues(array, separator = \"|\") {\n    return array.map((val) => stringifyPrimitive(val)).join(separator);\n}\nexport function jsonStringifyReplacer(_, value) {\n    if (typeof value === \"bigint\")\n        return value.toString();\n    return value;\n}\nexport function cached(getter) {\n    const set = false;\n    return {\n        get value() {\n            if (!set) {\n                const value = getter();\n                Object.defineProperty(this, \"value\", { value });\n                return value;\n            }\n            throw new Error(\"cached value already set\");\n        },\n    };\n}\nexport function nullish(input) {\n    return input === null || input === undefined;\n}\nexport function cleanRegex(source) {\n    const start = source.startsWith(\"^\") ? 1 : 0;\n    const end = source.endsWith(\"$\") ? source.length - 1 : source.length;\n    return source.slice(start, end);\n}\nexport function floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepString = step.toString();\n    let stepDecCount = (stepString.split(\".\")[1] || \"\").length;\n    if (stepDecCount === 0 && /\\d?e-\\d?/.test(stepString)) {\n        const match = stepString.match(/\\d?e-(\\d?)/);\n        if (match?.[1]) {\n            stepDecCount = Number.parseInt(match[1]);\n        }\n    }\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nconst EVALUATING = Symbol(\"evaluating\");\nexport function defineLazy(object, key, getter) {\n    let value = undefined;\n    Object.defineProperty(object, key, {\n        get() {\n            if (value === EVALUATING) {\n                // Circular reference detected, return undefined to break the cycle\n                return undefined;\n            }\n            if (value === undefined) {\n                value = EVALUATING;\n                value = getter();\n            }\n            return value;\n        },\n        set(v) {\n            Object.defineProperty(object, key, {\n                value: v,\n                // configurable: true,\n            });\n            // object[key] = v;\n        },\n        configurable: true,\n    });\n}\nexport function objectClone(obj) {\n    return Object.create(Object.getPrototypeOf(obj), Object.getOwnPropertyDescriptors(obj));\n}\nexport function assignProp(target, prop, value) {\n    Object.defineProperty(target, prop, {\n        value,\n        writable: true,\n        enumerable: true,\n        configurable: true,\n    });\n}\nexport function mergeDefs(...defs) {\n    const mergedDescriptors = {};\n    for (const def of defs) {\n        const descriptors = Object.getOwnPropertyDescriptors(def);\n        Object.assign(mergedDescriptors, descriptors);\n    }\n    return Object.defineProperties({}, mergedDescriptors);\n}\nexport function cloneDef(schema) {\n    return mergeDefs(schema._zod.def);\n}\nexport function getElementAtPath(obj, path) {\n    if (!path)\n        return obj;\n    return path.reduce((acc, key) => acc?.[key], obj);\n}\nexport function promiseAllObject(promisesObj) {\n    const keys = Object.keys(promisesObj);\n    const promises = keys.map((key) => promisesObj[key]);\n    return Promise.all(promises).then((results) => {\n        const resolvedObj = {};\n        for (let i = 0; i < keys.length; i++) {\n            resolvedObj[keys[i]] = results[i];\n        }\n        return resolvedObj;\n    });\n}\nexport function randomString(length = 10) {\n    const chars = \"abcdefghijklmnopqrstuvwxyz\";\n    let str = \"\";\n    for (let i = 0; i < length; i++) {\n        str += chars[Math.floor(Math.random() * chars.length)];\n    }\n    return str;\n}\nexport function esc(str) {\n    return JSON.stringify(str);\n}\nexport const captureStackTrace = (\"captureStackTrace\" in Error ? Error.captureStackTrace : (..._args) => { });\nexport function isObject(data) {\n    return typeof data === \"object\" && data !== null && !Array.isArray(data);\n}\nexport const allowsEval = cached(() => {\n    // @ts-ignore\n    if (typeof navigator !== \"undefined\" && navigator?.userAgent?.includes(\"Cloudflare\")) {\n        return false;\n    }\n    try {\n        const F = Function;\n        new F(\"\");\n        return true;\n    }\n    catch (_) {\n        return false;\n    }\n});\nexport function isPlainObject(o) {\n    if (isObject(o) === false)\n        return false;\n    // modified constructor\n    const ctor = o.constructor;\n    if (ctor === undefined)\n        return true;\n    // modified prototype\n    const prot = ctor.prototype;\n    if (isObject(prot) === false)\n        return false;\n    // ctor doesn't have static `isPrototypeOf`\n    if (Object.prototype.hasOwnProperty.call(prot, \"isPrototypeOf\") === false) {\n        return false;\n    }\n    return true;\n}\nexport function shallowClone(o) {\n    if (isPlainObject(o))\n        return { ...o };\n    if (Array.isArray(o))\n        return [...o];\n    return o;\n}\nexport function numKeys(data) {\n    let keyCount = 0;\n    for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n            keyCount++;\n        }\n    }\n    return keyCount;\n}\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return \"undefined\";\n        case \"string\":\n            return \"string\";\n        case \"number\":\n            return Number.isNaN(data) ? \"nan\" : \"number\";\n        case \"boolean\":\n            return \"boolean\";\n        case \"function\":\n            return \"function\";\n        case \"bigint\":\n            return \"bigint\";\n        case \"symbol\":\n            return \"symbol\";\n        case \"object\":\n            if (Array.isArray(data)) {\n                return \"array\";\n            }\n            if (data === null) {\n                return \"null\";\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return \"promise\";\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return \"map\";\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return \"set\";\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return \"date\";\n            }\n            // @ts-ignore\n            if (typeof File !== \"undefined\" && data instanceof File) {\n                return \"file\";\n            }\n            return \"object\";\n        default:\n            throw new Error(`Unknown data type: ${t}`);\n    }\n};\nexport const propertyKeyTypes = new Set([\"string\", \"number\", \"symbol\"]);\nexport const primitiveTypes = new Set([\"string\", \"number\", \"bigint\", \"boolean\", \"symbol\", \"undefined\"]);\nexport function escapeRegex(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\n// zod-specific utils\nexport function clone(inst, def, params) {\n    const cl = new inst._zod.constr(def ?? inst._zod.def);\n    if (!def || params?.parent)\n        cl._zod.parent = inst;\n    return cl;\n}\nexport function normalizeParams(_params) {\n    const params = _params;\n    if (!params)\n        return {};\n    if (typeof params === \"string\")\n        return { error: () => params };\n    if (params?.message !== undefined) {\n        if (params?.error !== undefined)\n            throw new Error(\"Cannot specify both `message` and `error` params\");\n        params.error = params.message;\n    }\n    delete params.message;\n    if (typeof params.error === \"string\")\n        return { ...params, error: () => params.error };\n    return params;\n}\nexport function createTransparentProxy(getter) {\n    let target;\n    return new Proxy({}, {\n        get(_, prop, receiver) {\n            target ?? (target = getter());\n            return Reflect.get(target, prop, receiver);\n        },\n        set(_, prop, value, receiver) {\n            target ?? (target = getter());\n            return Reflect.set(target, prop, value, receiver);\n        },\n        has(_, prop) {\n            target ?? (target = getter());\n            return Reflect.has(target, prop);\n        },\n        deleteProperty(_, prop) {\n            target ?? (target = getter());\n            return Reflect.deleteProperty(target, prop);\n        },\n        ownKeys(_) {\n            target ?? (target = getter());\n            return Reflect.ownKeys(target);\n        },\n        getOwnPropertyDescriptor(_, prop) {\n            target ?? (target = getter());\n            return Reflect.getOwnPropertyDescriptor(target, prop);\n        },\n        defineProperty(_, prop, descriptor) {\n            target ?? (target = getter());\n            return Reflect.defineProperty(target, prop, descriptor);\n        },\n    });\n}\nexport function stringifyPrimitive(value) {\n    if (typeof value === \"bigint\")\n        return value.toString() + \"n\";\n    if (typeof value === \"string\")\n        return `\"${value}\"`;\n    return `${value}`;\n}\nexport function optionalKeys(shape) {\n    return Object.keys(shape).filter((k) => {\n        return shape[k]._zod.optin === \"optional\" && shape[k]._zod.optout === \"optional\";\n    });\n}\nexport const NUMBER_FORMAT_RANGES = {\n    safeint: [Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER],\n    int32: [-2147483648, 2147483647],\n    uint32: [0, 4294967295],\n    float32: [-3.4028234663852886e38, 3.4028234663852886e38],\n    float64: [-Number.MAX_VALUE, Number.MAX_VALUE],\n};\nexport const BIGINT_FORMAT_RANGES = {\n    int64: [/* @__PURE__*/ BigInt(\"-9223372036854775808\"), /* @__PURE__*/ BigInt(\"9223372036854775807\")],\n    uint64: [/* @__PURE__*/ BigInt(0), /* @__PURE__*/ BigInt(\"18446744073709551615\")],\n};\nexport function pick(schema, mask) {\n    const currDef = schema._zod.def;\n    const def = mergeDefs(schema._zod.def, {\n        get shape() {\n            const newShape = {};\n            for (const key in mask) {\n                if (!(key in currDef.shape)) {\n                    throw new Error(`Unrecognized key: \"${key}\"`);\n                }\n                if (!mask[key])\n                    continue;\n                newShape[key] = currDef.shape[key];\n            }\n            assignProp(this, \"shape\", newShape); // self-caching\n            return newShape;\n        },\n        checks: [],\n    });\n    return clone(schema, def);\n}\nexport function omit(schema, mask) {\n    const currDef = schema._zod.def;\n    const def = mergeDefs(schema._zod.def, {\n        get shape() {\n            const newShape = { ...schema._zod.def.shape };\n            for (const key in mask) {\n                if (!(key in currDef.shape)) {\n                    throw new Error(`Unrecognized key: \"${key}\"`);\n                }\n                if (!mask[key])\n                    continue;\n                delete newShape[key];\n            }\n            assignProp(this, \"shape\", newShape); // self-caching\n            return newShape;\n        },\n        checks: [],\n    });\n    return clone(schema, def);\n}\nexport function extend(schema, shape) {\n    if (!isPlainObject(shape)) {\n        throw new Error(\"Invalid input to extend: expected a plain object\");\n    }\n    const checks = schema._zod.def.checks;\n    const hasChecks = checks && checks.length > 0;\n    if (hasChecks) {\n        throw new Error(\"Object schemas containing refinements cannot be extended. Use `.safeExtend()` instead.\");\n    }\n    const def = mergeDefs(schema._zod.def, {\n        get shape() {\n            const _shape = { ...schema._zod.def.shape, ...shape };\n            assignProp(this, \"shape\", _shape); // self-caching\n            return _shape;\n        },\n        checks: [],\n    });\n    return clone(schema, def);\n}\nexport function safeExtend(schema, shape) {\n    if (!isPlainObject(shape)) {\n        throw new Error(\"Invalid input to safeExtend: expected a plain object\");\n    }\n    const def = {\n        ...schema._zod.def,\n        get shape() {\n            const _shape = { ...schema._zod.def.shape, ...shape };\n            assignProp(this, \"shape\", _shape); // self-caching\n            return _shape;\n        },\n        checks: schema._zod.def.checks,\n    };\n    return clone(schema, def);\n}\nexport function merge(a, b) {\n    const def = mergeDefs(a._zod.def, {\n        get shape() {\n            const _shape = { ...a._zod.def.shape, ...b._zod.def.shape };\n            assignProp(this, \"shape\", _shape); // self-caching\n            return _shape;\n        },\n        get catchall() {\n            return b._zod.def.catchall;\n        },\n        checks: [], // delete existing checks\n    });\n    return clone(a, def);\n}\nexport function partial(Class, schema, mask) {\n    const def = mergeDefs(schema._zod.def, {\n        get shape() {\n            const oldShape = schema._zod.def.shape;\n            const shape = { ...oldShape };\n            if (mask) {\n                for (const key in mask) {\n                    if (!(key in oldShape)) {\n                        throw new Error(`Unrecognized key: \"${key}\"`);\n                    }\n                    if (!mask[key])\n                        continue;\n                    // if (oldShape[key]!._zod.optin === \"optional\") continue;\n                    shape[key] = Class\n                        ? new Class({\n                            type: \"optional\",\n                            innerType: oldShape[key],\n                        })\n                        : oldShape[key];\n                }\n            }\n            else {\n                for (const key in oldShape) {\n                    // if (oldShape[key]!._zod.optin === \"optional\") continue;\n                    shape[key] = Class\n                        ? new Class({\n                            type: \"optional\",\n                            innerType: oldShape[key],\n                        })\n                        : oldShape[key];\n                }\n            }\n            assignProp(this, \"shape\", shape); // self-caching\n            return shape;\n        },\n        checks: [],\n    });\n    return clone(schema, def);\n}\nexport function required(Class, schema, mask) {\n    const def = mergeDefs(schema._zod.def, {\n        get shape() {\n            const oldShape = schema._zod.def.shape;\n            const shape = { ...oldShape };\n            if (mask) {\n                for (const key in mask) {\n                    if (!(key in shape)) {\n                        throw new Error(`Unrecognized key: \"${key}\"`);\n                    }\n                    if (!mask[key])\n                        continue;\n                    // overwrite with non-optional\n                    shape[key] = new Class({\n                        type: \"nonoptional\",\n                        innerType: oldShape[key],\n                    });\n                }\n            }\n            else {\n                for (const key in oldShape) {\n                    // overwrite with non-optional\n                    shape[key] = new Class({\n                        type: \"nonoptional\",\n                        innerType: oldShape[key],\n                    });\n                }\n            }\n            assignProp(this, \"shape\", shape); // self-caching\n            return shape;\n        },\n        checks: [],\n    });\n    return clone(schema, def);\n}\n// invalid_type | too_big | too_small | invalid_format | not_multiple_of | unrecognized_keys | invalid_union | invalid_key | invalid_element | invalid_value | custom\nexport function aborted(x, startIndex = 0) {\n    if (x.aborted === true)\n        return true;\n    for (let i = startIndex; i < x.issues.length; i++) {\n        if (x.issues[i]?.continue !== true) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function prefixIssues(path, issues) {\n    return issues.map((iss) => {\n        var _a;\n        (_a = iss).path ?? (_a.path = []);\n        iss.path.unshift(path);\n        return iss;\n    });\n}\nexport function unwrapMessage(message) {\n    return typeof message === \"string\" ? message : message?.message;\n}\nexport function finalizeIssue(iss, ctx, config) {\n    const full = { ...iss, path: iss.path ?? [] };\n    // for backwards compatibility\n    if (!iss.message) {\n        const message = unwrapMessage(iss.inst?._zod.def?.error?.(iss)) ??\n            unwrapMessage(ctx?.error?.(iss)) ??\n            unwrapMessage(config.customError?.(iss)) ??\n            unwrapMessage(config.localeError?.(iss)) ??\n            \"Invalid input\";\n        full.message = message;\n    }\n    // delete (full as any).def;\n    delete full.inst;\n    delete full.continue;\n    if (!ctx?.reportInput) {\n        delete full.input;\n    }\n    return full;\n}\nexport function getSizableOrigin(input) {\n    if (input instanceof Set)\n        return \"set\";\n    if (input instanceof Map)\n        return \"map\";\n    // @ts-ignore\n    if (input instanceof File)\n        return \"file\";\n    return \"unknown\";\n}\nexport function getLengthableOrigin(input) {\n    if (Array.isArray(input))\n        return \"array\";\n    if (typeof input === \"string\")\n        return \"string\";\n    return \"unknown\";\n}\nexport function issue(...args) {\n    const [iss, input, inst] = args;\n    if (typeof iss === \"string\") {\n        return {\n            message: iss,\n            code: \"custom\",\n            input,\n            inst,\n        };\n    }\n    return { ...iss };\n}\nexport function cleanEnum(obj) {\n    return Object.entries(obj)\n        .filter(([k, _]) => {\n        // return true if NaN, meaning it's not a number, thus a string key\n        return Number.isNaN(Number.parseInt(k, 10));\n    })\n        .map((el) => el[1]);\n}\n// Codec utility functions\nexport function base64ToUint8Array(base64) {\n    const binaryString = atob(base64);\n    const bytes = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function uint8ArrayToBase64(bytes) {\n    let binaryString = \"\";\n    for (let i = 0; i < bytes.length; i++) {\n        binaryString += String.fromCharCode(bytes[i]);\n    }\n    return btoa(binaryString);\n}\nexport function base64urlToUint8Array(base64url) {\n    const base64 = base64url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const padding = \"=\".repeat((4 - (base64.length % 4)) % 4);\n    return base64ToUint8Array(base64 + padding);\n}\nexport function uint8ArrayToBase64url(bytes) {\n    return uint8ArrayToBase64(bytes).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n}\nexport function hexToUint8Array(hex) {\n    const cleanHex = hex.replace(/^0x/, \"\");\n    if (cleanHex.length % 2 !== 0) {\n        throw new Error(\"Invalid hex string length\");\n    }\n    const bytes = new Uint8Array(cleanHex.length / 2);\n    for (let i = 0; i < cleanHex.length; i += 2) {\n        bytes[i / 2] = Number.parseInt(cleanHex.slice(i, i + 2), 16);\n    }\n    return bytes;\n}\nexport function uint8ArrayToHex(bytes) {\n    return Array.from(bytes)\n        .map((b) => b.toString(16).padStart(2, \"0\"))\n        .join(\"\");\n}\n// instanceof\nexport class Class {\n    constructor(..._args) { }\n}\n","import { $constructor } from \"./core.js\";\nimport * as util from \"./util.js\";\nconst initializer = (inst, def) => {\n    inst.name = \"$ZodError\";\n    Object.defineProperty(inst, \"_zod\", {\n        value: inst._zod,\n        enumerable: false,\n    });\n    Object.defineProperty(inst, \"issues\", {\n        value: def,\n        enumerable: false,\n    });\n    inst.message = JSON.stringify(def, util.jsonStringifyReplacer, 2);\n    Object.defineProperty(inst, \"toString\", {\n        value: () => inst.message,\n        enumerable: false,\n    });\n};\nexport const $ZodError = $constructor(\"$ZodError\", initializer);\nexport const $ZodRealError = $constructor(\"$ZodError\", initializer, { Parent: Error });\nexport function flattenError(error, mapper = (issue) => issue.message) {\n    const fieldErrors = {};\n    const formErrors = [];\n    for (const sub of error.issues) {\n        if (sub.path.length > 0) {\n            fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n            fieldErrors[sub.path[0]].push(mapper(sub));\n        }\n        else {\n            formErrors.push(mapper(sub));\n        }\n    }\n    return { formErrors, fieldErrors };\n}\nexport function formatError(error, _mapper) {\n    const mapper = _mapper ||\n        function (issue) {\n            return issue.message;\n        };\n    const fieldErrors = { _errors: [] };\n    const processError = (error) => {\n        for (const issue of error.issues) {\n            if (issue.code === \"invalid_union\" && issue.errors.length) {\n                issue.errors.map((issues) => processError({ issues }));\n            }\n            else if (issue.code === \"invalid_key\") {\n                processError({ issues: issue.issues });\n            }\n            else if (issue.code === \"invalid_element\") {\n                processError({ issues: issue.issues });\n            }\n            else if (issue.path.length === 0) {\n                fieldErrors._errors.push(mapper(issue));\n            }\n            else {\n                let curr = fieldErrors;\n                let i = 0;\n                while (i < issue.path.length) {\n                    const el = issue.path[i];\n                    const terminal = i === issue.path.length - 1;\n                    if (!terminal) {\n                        curr[el] = curr[el] || { _errors: [] };\n                    }\n                    else {\n                        curr[el] = curr[el] || { _errors: [] };\n                        curr[el]._errors.push(mapper(issue));\n                    }\n                    curr = curr[el];\n                    i++;\n                }\n            }\n        }\n    };\n    processError(error);\n    return fieldErrors;\n}\nexport function treeifyError(error, _mapper) {\n    const mapper = _mapper ||\n        function (issue) {\n            return issue.message;\n        };\n    const result = { errors: [] };\n    const processError = (error, path = []) => {\n        var _a, _b;\n        for (const issue of error.issues) {\n            if (issue.code === \"invalid_union\" && issue.errors.length) {\n                // regular union error\n                issue.errors.map((issues) => processError({ issues }, issue.path));\n            }\n            else if (issue.code === \"invalid_key\") {\n                processError({ issues: issue.issues }, issue.path);\n            }\n            else if (issue.code === \"invalid_element\") {\n                processError({ issues: issue.issues }, issue.path);\n            }\n            else {\n                const fullpath = [...path, ...issue.path];\n                if (fullpath.length === 0) {\n                    result.errors.push(mapper(issue));\n                    continue;\n                }\n                let curr = result;\n                let i = 0;\n                while (i < fullpath.length) {\n                    const el = fullpath[i];\n                    const terminal = i === fullpath.length - 1;\n                    if (typeof el === \"string\") {\n                        curr.properties ?? (curr.properties = {});\n                        (_a = curr.properties)[el] ?? (_a[el] = { errors: [] });\n                        curr = curr.properties[el];\n                    }\n                    else {\n                        curr.items ?? (curr.items = []);\n                        (_b = curr.items)[el] ?? (_b[el] = { errors: [] });\n                        curr = curr.items[el];\n                    }\n                    if (terminal) {\n                        curr.errors.push(mapper(issue));\n                    }\n                    i++;\n                }\n            }\n        }\n    };\n    processError(error);\n    return result;\n}\n/** Format a ZodError as a human-readable string in the following form.\n *\n * From\n *\n * ```ts\n * ZodError {\n *   issues: [\n *     {\n *       expected: 'string',\n *       code: 'invalid_type',\n *       path: [ 'username' ],\n *       message: 'Invalid input: expected string'\n *     },\n *     {\n *       expected: 'number',\n *       code: 'invalid_type',\n *       path: [ 'favoriteNumbers', 1 ],\n *       message: 'Invalid input: expected number'\n *     }\n *   ];\n * }\n * ```\n *\n * to\n *\n * ```\n * username\n *   ✖ Expected number, received string at \"username\n * favoriteNumbers[0]\n *   ✖ Invalid input: expected number\n * ```\n */\nexport function toDotPath(_path) {\n    const segs = [];\n    const path = _path.map((seg) => (typeof seg === \"object\" ? seg.key : seg));\n    for (const seg of path) {\n        if (typeof seg === \"number\")\n            segs.push(`[${seg}]`);\n        else if (typeof seg === \"symbol\")\n            segs.push(`[${JSON.stringify(String(seg))}]`);\n        else if (/[^\\w$]/.test(seg))\n            segs.push(`[${JSON.stringify(seg)}]`);\n        else {\n            if (segs.length)\n                segs.push(\".\");\n            segs.push(seg);\n        }\n    }\n    return segs.join(\"\");\n}\nexport function prettifyError(error) {\n    const lines = [];\n    // sort by path length\n    const issues = [...error.issues].sort((a, b) => (a.path ?? []).length - (b.path ?? []).length);\n    // Process each issue\n    for (const issue of issues) {\n        lines.push(`✖ ${issue.message}`);\n        if (issue.path?.length)\n            lines.push(`  → at ${toDotPath(issue.path)}`);\n    }\n    // Convert Map to formatted string\n    return lines.join(\"\\n\");\n}\n","import * as core from \"./core.js\";\nimport * as errors from \"./errors.js\";\nimport * as util from \"./util.js\";\nexport const _parse = (_Err) => (schema, value, _ctx, _params) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: false }) : { async: false };\n    const result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise) {\n        throw new core.$ZodAsyncError();\n    }\n    if (result.issues.length) {\n        const e = new (_params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));\n        util.captureStackTrace(e, _params?.callee);\n        throw e;\n    }\n    return result.value;\n};\nexport const parse = /* @__PURE__*/ _parse(errors.$ZodRealError);\nexport const _parseAsync = (_Err) => async (schema, value, _ctx, params) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: true }) : { async: true };\n    let result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise)\n        result = await result;\n    if (result.issues.length) {\n        const e = new (params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));\n        util.captureStackTrace(e, params?.callee);\n        throw e;\n    }\n    return result.value;\n};\nexport const parseAsync = /* @__PURE__*/ _parseAsync(errors.$ZodRealError);\nexport const _safeParse = (_Err) => (schema, value, _ctx) => {\n    const ctx = _ctx ? { ..._ctx, async: false } : { async: false };\n    const result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise) {\n        throw new core.$ZodAsyncError();\n    }\n    return result.issues.length\n        ? {\n            success: false,\n            error: new (_Err ?? errors.$ZodError)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n        }\n        : { success: true, data: result.value };\n};\nexport const safeParse = /* @__PURE__*/ _safeParse(errors.$ZodRealError);\nexport const _safeParseAsync = (_Err) => async (schema, value, _ctx) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: true }) : { async: true };\n    let result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise)\n        result = await result;\n    return result.issues.length\n        ? {\n            success: false,\n            error: new _Err(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n        }\n        : { success: true, data: result.value };\n};\nexport const safeParseAsync = /* @__PURE__*/ _safeParseAsync(errors.$ZodRealError);\nexport const _encode = (_Err) => (schema, value, _ctx) => {\n    const ctx = _ctx ? Object.assign(_ctx, { direction: \"backward\" }) : { direction: \"backward\" };\n    return _parse(_Err)(schema, value, ctx);\n};\nexport const encode = /* @__PURE__*/ _encode(errors.$ZodRealError);\nexport const _decode = (_Err) => (schema, value, _ctx) => {\n    return _parse(_Err)(schema, value, _ctx);\n};\nexport const decode = /* @__PURE__*/ _decode(errors.$ZodRealError);\nexport const _encodeAsync = (_Err) => async (schema, value, _ctx) => {\n    const ctx = _ctx ? Object.assign(_ctx, { direction: \"backward\" }) : { direction: \"backward\" };\n    return _parseAsync(_Err)(schema, value, ctx);\n};\nexport const encodeAsync = /* @__PURE__*/ _encodeAsync(errors.$ZodRealError);\nexport const _decodeAsync = (_Err) => async (schema, value, _ctx) => {\n    return _parseAsync(_Err)(schema, value, _ctx);\n};\nexport const decodeAsync = /* @__PURE__*/ _decodeAsync(errors.$ZodRealError);\nexport const _safeEncode = (_Err) => (schema, value, _ctx) => {\n    const ctx = _ctx ? Object.assign(_ctx, { direction: \"backward\" }) : { direction: \"backward\" };\n    return _safeParse(_Err)(schema, value, ctx);\n};\nexport const safeEncode = /* @__PURE__*/ _safeEncode(errors.$ZodRealError);\nexport const _safeDecode = (_Err) => (schema, value, _ctx) => {\n    return _safeParse(_Err)(schema, value, _ctx);\n};\nexport const safeDecode = /* @__PURE__*/ _safeDecode(errors.$ZodRealError);\nexport const _safeEncodeAsync = (_Err) => async (schema, value, _ctx) => {\n    const ctx = _ctx ? Object.assign(_ctx, { direction: \"backward\" }) : { direction: \"backward\" };\n    return _safeParseAsync(_Err)(schema, value, ctx);\n};\nexport const safeEncodeAsync = /* @__PURE__*/ _safeEncodeAsync(errors.$ZodRealError);\nexport const _safeDecodeAsync = (_Err) => async (schema, value, _ctx) => {\n    return _safeParseAsync(_Err)(schema, value, _ctx);\n};\nexport const safeDecodeAsync = /* @__PURE__*/ _safeDecodeAsync(errors.$ZodRealError);\n","export const cuid = /^[cC][^\\s-]{8,}$/;\nexport const cuid2 = /^[0-9a-z]+$/;\nexport const ulid = /^[0-9A-HJKMNP-TV-Za-hjkmnp-tv-z]{26}$/;\nexport const xid = /^[0-9a-vA-V]{20}$/;\nexport const ksuid = /^[A-Za-z0-9]{27}$/;\nexport const nanoid = /^[a-zA-Z0-9_-]{21}$/;\n/** ISO 8601-1 duration regex. Does not support the 8601-2 extensions like negative durations or fractional/negative components. */\nexport const duration = /^P(?:(\\d+W)|(?!.*W)(?=\\d|T\\d)(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+([.,]\\d+)?S)?)?)$/;\n/** Implements ISO 8601-2 extensions like explicit +- prefixes, mixing weeks with other units, and fractional/negative components. */\nexport const extendedDuration = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n/** A regex for any UUID-like identifier: 8-4-4-4-12 hex pattern */\nexport const guid = /^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})$/;\n/** Returns a regex for validating an RFC 9562/4122 UUID.\n *\n * @param version Optionally specify a version 1-8. If no version is specified, all versions are supported. */\nexport const uuid = (version) => {\n    if (!version)\n        return /^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/;\n    return new RegExp(`^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-${version}[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12})$`);\n};\nexport const uuid4 = /*@__PURE__*/ uuid(4);\nexport const uuid6 = /*@__PURE__*/ uuid(6);\nexport const uuid7 = /*@__PURE__*/ uuid(7);\n/** Practical email validation */\nexport const email = /^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$/;\n/** Equivalent to the HTML5 input[type=email] validation implemented by browsers. Source: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email */\nexport const html5Email = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/** The classic emailregex.com regex for RFC 5322-compliant emails */\nexport const rfc5322Email = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n/** A loose regex that allows Unicode characters, enforces length limits, and that's about it. */\nexport const unicodeEmail = /^[^\\s@\"]{1,64}@[^\\s@]{1,255}$/u;\nexport const idnEmail = unicodeEmail;\nexport const browserEmail = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emoji = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nexport function emoji() {\n    return new RegExp(_emoji, \"u\");\n}\nexport const ipv4 = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nexport const ipv6 = /^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$/;\nexport const cidrv4 = /^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/([0-9]|[1-2][0-9]|3[0-2])$/;\nexport const cidrv6 = /^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nexport const base64 = /^$|^(?:[0-9a-zA-Z+/]{4})*(?:(?:[0-9a-zA-Z+/]{2}==)|(?:[0-9a-zA-Z+/]{3}=))?$/;\nexport const base64url = /^[A-Za-z0-9_-]*$/;\n// based on https://stackoverflow.com/questions/106179/regular-expression-to-match-dns-hostname-or-ip-address\n// export const hostname: RegExp = /^([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+$/;\nexport const hostname = /^(?=.{1,253}\\.?$)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[-0-9a-zA-Z]{0,61}[0-9a-zA-Z])?)*\\.?$/;\nexport const domain = /^([a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,}$/;\n// https://blog.stevenlevithan.com/archives/validate-phone-number#r4-3 (regex sans spaces)\nexport const e164 = /^\\+(?:[0-9]){6,14}[0-9]$/;\n// const dateSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateSource = `(?:(?:\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\\\d|30)|(?:02)-(?:0[1-9]|1\\\\d|2[0-8])))`;\nexport const date = /*@__PURE__*/ new RegExp(`^${dateSource}$`);\nfunction timeSource(args) {\n    const hhmm = `(?:[01]\\\\d|2[0-3]):[0-5]\\\\d`;\n    const regex = typeof args.precision === \"number\"\n        ? args.precision === -1\n            ? `${hhmm}`\n            : args.precision === 0\n                ? `${hhmm}:[0-5]\\\\d`\n                : `${hhmm}:[0-5]\\\\d\\\\.\\\\d{${args.precision}}`\n        : `${hhmm}(?::[0-5]\\\\d(?:\\\\.\\\\d+)?)?`;\n    return regex;\n}\nexport function time(args) {\n    return new RegExp(`^${timeSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetime(args) {\n    const time = timeSource({ precision: args.precision });\n    const opts = [\"Z\"];\n    if (args.local)\n        opts.push(\"\");\n    // if (args.offset) opts.push(`([+-]\\\\d{2}:\\\\d{2})`);\n    if (args.offset)\n        opts.push(`([+-](?:[01]\\\\d|2[0-3]):[0-5]\\\\d)`);\n    const timeRegex = `${time}(?:${opts.join(\"|\")})`;\n    return new RegExp(`^${dateSource}T(?:${timeRegex})$`);\n}\nexport const string = (params) => {\n    const regex = params ? `[\\\\s\\\\S]{${params?.minimum ?? 0},${params?.maximum ?? \"\"}}` : `[\\\\s\\\\S]*`;\n    return new RegExp(`^${regex}$`);\n};\nexport const bigint = /^-?\\d+n?$/;\nexport const integer = /^-?\\d+$/;\nexport const number = /^-?\\d+(?:\\.\\d+)?/;\nexport const boolean = /^(?:true|false)$/i;\nconst _null = /^null$/i;\nexport { _null as null };\nconst _undefined = /^undefined$/i;\nexport { _undefined as undefined };\n// regex for string with no uppercase letters\nexport const lowercase = /^[^A-Z]*$/;\n// regex for string with no lowercase letters\nexport const uppercase = /^[^a-z]*$/;\n// regex for hexadecimal strings (any length)\nexport const hex = /^[0-9a-fA-F]*$/;\n// Hash regexes for different algorithms and encodings\n// Helper function to create base64 regex with exact length and padding\nfunction fixedBase64(bodyLength, padding) {\n    return new RegExp(`^[A-Za-z0-9+/]{${bodyLength}}${padding}$`);\n}\n// Helper function to create base64url regex with exact length (no padding)\nfunction fixedBase64url(length) {\n    return new RegExp(`^[A-Za-z0-9_-]{${length}}$`);\n}\n// MD5 (16 bytes): base64 = 24 chars total (22 + \"==\")\nexport const md5_hex = /^[0-9a-fA-F]{32}$/;\nexport const md5_base64 = /*@__PURE__*/ fixedBase64(22, \"==\");\nexport const md5_base64url = /*@__PURE__*/ fixedBase64url(22);\n// SHA1 (20 bytes): base64 = 28 chars total (27 + \"=\")\nexport const sha1_hex = /^[0-9a-fA-F]{40}$/;\nexport const sha1_base64 = /*@__PURE__*/ fixedBase64(27, \"=\");\nexport const sha1_base64url = /*@__PURE__*/ fixedBase64url(27);\n// SHA256 (32 bytes): base64 = 44 chars total (43 + \"=\")\nexport const sha256_hex = /^[0-9a-fA-F]{64}$/;\nexport const sha256_base64 = /*@__PURE__*/ fixedBase64(43, \"=\");\nexport const sha256_base64url = /*@__PURE__*/ fixedBase64url(43);\n// SHA384 (48 bytes): base64 = 64 chars total (no padding)\nexport const sha384_hex = /^[0-9a-fA-F]{96}$/;\nexport const sha384_base64 = /*@__PURE__*/ fixedBase64(64, \"\");\nexport const sha384_base64url = /*@__PURE__*/ fixedBase64url(64);\n// SHA512 (64 bytes): base64 = 88 chars total (86 + \"==\")\nexport const sha512_hex = /^[0-9a-fA-F]{128}$/;\nexport const sha512_base64 = /*@__PURE__*/ fixedBase64(86, \"==\");\nexport const sha512_base64url = /*@__PURE__*/ fixedBase64url(86);\n","// import { $ZodType } from \"./schemas.js\";\nimport * as core from \"./core.js\";\nimport * as regexes from \"./regexes.js\";\nimport * as util from \"./util.js\";\nexport const $ZodCheck = /*@__PURE__*/ core.$constructor(\"$ZodCheck\", (inst, def) => {\n    var _a;\n    inst._zod ?? (inst._zod = {});\n    inst._zod.def = def;\n    (_a = inst._zod).onattach ?? (_a.onattach = []);\n});\nconst numericOriginMap = {\n    number: \"number\",\n    bigint: \"bigint\",\n    object: \"date\",\n};\nexport const $ZodCheckLessThan = /*@__PURE__*/ core.$constructor(\"$ZodCheckLessThan\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const origin = numericOriginMap[typeof def.value];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        const curr = (def.inclusive ? bag.maximum : bag.exclusiveMaximum) ?? Number.POSITIVE_INFINITY;\n        if (def.value < curr) {\n            if (def.inclusive)\n                bag.maximum = def.value;\n            else\n                bag.exclusiveMaximum = def.value;\n        }\n    });\n    inst._zod.check = (payload) => {\n        if (def.inclusive ? payload.value <= def.value : payload.value < def.value) {\n            return;\n        }\n        payload.issues.push({\n            origin,\n            code: \"too_big\",\n            maximum: def.value,\n            input: payload.value,\n            inclusive: def.inclusive,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckGreaterThan = /*@__PURE__*/ core.$constructor(\"$ZodCheckGreaterThan\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const origin = numericOriginMap[typeof def.value];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        const curr = (def.inclusive ? bag.minimum : bag.exclusiveMinimum) ?? Number.NEGATIVE_INFINITY;\n        if (def.value > curr) {\n            if (def.inclusive)\n                bag.minimum = def.value;\n            else\n                bag.exclusiveMinimum = def.value;\n        }\n    });\n    inst._zod.check = (payload) => {\n        if (def.inclusive ? payload.value >= def.value : payload.value > def.value) {\n            return;\n        }\n        payload.issues.push({\n            origin,\n            code: \"too_small\",\n            minimum: def.value,\n            input: payload.value,\n            inclusive: def.inclusive,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMultipleOf = \n/*@__PURE__*/ core.$constructor(\"$ZodCheckMultipleOf\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        var _a;\n        (_a = inst._zod.bag).multipleOf ?? (_a.multipleOf = def.value);\n    });\n    inst._zod.check = (payload) => {\n        if (typeof payload.value !== typeof def.value)\n            throw new Error(\"Cannot mix number and bigint in multiple_of check.\");\n        const isMultiple = typeof payload.value === \"bigint\"\n            ? payload.value % def.value === BigInt(0)\n            : util.floatSafeRemainder(payload.value, def.value) === 0;\n        if (isMultiple)\n            return;\n        payload.issues.push({\n            origin: typeof payload.value,\n            code: \"not_multiple_of\",\n            divisor: def.value,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckNumberFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckNumberFormat\", (inst, def) => {\n    $ZodCheck.init(inst, def); // no format checks\n    def.format = def.format || \"float64\";\n    const isInt = def.format?.includes(\"int\");\n    const origin = isInt ? \"int\" : \"number\";\n    const [minimum, maximum] = util.NUMBER_FORMAT_RANGES[def.format];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        bag.minimum = minimum;\n        bag.maximum = maximum;\n        if (isInt)\n            bag.pattern = regexes.integer;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        if (isInt) {\n            if (!Number.isInteger(input)) {\n                // invalid_format issue\n                // payload.issues.push({\n                //   expected: def.format,\n                //   format: def.format,\n                //   code: \"invalid_format\",\n                //   input,\n                //   inst,\n                // });\n                // invalid_type issue\n                payload.issues.push({\n                    expected: origin,\n                    format: def.format,\n                    code: \"invalid_type\",\n                    continue: false,\n                    input,\n                    inst,\n                });\n                return;\n                // not_multiple_of issue\n                // payload.issues.push({\n                //   code: \"not_multiple_of\",\n                //   origin: \"number\",\n                //   input,\n                //   inst,\n                //   divisor: 1,\n                // });\n            }\n            if (!Number.isSafeInteger(input)) {\n                if (input > 0) {\n                    // too_big\n                    payload.issues.push({\n                        input,\n                        code: \"too_big\",\n                        maximum: Number.MAX_SAFE_INTEGER,\n                        note: \"Integers must be within the safe integer range.\",\n                        inst,\n                        origin,\n                        continue: !def.abort,\n                    });\n                }\n                else {\n                    // too_small\n                    payload.issues.push({\n                        input,\n                        code: \"too_small\",\n                        minimum: Number.MIN_SAFE_INTEGER,\n                        note: \"Integers must be within the safe integer range.\",\n                        inst,\n                        origin,\n                        continue: !def.abort,\n                    });\n                }\n                return;\n            }\n        }\n        if (input < minimum) {\n            payload.issues.push({\n                origin: \"number\",\n                input,\n                code: \"too_small\",\n                minimum,\n                inclusive: true,\n                inst,\n                continue: !def.abort,\n            });\n        }\n        if (input > maximum) {\n            payload.issues.push({\n                origin: \"number\",\n                input,\n                code: \"too_big\",\n                maximum,\n                inst,\n            });\n        }\n    };\n});\nexport const $ZodCheckBigIntFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckBigIntFormat\", (inst, def) => {\n    $ZodCheck.init(inst, def); // no format checks\n    const [minimum, maximum] = util.BIGINT_FORMAT_RANGES[def.format];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        bag.minimum = minimum;\n        bag.maximum = maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        if (input < minimum) {\n            payload.issues.push({\n                origin: \"bigint\",\n                input,\n                code: \"too_small\",\n                minimum: minimum,\n                inclusive: true,\n                inst,\n                continue: !def.abort,\n            });\n        }\n        if (input > maximum) {\n            payload.issues.push({\n                origin: \"bigint\",\n                input,\n                code: \"too_big\",\n                maximum,\n                inst,\n            });\n        }\n    };\n});\nexport const $ZodCheckMaxSize = /*@__PURE__*/ core.$constructor(\"$ZodCheckMaxSize\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.maximum ?? Number.POSITIVE_INFINITY);\n        if (def.maximum < curr)\n            inst._zod.bag.maximum = def.maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size <= def.maximum)\n            return;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            code: \"too_big\",\n            maximum: def.maximum,\n            inclusive: true,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMinSize = /*@__PURE__*/ core.$constructor(\"$ZodCheckMinSize\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.minimum ?? Number.NEGATIVE_INFINITY);\n        if (def.minimum > curr)\n            inst._zod.bag.minimum = def.minimum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size >= def.minimum)\n            return;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            code: \"too_small\",\n            minimum: def.minimum,\n            inclusive: true,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckSizeEquals = /*@__PURE__*/ core.$constructor(\"$ZodCheckSizeEquals\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.minimum = def.size;\n        bag.maximum = def.size;\n        bag.size = def.size;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size === def.size)\n            return;\n        const tooBig = size > def.size;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            ...(tooBig ? { code: \"too_big\", maximum: def.size } : { code: \"too_small\", minimum: def.size }),\n            inclusive: true,\n            exact: true,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMaxLength = /*@__PURE__*/ core.$constructor(\"$ZodCheckMaxLength\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.maximum ?? Number.POSITIVE_INFINITY);\n        if (def.maximum < curr)\n            inst._zod.bag.maximum = def.maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length <= def.maximum)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        payload.issues.push({\n            origin,\n            code: \"too_big\",\n            maximum: def.maximum,\n            inclusive: true,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMinLength = /*@__PURE__*/ core.$constructor(\"$ZodCheckMinLength\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.minimum ?? Number.NEGATIVE_INFINITY);\n        if (def.minimum > curr)\n            inst._zod.bag.minimum = def.minimum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length >= def.minimum)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        payload.issues.push({\n            origin,\n            code: \"too_small\",\n            minimum: def.minimum,\n            inclusive: true,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckLengthEquals = /*@__PURE__*/ core.$constructor(\"$ZodCheckLengthEquals\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.minimum = def.length;\n        bag.maximum = def.length;\n        bag.length = def.length;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length === def.length)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        const tooBig = length > def.length;\n        payload.issues.push({\n            origin,\n            ...(tooBig ? { code: \"too_big\", maximum: def.length } : { code: \"too_small\", minimum: def.length }),\n            inclusive: true,\n            exact: true,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckStringFormat\", (inst, def) => {\n    var _a, _b;\n    $ZodCheck.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        if (def.pattern) {\n            bag.patterns ?? (bag.patterns = new Set());\n            bag.patterns.add(def.pattern);\n        }\n    });\n    if (def.pattern)\n        (_a = inst._zod).check ?? (_a.check = (payload) => {\n            def.pattern.lastIndex = 0;\n            if (def.pattern.test(payload.value))\n                return;\n            payload.issues.push({\n                origin: \"string\",\n                code: \"invalid_format\",\n                format: def.format,\n                input: payload.value,\n                ...(def.pattern ? { pattern: def.pattern.toString() } : {}),\n                inst,\n                continue: !def.abort,\n            });\n        });\n    else\n        (_b = inst._zod).check ?? (_b.check = () => { });\n});\nexport const $ZodCheckRegex = /*@__PURE__*/ core.$constructor(\"$ZodCheckRegex\", (inst, def) => {\n    $ZodCheckStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        def.pattern.lastIndex = 0;\n        if (def.pattern.test(payload.value))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"regex\",\n            input: payload.value,\n            pattern: def.pattern.toString(),\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckLowerCase = /*@__PURE__*/ core.$constructor(\"$ZodCheckLowerCase\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.lowercase);\n    $ZodCheckStringFormat.init(inst, def);\n});\nexport const $ZodCheckUpperCase = /*@__PURE__*/ core.$constructor(\"$ZodCheckUpperCase\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.uppercase);\n    $ZodCheckStringFormat.init(inst, def);\n});\nexport const $ZodCheckIncludes = /*@__PURE__*/ core.$constructor(\"$ZodCheckIncludes\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const escapedRegex = util.escapeRegex(def.includes);\n    const pattern = new RegExp(typeof def.position === \"number\" ? `^.{${def.position}}${escapedRegex}` : escapedRegex);\n    def.pattern = pattern;\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.includes(def.includes, def.position))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"includes\",\n            includes: def.includes,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckStartsWith = /*@__PURE__*/ core.$constructor(\"$ZodCheckStartsWith\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const pattern = new RegExp(`^${util.escapeRegex(def.prefix)}.*`);\n    def.pattern ?? (def.pattern = pattern);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.startsWith(def.prefix))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"starts_with\",\n            prefix: def.prefix,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckEndsWith = /*@__PURE__*/ core.$constructor(\"$ZodCheckEndsWith\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const pattern = new RegExp(`.*${util.escapeRegex(def.suffix)}$`);\n    def.pattern ?? (def.pattern = pattern);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.endsWith(def.suffix))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"ends_with\",\n            suffix: def.suffix,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\n///////////////////////////////////\n/////    $ZodCheckProperty    /////\n///////////////////////////////////\nfunction handleCheckPropertyResult(result, payload, property) {\n    if (result.issues.length) {\n        payload.issues.push(...util.prefixIssues(property, result.issues));\n    }\n}\nexport const $ZodCheckProperty = /*@__PURE__*/ core.$constructor(\"$ZodCheckProperty\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.check = (payload) => {\n        const result = def.schema._zod.run({\n            value: payload.value[def.property],\n            issues: [],\n        }, {});\n        if (result instanceof Promise) {\n            return result.then((result) => handleCheckPropertyResult(result, payload, def.property));\n        }\n        handleCheckPropertyResult(result, payload, def.property);\n        return;\n    };\n});\nexport const $ZodCheckMimeType = /*@__PURE__*/ core.$constructor(\"$ZodCheckMimeType\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const mimeSet = new Set(def.mime);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.mime = def.mime;\n    });\n    inst._zod.check = (payload) => {\n        if (mimeSet.has(payload.value.type))\n            return;\n        payload.issues.push({\n            code: \"invalid_value\",\n            values: def.mime,\n            input: payload.value.type,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckOverwrite = /*@__PURE__*/ core.$constructor(\"$ZodCheckOverwrite\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.check = (payload) => {\n        payload.value = def.tx(payload.value);\n    };\n});\n","export class Doc {\n    constructor(args = []) {\n        this.content = [];\n        this.indent = 0;\n        if (this)\n            this.args = args;\n    }\n    indented(fn) {\n        this.indent += 1;\n        fn(this);\n        this.indent -= 1;\n    }\n    write(arg) {\n        if (typeof arg === \"function\") {\n            arg(this, { execution: \"sync\" });\n            arg(this, { execution: \"async\" });\n            return;\n        }\n        const content = arg;\n        const lines = content.split(\"\\n\").filter((x) => x);\n        const minIndent = Math.min(...lines.map((x) => x.length - x.trimStart().length));\n        const dedented = lines.map((x) => x.slice(minIndent)).map((x) => \" \".repeat(this.indent * 2) + x);\n        for (const line of dedented) {\n            this.content.push(line);\n        }\n    }\n    compile() {\n        const F = Function;\n        const args = this?.args;\n        const content = this?.content ?? [``];\n        const lines = [...content.map((x) => `  ${x}`)];\n        // console.log(lines.join(\"\\n\"));\n        return new F(...args, lines.join(\"\\n\"));\n    }\n}\n","export const version = {\n    major: 4,\n    minor: 1,\n    patch: 11,\n};\n","import * as checks from \"./checks.js\";\nimport * as core from \"./core.js\";\nimport { Doc } from \"./doc.js\";\nimport { parse, parseAsync, safeParse, safeParseAsync } from \"./parse.js\";\nimport * as regexes from \"./regexes.js\";\nimport * as util from \"./util.js\";\nimport { version } from \"./versions.js\";\nexport const $ZodType = /*@__PURE__*/ core.$constructor(\"$ZodType\", (inst, def) => {\n    var _a;\n    inst ?? (inst = {});\n    inst._zod.def = def; // set _def property\n    inst._zod.bag = inst._zod.bag || {}; // initialize _bag object\n    inst._zod.version = version;\n    const checks = [...(inst._zod.def.checks ?? [])];\n    // if inst is itself a checks.$ZodCheck, run it as a check\n    if (inst._zod.traits.has(\"$ZodCheck\")) {\n        checks.unshift(inst);\n    }\n    for (const ch of checks) {\n        for (const fn of ch._zod.onattach) {\n            fn(inst);\n        }\n    }\n    if (checks.length === 0) {\n        // deferred initializer\n        // inst._zod.parse is not yet defined\n        (_a = inst._zod).deferred ?? (_a.deferred = []);\n        inst._zod.deferred?.push(() => {\n            inst._zod.run = inst._zod.parse;\n        });\n    }\n    else {\n        const runChecks = (payload, checks, ctx) => {\n            let isAborted = util.aborted(payload);\n            let asyncResult;\n            for (const ch of checks) {\n                if (ch._zod.def.when) {\n                    const shouldRun = ch._zod.def.when(payload);\n                    if (!shouldRun)\n                        continue;\n                }\n                else if (isAborted) {\n                    continue;\n                }\n                const currLen = payload.issues.length;\n                const _ = ch._zod.check(payload);\n                if (_ instanceof Promise && ctx?.async === false) {\n                    throw new core.$ZodAsyncError();\n                }\n                if (asyncResult || _ instanceof Promise) {\n                    asyncResult = (asyncResult ?? Promise.resolve()).then(async () => {\n                        await _;\n                        const nextLen = payload.issues.length;\n                        if (nextLen === currLen)\n                            return;\n                        if (!isAborted)\n                            isAborted = util.aborted(payload, currLen);\n                    });\n                }\n                else {\n                    const nextLen = payload.issues.length;\n                    if (nextLen === currLen)\n                        continue;\n                    if (!isAborted)\n                        isAborted = util.aborted(payload, currLen);\n                }\n            }\n            if (asyncResult) {\n                return asyncResult.then(() => {\n                    return payload;\n                });\n            }\n            return payload;\n        };\n        // const handleChecksResult = (\n        //   checkResult: ParsePayload,\n        //   originalResult: ParsePayload,\n        //   ctx: ParseContextInternal\n        // ): util.MaybeAsync<ParsePayload> => {\n        //   // if the checks mutated the value && there are no issues, re-parse the result\n        //   if (checkResult.value !== originalResult.value && !checkResult.issues.length)\n        //     return inst._zod.parse(checkResult, ctx);\n        //   return originalResult;\n        // };\n        const handleCanaryResult = (canary, payload, ctx) => {\n            // abort if the canary is aborted\n            if (util.aborted(canary)) {\n                canary.aborted = true;\n                return canary;\n            }\n            // run checks first, then\n            const checkResult = runChecks(payload, checks, ctx);\n            if (checkResult instanceof Promise) {\n                if (ctx.async === false)\n                    throw new core.$ZodAsyncError();\n                return checkResult.then((checkResult) => inst._zod.parse(checkResult, ctx));\n            }\n            return inst._zod.parse(checkResult, ctx);\n        };\n        inst._zod.run = (payload, ctx) => {\n            if (ctx.skipChecks) {\n                return inst._zod.parse(payload, ctx);\n            }\n            if (ctx.direction === \"backward\") {\n                // run canary\n                // initial pass (no checks)\n                const canary = inst._zod.parse({ value: payload.value, issues: [] }, { ...ctx, skipChecks: true });\n                if (canary instanceof Promise) {\n                    return canary.then((canary) => {\n                        return handleCanaryResult(canary, payload, ctx);\n                    });\n                }\n                return handleCanaryResult(canary, payload, ctx);\n            }\n            // forward\n            const result = inst._zod.parse(payload, ctx);\n            if (result instanceof Promise) {\n                if (ctx.async === false)\n                    throw new core.$ZodAsyncError();\n                return result.then((result) => runChecks(result, checks, ctx));\n            }\n            return runChecks(result, checks, ctx);\n        };\n    }\n    inst[\"~standard\"] = {\n        validate: (value) => {\n            try {\n                const r = safeParse(inst, value);\n                return r.success ? { value: r.data } : { issues: r.error?.issues };\n            }\n            catch (_) {\n                return safeParseAsync(inst, value).then((r) => (r.success ? { value: r.data } : { issues: r.error?.issues }));\n            }\n        },\n        vendor: \"zod\",\n        version: 1,\n    };\n});\nexport { clone } from \"./util.js\";\nexport const $ZodString = /*@__PURE__*/ core.$constructor(\"$ZodString\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = [...(inst?._zod.bag?.patterns ?? [])].pop() ?? regexes.string(inst._zod.bag);\n    inst._zod.parse = (payload, _) => {\n        if (def.coerce)\n            try {\n                payload.value = String(payload.value);\n            }\n            catch (_) { }\n        if (typeof payload.value === \"string\")\n            return payload;\n        payload.issues.push({\n            expected: \"string\",\n            code: \"invalid_type\",\n            input: payload.value,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodStringFormat\", (inst, def) => {\n    // check initialization must come first\n    checks.$ZodCheckStringFormat.init(inst, def);\n    $ZodString.init(inst, def);\n});\nexport const $ZodGUID = /*@__PURE__*/ core.$constructor(\"$ZodGUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.guid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodUUID = /*@__PURE__*/ core.$constructor(\"$ZodUUID\", (inst, def) => {\n    if (def.version) {\n        const versionMap = {\n            v1: 1,\n            v2: 2,\n            v3: 3,\n            v4: 4,\n            v5: 5,\n            v6: 6,\n            v7: 7,\n            v8: 8,\n        };\n        const v = versionMap[def.version];\n        if (v === undefined)\n            throw new Error(`Invalid UUID version: \"${def.version}\"`);\n        def.pattern ?? (def.pattern = regexes.uuid(v));\n    }\n    else\n        def.pattern ?? (def.pattern = regexes.uuid());\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodEmail = /*@__PURE__*/ core.$constructor(\"$ZodEmail\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.email);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodURL = /*@__PURE__*/ core.$constructor(\"$ZodURL\", (inst, def) => {\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        try {\n            // Trim whitespace from input\n            const trimmed = payload.value.trim();\n            // @ts-ignore\n            const url = new URL(trimmed);\n            if (def.hostname) {\n                def.hostname.lastIndex = 0;\n                if (!def.hostname.test(url.hostname)) {\n                    payload.issues.push({\n                        code: \"invalid_format\",\n                        format: \"url\",\n                        note: \"Invalid hostname\",\n                        pattern: regexes.hostname.source,\n                        input: payload.value,\n                        inst,\n                        continue: !def.abort,\n                    });\n                }\n            }\n            if (def.protocol) {\n                def.protocol.lastIndex = 0;\n                if (!def.protocol.test(url.protocol.endsWith(\":\") ? url.protocol.slice(0, -1) : url.protocol)) {\n                    payload.issues.push({\n                        code: \"invalid_format\",\n                        format: \"url\",\n                        note: \"Invalid protocol\",\n                        pattern: def.protocol.source,\n                        input: payload.value,\n                        inst,\n                        continue: !def.abort,\n                    });\n                }\n            }\n            // Set the output value based on normalize flag\n            if (def.normalize) {\n                // Use normalized URL\n                payload.value = url.href;\n            }\n            else {\n                // Preserve the original input (trimmed)\n                payload.value = trimmed;\n            }\n            return;\n        }\n        catch (_) {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"url\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\nexport const $ZodEmoji = /*@__PURE__*/ core.$constructor(\"$ZodEmoji\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.emoji());\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodNanoID = /*@__PURE__*/ core.$constructor(\"$ZodNanoID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.nanoid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCUID = /*@__PURE__*/ core.$constructor(\"$ZodCUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cuid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCUID2 = /*@__PURE__*/ core.$constructor(\"$ZodCUID2\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cuid2);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodULID = /*@__PURE__*/ core.$constructor(\"$ZodULID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ulid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodXID = /*@__PURE__*/ core.$constructor(\"$ZodXID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.xid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodKSUID = /*@__PURE__*/ core.$constructor(\"$ZodKSUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ksuid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISODateTime = /*@__PURE__*/ core.$constructor(\"$ZodISODateTime\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.datetime(def));\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISODate = /*@__PURE__*/ core.$constructor(\"$ZodISODate\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.date);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISOTime = /*@__PURE__*/ core.$constructor(\"$ZodISOTime\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.time(def));\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISODuration = /*@__PURE__*/ core.$constructor(\"$ZodISODuration\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.duration);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodIPv4 = /*@__PURE__*/ core.$constructor(\"$ZodIPv4\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ipv4);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = `ipv4`;\n    });\n});\nexport const $ZodIPv6 = /*@__PURE__*/ core.$constructor(\"$ZodIPv6\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ipv6);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = `ipv6`;\n    });\n    inst._zod.check = (payload) => {\n        try {\n            // @ts-ignore\n            new URL(`http://[${payload.value}]`);\n            // return;\n        }\n        catch {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"ipv6\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\nexport const $ZodCIDRv4 = /*@__PURE__*/ core.$constructor(\"$ZodCIDRv4\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cidrv4);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCIDRv6 = /*@__PURE__*/ core.$constructor(\"$ZodCIDRv6\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cidrv6); // not used for validation\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        const parts = payload.value.split(\"/\");\n        try {\n            if (parts.length !== 2)\n                throw new Error();\n            const [address, prefix] = parts;\n            if (!prefix)\n                throw new Error();\n            const prefixNum = Number(prefix);\n            if (`${prefixNum}` !== prefix)\n                throw new Error();\n            if (prefixNum < 0 || prefixNum > 128)\n                throw new Error();\n            // @ts-ignore\n            new URL(`http://[${address}]`);\n        }\n        catch {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"cidrv6\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\n//////////////////////////////   ZodBase64   //////////////////////////////\nexport function isValidBase64(data) {\n    if (data === \"\")\n        return true;\n    if (data.length % 4 !== 0)\n        return false;\n    try {\n        // @ts-ignore\n        atob(data);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexport const $ZodBase64 = /*@__PURE__*/ core.$constructor(\"$ZodBase64\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.base64);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.contentEncoding = \"base64\";\n    });\n    inst._zod.check = (payload) => {\n        if (isValidBase64(payload.value))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"base64\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\n//////////////////////////////   ZodBase64   //////////////////////////////\nexport function isValidBase64URL(data) {\n    if (!regexes.base64url.test(data))\n        return false;\n    const base64 = data.replace(/[-_]/g, (c) => (c === \"-\" ? \"+\" : \"/\"));\n    const padded = base64.padEnd(Math.ceil(base64.length / 4) * 4, \"=\");\n    return isValidBase64(padded);\n}\nexport const $ZodBase64URL = /*@__PURE__*/ core.$constructor(\"$ZodBase64URL\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.base64url);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.contentEncoding = \"base64url\";\n    });\n    inst._zod.check = (payload) => {\n        if (isValidBase64URL(payload.value))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"base64url\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodE164 = /*@__PURE__*/ core.$constructor(\"$ZodE164\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.e164);\n    $ZodStringFormat.init(inst, def);\n});\n//////////////////////////////   ZodJWT   //////////////////////////////\nexport function isValidJWT(token, algorithm = null) {\n    try {\n        const tokensParts = token.split(\".\");\n        if (tokensParts.length !== 3)\n            return false;\n        const [header] = tokensParts;\n        if (!header)\n            return false;\n        // @ts-ignore\n        const parsedHeader = JSON.parse(atob(header));\n        if (\"typ\" in parsedHeader && parsedHeader?.typ !== \"JWT\")\n            return false;\n        if (!parsedHeader.alg)\n            return false;\n        if (algorithm && (!(\"alg\" in parsedHeader) || parsedHeader.alg !== algorithm))\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexport const $ZodJWT = /*@__PURE__*/ core.$constructor(\"$ZodJWT\", (inst, def) => {\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        if (isValidJWT(payload.value, def.alg))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"jwt\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCustomStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodCustomStringFormat\", (inst, def) => {\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        if (def.fn(payload.value))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: def.format,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodNumber = /*@__PURE__*/ core.$constructor(\"$ZodNumber\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = inst._zod.bag.pattern ?? regexes.number;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = Number(payload.value);\n            }\n            catch (_) { }\n        const input = payload.value;\n        if (typeof input === \"number\" && !Number.isNaN(input) && Number.isFinite(input)) {\n            return payload;\n        }\n        const received = typeof input === \"number\"\n            ? Number.isNaN(input)\n                ? \"NaN\"\n                : !Number.isFinite(input)\n                    ? \"Infinity\"\n                    : undefined\n            : undefined;\n        payload.issues.push({\n            expected: \"number\",\n            code: \"invalid_type\",\n            input,\n            inst,\n            ...(received ? { received } : {}),\n        });\n        return payload;\n    };\n});\nexport const $ZodNumberFormat = /*@__PURE__*/ core.$constructor(\"$ZodNumber\", (inst, def) => {\n    checks.$ZodCheckNumberFormat.init(inst, def);\n    $ZodNumber.init(inst, def); // no format checksp\n});\nexport const $ZodBoolean = /*@__PURE__*/ core.$constructor(\"$ZodBoolean\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.boolean;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = Boolean(payload.value);\n            }\n            catch (_) { }\n        const input = payload.value;\n        if (typeof input === \"boolean\")\n            return payload;\n        payload.issues.push({\n            expected: \"boolean\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodBigInt = /*@__PURE__*/ core.$constructor(\"$ZodBigInt\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.bigint;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = BigInt(payload.value);\n            }\n            catch (_) { }\n        if (typeof payload.value === \"bigint\")\n            return payload;\n        payload.issues.push({\n            expected: \"bigint\",\n            code: \"invalid_type\",\n            input: payload.value,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodBigIntFormat = /*@__PURE__*/ core.$constructor(\"$ZodBigInt\", (inst, def) => {\n    checks.$ZodCheckBigIntFormat.init(inst, def);\n    $ZodBigInt.init(inst, def); // no format checks\n});\nexport const $ZodSymbol = /*@__PURE__*/ core.$constructor(\"$ZodSymbol\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (typeof input === \"symbol\")\n            return payload;\n        payload.issues.push({\n            expected: \"symbol\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodUndefined = /*@__PURE__*/ core.$constructor(\"$ZodUndefined\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.undefined;\n    inst._zod.values = new Set([undefined]);\n    inst._zod.optin = \"optional\";\n    inst._zod.optout = \"optional\";\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (typeof input === \"undefined\")\n            return payload;\n        payload.issues.push({\n            expected: \"undefined\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodNull = /*@__PURE__*/ core.$constructor(\"$ZodNull\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.null;\n    inst._zod.values = new Set([null]);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (input === null)\n            return payload;\n        payload.issues.push({\n            expected: \"null\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodAny = /*@__PURE__*/ core.$constructor(\"$ZodAny\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload) => payload;\n});\nexport const $ZodUnknown = /*@__PURE__*/ core.$constructor(\"$ZodUnknown\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload) => payload;\n});\nexport const $ZodNever = /*@__PURE__*/ core.$constructor(\"$ZodNever\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        payload.issues.push({\n            expected: \"never\",\n            code: \"invalid_type\",\n            input: payload.value,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodVoid = /*@__PURE__*/ core.$constructor(\"$ZodVoid\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (typeof input === \"undefined\")\n            return payload;\n        payload.issues.push({\n            expected: \"void\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodDate = /*@__PURE__*/ core.$constructor(\"$ZodDate\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce) {\n            try {\n                payload.value = new Date(payload.value);\n            }\n            catch (_err) { }\n        }\n        const input = payload.value;\n        const isDate = input instanceof Date;\n        const isValidDate = isDate && !Number.isNaN(input.getTime());\n        if (isValidDate)\n            return payload;\n        payload.issues.push({\n            expected: \"date\",\n            code: \"invalid_type\",\n            input,\n            ...(isDate ? { received: \"Invalid Date\" } : {}),\n            inst,\n        });\n        return payload;\n    };\n});\nfunction handleArrayResult(result, final, index) {\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(index, result.issues));\n    }\n    final.value[index] = result.value;\n}\nexport const $ZodArray = /*@__PURE__*/ core.$constructor(\"$ZodArray\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!Array.isArray(input)) {\n            payload.issues.push({\n                expected: \"array\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        payload.value = Array(input.length);\n        const proms = [];\n        for (let i = 0; i < input.length; i++) {\n            const item = input[i];\n            const result = def.element._zod.run({\n                value: item,\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleArrayResult(result, payload, i)));\n            }\n            else {\n                handleArrayResult(result, payload, i);\n            }\n        }\n        if (proms.length) {\n            return Promise.all(proms).then(() => payload);\n        }\n        return payload; //handleArrayResultsAsync(parseResults, final);\n    };\n});\nfunction handlePropertyResult(result, final, key, input) {\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(key, result.issues));\n    }\n    if (result.value === undefined) {\n        if (key in input) {\n            final.value[key] = undefined;\n        }\n    }\n    else {\n        final.value[key] = result.value;\n    }\n}\nfunction normalizeDef(def) {\n    const keys = Object.keys(def.shape);\n    for (const k of keys) {\n        if (!def.shape?.[k]?._zod?.traits?.has(\"$ZodType\")) {\n            throw new Error(`Invalid element at key \"${k}\": expected a Zod schema`);\n        }\n    }\n    const okeys = util.optionalKeys(def.shape);\n    return {\n        ...def,\n        keys,\n        keySet: new Set(keys),\n        numKeys: keys.length,\n        optionalKeys: new Set(okeys),\n    };\n}\nfunction handleCatchall(proms, input, payload, ctx, def, inst) {\n    const unrecognized = [];\n    // iterate over input keys\n    const keySet = def.keySet;\n    const _catchall = def.catchall._zod;\n    const t = _catchall.def.type;\n    for (const key of Object.keys(input)) {\n        if (keySet.has(key))\n            continue;\n        if (t === \"never\") {\n            unrecognized.push(key);\n            continue;\n        }\n        const r = _catchall.run({ value: input[key], issues: [] }, ctx);\n        if (r instanceof Promise) {\n            proms.push(r.then((r) => handlePropertyResult(r, payload, key, input)));\n        }\n        else {\n            handlePropertyResult(r, payload, key, input);\n        }\n    }\n    if (unrecognized.length) {\n        payload.issues.push({\n            code: \"unrecognized_keys\",\n            keys: unrecognized,\n            input,\n            inst,\n        });\n    }\n    if (!proms.length)\n        return payload;\n    return Promise.all(proms).then(() => {\n        return payload;\n    });\n}\nexport const $ZodObject = /*@__PURE__*/ core.$constructor(\"$ZodObject\", (inst, def) => {\n    // requires cast because technically $ZodObject doesn't extend\n    $ZodType.init(inst, def);\n    // const sh = def.shape;\n    const desc = Object.getOwnPropertyDescriptor(def, \"shape\");\n    if (!desc?.get) {\n        const sh = def.shape;\n        Object.defineProperty(def, \"shape\", {\n            get: () => {\n                const newSh = { ...sh };\n                Object.defineProperty(def, \"shape\", {\n                    value: newSh,\n                });\n                return newSh;\n            },\n        });\n    }\n    const _normalized = util.cached(() => normalizeDef(def));\n    util.defineLazy(inst._zod, \"propValues\", () => {\n        const shape = def.shape;\n        const propValues = {};\n        for (const key in shape) {\n            const field = shape[key]._zod;\n            if (field.values) {\n                propValues[key] ?? (propValues[key] = new Set());\n                for (const v of field.values)\n                    propValues[key].add(v);\n            }\n        }\n        return propValues;\n    });\n    const isObject = util.isObject;\n    const catchall = def.catchall;\n    let value;\n    inst._zod.parse = (payload, ctx) => {\n        value ?? (value = _normalized.value);\n        const input = payload.value;\n        if (!isObject(input)) {\n            payload.issues.push({\n                expected: \"object\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        payload.value = {};\n        const proms = [];\n        const shape = value.shape;\n        for (const key of value.keys) {\n            const el = shape[key];\n            const r = el._zod.run({ value: input[key], issues: [] }, ctx);\n            if (r instanceof Promise) {\n                proms.push(r.then((r) => handlePropertyResult(r, payload, key, input)));\n            }\n            else {\n                handlePropertyResult(r, payload, key, input);\n            }\n        }\n        if (!catchall) {\n            return proms.length ? Promise.all(proms).then(() => payload) : payload;\n        }\n        return handleCatchall(proms, input, payload, ctx, _normalized.value, inst);\n    };\n});\nexport const $ZodObjectJIT = /*@__PURE__*/ core.$constructor(\"$ZodObjectJIT\", (inst, def) => {\n    // requires cast because technically $ZodObject doesn't extend\n    $ZodObject.init(inst, def);\n    const superParse = inst._zod.parse;\n    const _normalized = util.cached(() => normalizeDef(def));\n    const generateFastpass = (shape) => {\n        const doc = new Doc([\"shape\", \"payload\", \"ctx\"]);\n        const normalized = _normalized.value;\n        const parseStr = (key) => {\n            const k = util.esc(key);\n            return `shape[${k}]._zod.run({ value: input[${k}], issues: [] }, ctx)`;\n        };\n        doc.write(`const input = payload.value;`);\n        const ids = Object.create(null);\n        let counter = 0;\n        for (const key of normalized.keys) {\n            ids[key] = `key_${counter++}`;\n        }\n        // A: preserve key order {\n        doc.write(`const newResult = {};`);\n        for (const key of normalized.keys) {\n            const id = ids[key];\n            const k = util.esc(key);\n            doc.write(`const ${id} = ${parseStr(key)};`);\n            doc.write(`\n        if (${id}.issues.length) {\n          payload.issues = payload.issues.concat(${id}.issues.map(iss => ({\n            ...iss,\n            path: iss.path ? [${k}, ...iss.path] : [${k}]\n          })));\n        }\n        \n        \n        if (${id}.value === undefined) {\n          if (${k} in input) {\n            newResult[${k}] = undefined;\n          }\n        } else {\n          newResult[${k}] = ${id}.value;\n        }\n        \n      `);\n        }\n        doc.write(`payload.value = newResult;`);\n        doc.write(`return payload;`);\n        const fn = doc.compile();\n        return (payload, ctx) => fn(shape, payload, ctx);\n    };\n    let fastpass;\n    const isObject = util.isObject;\n    const jit = !core.globalConfig.jitless;\n    const allowsEval = util.allowsEval;\n    const fastEnabled = jit && allowsEval.value; // && !def.catchall;\n    const catchall = def.catchall;\n    let value;\n    inst._zod.parse = (payload, ctx) => {\n        value ?? (value = _normalized.value);\n        const input = payload.value;\n        if (!isObject(input)) {\n            payload.issues.push({\n                expected: \"object\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        if (jit && fastEnabled && ctx?.async === false && ctx.jitless !== true) {\n            // always synchronous\n            if (!fastpass)\n                fastpass = generateFastpass(def.shape);\n            payload = fastpass(payload, ctx);\n            if (!catchall)\n                return payload;\n            return handleCatchall([], input, payload, ctx, value, inst);\n        }\n        return superParse(payload, ctx);\n    };\n});\nfunction handleUnionResults(results, final, inst, ctx) {\n    for (const result of results) {\n        if (result.issues.length === 0) {\n            final.value = result.value;\n            return final;\n        }\n    }\n    const nonaborted = results.filter((r) => !util.aborted(r));\n    if (nonaborted.length === 1) {\n        final.value = nonaborted[0].value;\n        return nonaborted[0];\n    }\n    final.issues.push({\n        code: \"invalid_union\",\n        input: final.value,\n        inst,\n        errors: results.map((result) => result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n    });\n    return final;\n}\nexport const $ZodUnion = /*@__PURE__*/ core.$constructor(\"$ZodUnion\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"optin\", () => def.options.some((o) => o._zod.optin === \"optional\") ? \"optional\" : undefined);\n    util.defineLazy(inst._zod, \"optout\", () => def.options.some((o) => o._zod.optout === \"optional\") ? \"optional\" : undefined);\n    util.defineLazy(inst._zod, \"values\", () => {\n        if (def.options.every((o) => o._zod.values)) {\n            return new Set(def.options.flatMap((option) => Array.from(option._zod.values)));\n        }\n        return undefined;\n    });\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        if (def.options.every((o) => o._zod.pattern)) {\n            const patterns = def.options.map((o) => o._zod.pattern);\n            return new RegExp(`^(${patterns.map((p) => util.cleanRegex(p.source)).join(\"|\")})$`);\n        }\n        return undefined;\n    });\n    const single = def.options.length === 1;\n    const first = def.options[0]._zod.run;\n    inst._zod.parse = (payload, ctx) => {\n        if (single) {\n            return first(payload, ctx);\n        }\n        let async = false;\n        const results = [];\n        for (const option of def.options) {\n            const result = option._zod.run({\n                value: payload.value,\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                results.push(result);\n                async = true;\n            }\n            else {\n                if (result.issues.length === 0)\n                    return result;\n                results.push(result);\n            }\n        }\n        if (!async)\n            return handleUnionResults(results, payload, inst, ctx);\n        return Promise.all(results).then((results) => {\n            return handleUnionResults(results, payload, inst, ctx);\n        });\n    };\n});\nexport const $ZodDiscriminatedUnion = \n/*@__PURE__*/\ncore.$constructor(\"$ZodDiscriminatedUnion\", (inst, def) => {\n    $ZodUnion.init(inst, def);\n    const _super = inst._zod.parse;\n    util.defineLazy(inst._zod, \"propValues\", () => {\n        const propValues = {};\n        for (const option of def.options) {\n            const pv = option._zod.propValues;\n            if (!pv || Object.keys(pv).length === 0)\n                throw new Error(`Invalid discriminated union option at index \"${def.options.indexOf(option)}\"`);\n            for (const [k, v] of Object.entries(pv)) {\n                if (!propValues[k])\n                    propValues[k] = new Set();\n                for (const val of v) {\n                    propValues[k].add(val);\n                }\n            }\n        }\n        return propValues;\n    });\n    const disc = util.cached(() => {\n        const opts = def.options;\n        const map = new Map();\n        for (const o of opts) {\n            const values = o._zod.propValues?.[def.discriminator];\n            if (!values || values.size === 0)\n                throw new Error(`Invalid discriminated union option at index \"${def.options.indexOf(o)}\"`);\n            for (const v of values) {\n                if (map.has(v)) {\n                    throw new Error(`Duplicate discriminator value \"${String(v)}\"`);\n                }\n                map.set(v, o);\n            }\n        }\n        return map;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!util.isObject(input)) {\n            payload.issues.push({\n                code: \"invalid_type\",\n                expected: \"object\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const opt = disc.value.get(input?.[def.discriminator]);\n        if (opt) {\n            return opt._zod.run(payload, ctx);\n        }\n        if (def.unionFallback) {\n            return _super(payload, ctx);\n        }\n        // no matching discriminator\n        payload.issues.push({\n            code: \"invalid_union\",\n            errors: [],\n            note: \"No matching discriminator\",\n            discriminator: def.discriminator,\n            input,\n            path: [def.discriminator],\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodIntersection = /*@__PURE__*/ core.$constructor(\"$ZodIntersection\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        const left = def.left._zod.run({ value: input, issues: [] }, ctx);\n        const right = def.right._zod.run({ value: input, issues: [] }, ctx);\n        const async = left instanceof Promise || right instanceof Promise;\n        if (async) {\n            return Promise.all([left, right]).then(([left, right]) => {\n                return handleIntersectionResults(payload, left, right);\n            });\n        }\n        return handleIntersectionResults(payload, left, right);\n    };\n});\nfunction mergeValues(a, b) {\n    // const aType = parse.t(a);\n    // const bType = parse.t(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    if (a instanceof Date && b instanceof Date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    if (util.isPlainObject(a) && util.isPlainObject(b)) {\n        const bKeys = Object.keys(b);\n        const sharedKeys = Object.keys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return {\n                    valid: false,\n                    mergeErrorPath: [key, ...sharedValue.mergeErrorPath],\n                };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return { valid: false, mergeErrorPath: [] };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return {\n                    valid: false,\n                    mergeErrorPath: [index, ...sharedValue.mergeErrorPath],\n                };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    return { valid: false, mergeErrorPath: [] };\n}\nfunction handleIntersectionResults(result, left, right) {\n    if (left.issues.length) {\n        result.issues.push(...left.issues);\n    }\n    if (right.issues.length) {\n        result.issues.push(...right.issues);\n    }\n    if (util.aborted(result))\n        return result;\n    const merged = mergeValues(left.value, right.value);\n    if (!merged.valid) {\n        throw new Error(`Unmergable intersection. Error path: ` + `${JSON.stringify(merged.mergeErrorPath)}`);\n    }\n    result.value = merged.data;\n    return result;\n}\nexport const $ZodTuple = /*@__PURE__*/ core.$constructor(\"$ZodTuple\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const items = def.items;\n    const optStart = items.length - [...items].reverse().findIndex((item) => item._zod.optin !== \"optional\");\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!Array.isArray(input)) {\n            payload.issues.push({\n                input,\n                inst,\n                expected: \"tuple\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        payload.value = [];\n        const proms = [];\n        if (!def.rest) {\n            const tooBig = input.length > items.length;\n            const tooSmall = input.length < optStart - 1;\n            if (tooBig || tooSmall) {\n                payload.issues.push({\n                    ...(tooBig ? { code: \"too_big\", maximum: items.length } : { code: \"too_small\", minimum: items.length }),\n                    input,\n                    inst,\n                    origin: \"array\",\n                });\n                return payload;\n            }\n        }\n        let i = -1;\n        for (const item of items) {\n            i++;\n            if (i >= input.length)\n                if (i >= optStart)\n                    continue;\n            const result = item._zod.run({\n                value: input[i],\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleTupleResult(result, payload, i)));\n            }\n            else {\n                handleTupleResult(result, payload, i);\n            }\n        }\n        if (def.rest) {\n            const rest = input.slice(items.length);\n            for (const el of rest) {\n                i++;\n                const result = def.rest._zod.run({\n                    value: el,\n                    issues: [],\n                }, ctx);\n                if (result instanceof Promise) {\n                    proms.push(result.then((result) => handleTupleResult(result, payload, i)));\n                }\n                else {\n                    handleTupleResult(result, payload, i);\n                }\n            }\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleTupleResult(result, final, index) {\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(index, result.issues));\n    }\n    final.value[index] = result.value;\n}\nexport const $ZodRecord = /*@__PURE__*/ core.$constructor(\"$ZodRecord\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!util.isPlainObject(input)) {\n            payload.issues.push({\n                expected: \"record\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const proms = [];\n        if (def.keyType._zod.values) {\n            const values = def.keyType._zod.values;\n            payload.value = {};\n            for (const key of values) {\n                if (typeof key === \"string\" || typeof key === \"number\" || typeof key === \"symbol\") {\n                    const result = def.valueType._zod.run({ value: input[key], issues: [] }, ctx);\n                    if (result instanceof Promise) {\n                        proms.push(result.then((result) => {\n                            if (result.issues.length) {\n                                payload.issues.push(...util.prefixIssues(key, result.issues));\n                            }\n                            payload.value[key] = result.value;\n                        }));\n                    }\n                    else {\n                        if (result.issues.length) {\n                            payload.issues.push(...util.prefixIssues(key, result.issues));\n                        }\n                        payload.value[key] = result.value;\n                    }\n                }\n            }\n            let unrecognized;\n            for (const key in input) {\n                if (!values.has(key)) {\n                    unrecognized = unrecognized ?? [];\n                    unrecognized.push(key);\n                }\n            }\n            if (unrecognized && unrecognized.length > 0) {\n                payload.issues.push({\n                    code: \"unrecognized_keys\",\n                    input,\n                    inst,\n                    keys: unrecognized,\n                });\n            }\n        }\n        else {\n            payload.value = {};\n            for (const key of Reflect.ownKeys(input)) {\n                if (key === \"__proto__\")\n                    continue;\n                const keyResult = def.keyType._zod.run({ value: key, issues: [] }, ctx);\n                if (keyResult instanceof Promise) {\n                    throw new Error(\"Async schemas not supported in object keys currently\");\n                }\n                if (keyResult.issues.length) {\n                    payload.issues.push({\n                        code: \"invalid_key\",\n                        origin: \"record\",\n                        issues: keyResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                        input: key,\n                        path: [key],\n                        inst,\n                    });\n                    payload.value[keyResult.value] = keyResult.value;\n                    continue;\n                }\n                const result = def.valueType._zod.run({ value: input[key], issues: [] }, ctx);\n                if (result instanceof Promise) {\n                    proms.push(result.then((result) => {\n                        if (result.issues.length) {\n                            payload.issues.push(...util.prefixIssues(key, result.issues));\n                        }\n                        payload.value[keyResult.value] = result.value;\n                    }));\n                }\n                else {\n                    if (result.issues.length) {\n                        payload.issues.push(...util.prefixIssues(key, result.issues));\n                    }\n                    payload.value[keyResult.value] = result.value;\n                }\n            }\n        }\n        if (proms.length) {\n            return Promise.all(proms).then(() => payload);\n        }\n        return payload;\n    };\n});\nexport const $ZodMap = /*@__PURE__*/ core.$constructor(\"$ZodMap\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!(input instanceof Map)) {\n            payload.issues.push({\n                expected: \"map\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const proms = [];\n        payload.value = new Map();\n        for (const [key, value] of input) {\n            const keyResult = def.keyType._zod.run({ value: key, issues: [] }, ctx);\n            const valueResult = def.valueType._zod.run({ value: value, issues: [] }, ctx);\n            if (keyResult instanceof Promise || valueResult instanceof Promise) {\n                proms.push(Promise.all([keyResult, valueResult]).then(([keyResult, valueResult]) => {\n                    handleMapResult(keyResult, valueResult, payload, key, input, inst, ctx);\n                }));\n            }\n            else {\n                handleMapResult(keyResult, valueResult, payload, key, input, inst, ctx);\n            }\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleMapResult(keyResult, valueResult, final, key, input, inst, ctx) {\n    if (keyResult.issues.length) {\n        if (util.propertyKeyTypes.has(typeof key)) {\n            final.issues.push(...util.prefixIssues(key, keyResult.issues));\n        }\n        else {\n            final.issues.push({\n                code: \"invalid_key\",\n                origin: \"map\",\n                input,\n                inst,\n                issues: keyResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n            });\n        }\n    }\n    if (valueResult.issues.length) {\n        if (util.propertyKeyTypes.has(typeof key)) {\n            final.issues.push(...util.prefixIssues(key, valueResult.issues));\n        }\n        else {\n            final.issues.push({\n                origin: \"map\",\n                code: \"invalid_element\",\n                input,\n                inst,\n                key: key,\n                issues: valueResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n            });\n        }\n    }\n    final.value.set(keyResult.value, valueResult.value);\n}\nexport const $ZodSet = /*@__PURE__*/ core.$constructor(\"$ZodSet\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!(input instanceof Set)) {\n            payload.issues.push({\n                input,\n                inst,\n                expected: \"set\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        const proms = [];\n        payload.value = new Set();\n        for (const item of input) {\n            const result = def.valueType._zod.run({ value: item, issues: [] }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleSetResult(result, payload)));\n            }\n            else\n                handleSetResult(result, payload);\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleSetResult(result, final) {\n    if (result.issues.length) {\n        final.issues.push(...result.issues);\n    }\n    final.value.add(result.value);\n}\nexport const $ZodEnum = /*@__PURE__*/ core.$constructor(\"$ZodEnum\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const values = util.getEnumValues(def.entries);\n    const valuesSet = new Set(values);\n    inst._zod.values = valuesSet;\n    inst._zod.pattern = new RegExp(`^(${values\n        .filter((k) => util.propertyKeyTypes.has(typeof k))\n        .map((o) => (typeof o === \"string\" ? util.escapeRegex(o) : o.toString()))\n        .join(\"|\")})$`);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (valuesSet.has(input)) {\n            return payload;\n        }\n        payload.issues.push({\n            code: \"invalid_value\",\n            values,\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodLiteral = /*@__PURE__*/ core.$constructor(\"$ZodLiteral\", (inst, def) => {\n    $ZodType.init(inst, def);\n    if (def.values.length === 0) {\n        throw new Error(\"Cannot create literal schema with no valid values\");\n    }\n    inst._zod.values = new Set(def.values);\n    inst._zod.pattern = new RegExp(`^(${def.values\n        .map((o) => (typeof o === \"string\" ? util.escapeRegex(o) : o ? util.escapeRegex(o.toString()) : String(o)))\n        .join(\"|\")})$`);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (inst._zod.values.has(input)) {\n            return payload;\n        }\n        payload.issues.push({\n            code: \"invalid_value\",\n            values: def.values,\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodFile = /*@__PURE__*/ core.$constructor(\"$ZodFile\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        // @ts-ignore\n        if (input instanceof File)\n            return payload;\n        payload.issues.push({\n            expected: \"file\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodTransform = /*@__PURE__*/ core.$constructor(\"$ZodTransform\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        if (ctx.direction === \"backward\") {\n            throw new core.$ZodEncodeError(inst.constructor.name);\n        }\n        const _out = def.transform(payload.value, payload);\n        if (ctx.async) {\n            const output = _out instanceof Promise ? _out : Promise.resolve(_out);\n            return output.then((output) => {\n                payload.value = output;\n                return payload;\n            });\n        }\n        if (_out instanceof Promise) {\n            throw new core.$ZodAsyncError();\n        }\n        payload.value = _out;\n        return payload;\n    };\n});\nfunction handleOptionalResult(result, input) {\n    if (result.issues.length && input === undefined) {\n        return { issues: [], value: undefined };\n    }\n    return result;\n}\nexport const $ZodOptional = /*@__PURE__*/ core.$constructor(\"$ZodOptional\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.optin = \"optional\";\n    inst._zod.optout = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => {\n        return def.innerType._zod.values ? new Set([...def.innerType._zod.values, undefined]) : undefined;\n    });\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        const pattern = def.innerType._zod.pattern;\n        return pattern ? new RegExp(`^(${util.cleanRegex(pattern.source)})?$`) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        if (def.innerType._zod.optin === \"optional\") {\n            const result = def.innerType._zod.run(payload, ctx);\n            if (result instanceof Promise)\n                return result.then((r) => handleOptionalResult(r, payload.value));\n            return handleOptionalResult(result, payload.value);\n        }\n        if (payload.value === undefined) {\n            return payload;\n        }\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodNullable = /*@__PURE__*/ core.$constructor(\"$ZodNullable\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        const pattern = def.innerType._zod.pattern;\n        return pattern ? new RegExp(`^(${util.cleanRegex(pattern.source)}|null)$`) : undefined;\n    });\n    util.defineLazy(inst._zod, \"values\", () => {\n        return def.innerType._zod.values ? new Set([...def.innerType._zod.values, null]) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        // Forward direction (decode): allow null to pass through\n        if (payload.value === null)\n            return payload;\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodDefault = /*@__PURE__*/ core.$constructor(\"$ZodDefault\", (inst, def) => {\n    $ZodType.init(inst, def);\n    // inst._zod.qin = \"true\";\n    inst._zod.optin = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        if (ctx.direction === \"backward\") {\n            return def.innerType._zod.run(payload, ctx);\n        }\n        // Forward direction (decode): apply defaults for undefined input\n        if (payload.value === undefined) {\n            payload.value = def.defaultValue;\n            /**\n             * $ZodDefault returns the default value immediately in forward direction.\n             * It doesn't pass the default value into the validator (\"prefault\"). There's no reason to pass the default value through validation. The validity of the default is enforced by TypeScript statically. Otherwise, it's the responsibility of the user to ensure the default is valid. In the case of pipes with divergent in/out types, you can specify the default on the `in` schema of your ZodPipe to set a \"prefault\" for the pipe.   */\n            return payload;\n        }\n        // Forward direction: continue with default handling\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => handleDefaultResult(result, def));\n        }\n        return handleDefaultResult(result, def);\n    };\n});\nfunction handleDefaultResult(payload, def) {\n    if (payload.value === undefined) {\n        payload.value = def.defaultValue;\n    }\n    return payload;\n}\nexport const $ZodPrefault = /*@__PURE__*/ core.$constructor(\"$ZodPrefault\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.optin = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        if (ctx.direction === \"backward\") {\n            return def.innerType._zod.run(payload, ctx);\n        }\n        // Forward direction (decode): apply prefault for undefined input\n        if (payload.value === undefined) {\n            payload.value = def.defaultValue;\n        }\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodNonOptional = /*@__PURE__*/ core.$constructor(\"$ZodNonOptional\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"values\", () => {\n        const v = def.innerType._zod.values;\n        return v ? new Set([...v].filter((x) => x !== undefined)) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => handleNonOptionalResult(result, inst));\n        }\n        return handleNonOptionalResult(result, inst);\n    };\n});\nfunction handleNonOptionalResult(payload, inst) {\n    if (!payload.issues.length && payload.value === undefined) {\n        payload.issues.push({\n            code: \"invalid_type\",\n            expected: \"nonoptional\",\n            input: payload.value,\n            inst,\n        });\n    }\n    return payload;\n}\nexport const $ZodSuccess = /*@__PURE__*/ core.$constructor(\"$ZodSuccess\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        if (ctx.direction === \"backward\") {\n            throw new core.$ZodEncodeError(\"ZodSuccess\");\n        }\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => {\n                payload.value = result.issues.length === 0;\n                return payload;\n            });\n        }\n        payload.value = result.issues.length === 0;\n        return payload;\n    };\n});\nexport const $ZodCatch = /*@__PURE__*/ core.$constructor(\"$ZodCatch\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        if (ctx.direction === \"backward\") {\n            return def.innerType._zod.run(payload, ctx);\n        }\n        // Forward direction (decode): apply catch logic\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => {\n                payload.value = result.value;\n                if (result.issues.length) {\n                    payload.value = def.catchValue({\n                        ...payload,\n                        error: {\n                            issues: result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                        },\n                        input: payload.value,\n                    });\n                    payload.issues = [];\n                }\n                return payload;\n            });\n        }\n        payload.value = result.value;\n        if (result.issues.length) {\n            payload.value = def.catchValue({\n                ...payload,\n                error: {\n                    issues: result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                },\n                input: payload.value,\n            });\n            payload.issues = [];\n        }\n        return payload;\n    };\n});\nexport const $ZodNaN = /*@__PURE__*/ core.$constructor(\"$ZodNaN\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        if (typeof payload.value !== \"number\" || !Number.isNaN(payload.value)) {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                expected: \"nan\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        return payload;\n    };\n});\nexport const $ZodPipe = /*@__PURE__*/ core.$constructor(\"$ZodPipe\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"values\", () => def.in._zod.values);\n    util.defineLazy(inst._zod, \"optin\", () => def.in._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.out._zod.optout);\n    util.defineLazy(inst._zod, \"propValues\", () => def.in._zod.propValues);\n    inst._zod.parse = (payload, ctx) => {\n        if (ctx.direction === \"backward\") {\n            const right = def.out._zod.run(payload, ctx);\n            if (right instanceof Promise) {\n                return right.then((right) => handlePipeResult(right, def.in, ctx));\n            }\n            return handlePipeResult(right, def.in, ctx);\n        }\n        const left = def.in._zod.run(payload, ctx);\n        if (left instanceof Promise) {\n            return left.then((left) => handlePipeResult(left, def.out, ctx));\n        }\n        return handlePipeResult(left, def.out, ctx);\n    };\n});\nfunction handlePipeResult(left, next, ctx) {\n    if (left.issues.length) {\n        // prevent further checks\n        left.aborted = true;\n        return left;\n    }\n    return next._zod.run({ value: left.value, issues: left.issues }, ctx);\n}\nexport const $ZodCodec = /*@__PURE__*/ core.$constructor(\"$ZodCodec\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"values\", () => def.in._zod.values);\n    util.defineLazy(inst._zod, \"optin\", () => def.in._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.out._zod.optout);\n    util.defineLazy(inst._zod, \"propValues\", () => def.in._zod.propValues);\n    inst._zod.parse = (payload, ctx) => {\n        const direction = ctx.direction || \"forward\";\n        if (direction === \"forward\") {\n            const left = def.in._zod.run(payload, ctx);\n            if (left instanceof Promise) {\n                return left.then((left) => handleCodecAResult(left, def, ctx));\n            }\n            return handleCodecAResult(left, def, ctx);\n        }\n        else {\n            const right = def.out._zod.run(payload, ctx);\n            if (right instanceof Promise) {\n                return right.then((right) => handleCodecAResult(right, def, ctx));\n            }\n            return handleCodecAResult(right, def, ctx);\n        }\n    };\n});\nfunction handleCodecAResult(result, def, ctx) {\n    if (result.issues.length) {\n        // prevent further checks\n        result.aborted = true;\n        return result;\n    }\n    const direction = ctx.direction || \"forward\";\n    if (direction === \"forward\") {\n        const transformed = def.transform(result.value, result);\n        if (transformed instanceof Promise) {\n            return transformed.then((value) => handleCodecTxResult(result, value, def.out, ctx));\n        }\n        return handleCodecTxResult(result, transformed, def.out, ctx);\n    }\n    else {\n        const transformed = def.reverseTransform(result.value, result);\n        if (transformed instanceof Promise) {\n            return transformed.then((value) => handleCodecTxResult(result, value, def.in, ctx));\n        }\n        return handleCodecTxResult(result, transformed, def.in, ctx);\n    }\n}\nfunction handleCodecTxResult(left, value, nextSchema, ctx) {\n    // Check if transform added any issues\n    if (left.issues.length) {\n        left.aborted = true;\n        return left;\n    }\n    return nextSchema._zod.run({ value, issues: left.issues }, ctx);\n}\nexport const $ZodReadonly = /*@__PURE__*/ core.$constructor(\"$ZodReadonly\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"propValues\", () => def.innerType._zod.propValues);\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    inst._zod.parse = (payload, ctx) => {\n        if (ctx.direction === \"backward\") {\n            return def.innerType._zod.run(payload, ctx);\n        }\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then(handleReadonlyResult);\n        }\n        return handleReadonlyResult(result);\n    };\n});\nfunction handleReadonlyResult(payload) {\n    payload.value = Object.freeze(payload.value);\n    return payload;\n}\nexport const $ZodTemplateLiteral = /*@__PURE__*/ core.$constructor(\"$ZodTemplateLiteral\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const regexParts = [];\n    for (const part of def.parts) {\n        if (typeof part === \"object\" && part !== null) {\n            // is Zod schema\n            if (!part._zod.pattern) {\n                // if (!source)\n                throw new Error(`Invalid template literal part, no pattern found: ${[...part._zod.traits].shift()}`);\n            }\n            const source = part._zod.pattern instanceof RegExp ? part._zod.pattern.source : part._zod.pattern;\n            if (!source)\n                throw new Error(`Invalid template literal part: ${part._zod.traits}`);\n            const start = source.startsWith(\"^\") ? 1 : 0;\n            const end = source.endsWith(\"$\") ? source.length - 1 : source.length;\n            regexParts.push(source.slice(start, end));\n        }\n        else if (part === null || util.primitiveTypes.has(typeof part)) {\n            regexParts.push(util.escapeRegex(`${part}`));\n        }\n        else {\n            throw new Error(`Invalid template literal part: ${part}`);\n        }\n    }\n    inst._zod.pattern = new RegExp(`^${regexParts.join(\"\")}$`);\n    inst._zod.parse = (payload, _ctx) => {\n        if (typeof payload.value !== \"string\") {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                expected: \"template_literal\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        inst._zod.pattern.lastIndex = 0;\n        if (!inst._zod.pattern.test(payload.value)) {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                code: \"invalid_format\",\n                format: def.format ?? \"template_literal\",\n                pattern: inst._zod.pattern.source,\n            });\n            return payload;\n        }\n        return payload;\n    };\n});\nexport const $ZodFunction = /*@__PURE__*/ core.$constructor(\"$ZodFunction\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._def = def;\n    inst._zod.def = def;\n    inst.implement = (func) => {\n        if (typeof func !== \"function\") {\n            throw new Error(\"implement() must be called with a function\");\n        }\n        return function (...args) {\n            const parsedArgs = inst._def.input ? parse(inst._def.input, args) : args;\n            const result = Reflect.apply(func, this, parsedArgs);\n            if (inst._def.output) {\n                return parse(inst._def.output, result);\n            }\n            return result;\n        };\n    };\n    inst.implementAsync = (func) => {\n        if (typeof func !== \"function\") {\n            throw new Error(\"implementAsync() must be called with a function\");\n        }\n        return async function (...args) {\n            const parsedArgs = inst._def.input ? await parseAsync(inst._def.input, args) : args;\n            const result = await Reflect.apply(func, this, parsedArgs);\n            if (inst._def.output) {\n                return await parseAsync(inst._def.output, result);\n            }\n            return result;\n        };\n    };\n    inst._zod.parse = (payload, _ctx) => {\n        if (typeof payload.value !== \"function\") {\n            payload.issues.push({\n                code: \"invalid_type\",\n                expected: \"function\",\n                input: payload.value,\n                inst,\n            });\n            return payload;\n        }\n        // Check if output is a promise type to determine if we should use async implementation\n        const hasPromiseOutput = inst._def.output && inst._def.output._zod.def.type === \"promise\";\n        if (hasPromiseOutput) {\n            payload.value = inst.implementAsync(payload.value);\n        }\n        else {\n            payload.value = inst.implement(payload.value);\n        }\n        return payload;\n    };\n    inst.input = (...args) => {\n        const F = inst.constructor;\n        if (Array.isArray(args[0])) {\n            return new F({\n                type: \"function\",\n                input: new $ZodTuple({\n                    type: \"tuple\",\n                    items: args[0],\n                    rest: args[1],\n                }),\n                output: inst._def.output,\n            });\n        }\n        return new F({\n            type: \"function\",\n            input: args[0],\n            output: inst._def.output,\n        });\n    };\n    inst.output = (output) => {\n        const F = inst.constructor;\n        return new F({\n            type: \"function\",\n            input: inst._def.input,\n            output,\n        });\n    };\n    return inst;\n});\nexport const $ZodPromise = /*@__PURE__*/ core.$constructor(\"$ZodPromise\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        return Promise.resolve(payload.value).then((inner) => def.innerType._zod.run({ value: inner, issues: [] }, ctx));\n    };\n});\nexport const $ZodLazy = /*@__PURE__*/ core.$constructor(\"$ZodLazy\", (inst, def) => {\n    $ZodType.init(inst, def);\n    // let _innerType!: any;\n    // util.defineLazy(def, \"getter\", () => {\n    //   if (!_innerType) {\n    //     _innerType = def.getter();\n    //   }\n    //   return () => _innerType;\n    // });\n    util.defineLazy(inst._zod, \"innerType\", () => def.getter());\n    util.defineLazy(inst._zod, \"pattern\", () => inst._zod.innerType._zod.pattern);\n    util.defineLazy(inst._zod, \"propValues\", () => inst._zod.innerType._zod.propValues);\n    util.defineLazy(inst._zod, \"optin\", () => inst._zod.innerType._zod.optin ?? undefined);\n    util.defineLazy(inst._zod, \"optout\", () => inst._zod.innerType._zod.optout ?? undefined);\n    inst._zod.parse = (payload, ctx) => {\n        const inner = inst._zod.innerType;\n        return inner._zod.run(payload, ctx);\n    };\n});\nexport const $ZodCustom = /*@__PURE__*/ core.$constructor(\"$ZodCustom\", (inst, def) => {\n    checks.$ZodCheck.init(inst, def);\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _) => {\n        return payload;\n    };\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const r = def.fn(input);\n        if (r instanceof Promise) {\n            return r.then((r) => handleRefineResult(r, payload, input, inst));\n        }\n        handleRefineResult(r, payload, input, inst);\n        return;\n    };\n});\nfunction handleRefineResult(result, payload, input, inst) {\n    if (!result) {\n        const _iss = {\n            code: \"custom\",\n            input,\n            inst, // incorporates params.error into issue reporting\n            path: [...(inst._zod.def.path ?? [])], // incorporates params.error into issue reporting\n            continue: !inst._zod.def.abort,\n            // params: inst._zod.def.params,\n        };\n        if (inst._zod.def.params)\n            _iss.params = inst._zod.def.params;\n        payload.issues.push(util.issue(_iss));\n    }\n}\n","export const $output = Symbol(\"ZodOutput\");\nexport const $input = Symbol(\"ZodInput\");\nexport class $ZodRegistry {\n    constructor() {\n        this._map = new WeakMap();\n        this._idmap = new Map();\n    }\n    add(schema, ..._meta) {\n        const meta = _meta[0];\n        this._map.set(schema, meta);\n        if (meta && typeof meta === \"object\" && \"id\" in meta) {\n            if (this._idmap.has(meta.id)) {\n                throw new Error(`ID ${meta.id} already exists in the registry`);\n            }\n            this._idmap.set(meta.id, schema);\n        }\n        return this;\n    }\n    clear() {\n        this._map = new WeakMap();\n        this._idmap = new Map();\n        return this;\n    }\n    remove(schema) {\n        const meta = this._map.get(schema);\n        if (meta && typeof meta === \"object\" && \"id\" in meta) {\n            this._idmap.delete(meta.id);\n        }\n        this._map.delete(schema);\n        return this;\n    }\n    get(schema) {\n        // return this._map.get(schema) as any;\n        // inherit metadata\n        const p = schema._zod.parent;\n        if (p) {\n            const pm = { ...(this.get(p) ?? {}) };\n            delete pm.id; // do not inherit id\n            const f = { ...pm, ...this._map.get(schema) };\n            return Object.keys(f).length ? f : undefined;\n        }\n        return this._map.get(schema);\n    }\n    has(schema) {\n        return this._map.has(schema);\n    }\n}\n// registries\nexport function registry() {\n    return new $ZodRegistry();\n}\nexport const globalRegistry = /*@__PURE__*/ registry();\n","import * as checks from \"./checks.js\";\nimport * as schemas from \"./schemas.js\";\nimport * as util from \"./util.js\";\nexport function _string(Class, params) {\n    return new Class({\n        type: \"string\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedString(Class, params) {\n    return new Class({\n        type: \"string\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _email(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"email\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _guid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"guid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v4\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v6\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv7(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v7\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _url(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"url\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _emoji(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"emoji\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _nanoid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"nanoid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cuid2(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cuid2\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ulid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ulid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _xid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"xid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ksuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ksuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ipv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ipv4\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ipv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ipv6\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cidrv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cidrv4\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cidrv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cidrv6\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _base64(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"base64\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _base64url(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"base64url\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _e164(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"e164\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _jwt(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"jwt\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport const TimePrecision = {\n    Any: null,\n    Minute: -1,\n    Second: 0,\n    Millisecond: 3,\n    Microsecond: 6,\n};\nexport function _isoDateTime(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"datetime\",\n        check: \"string_format\",\n        offset: false,\n        local: false,\n        precision: null,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoDate(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"date\",\n        check: \"string_format\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoTime(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"time\",\n        check: \"string_format\",\n        precision: null,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoDuration(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"duration\",\n        check: \"string_format\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _number(Class, params) {\n    return new Class({\n        type: \"number\",\n        checks: [],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedNumber(Class, params) {\n    return new Class({\n        type: \"number\",\n        coerce: true,\n        checks: [],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"safeint\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _float32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"float32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _float64(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"float64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"int32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uint32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"uint32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _boolean(Class, params) {\n    return new Class({\n        type: \"boolean\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedBoolean(Class, params) {\n    return new Class({\n        type: \"boolean\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _bigint(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedBigint(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int64(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        check: \"bigint_format\",\n        abort: false,\n        format: \"int64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uint64(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        check: \"bigint_format\",\n        abort: false,\n        format: \"uint64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _symbol(Class, params) {\n    return new Class({\n        type: \"symbol\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _undefined(Class, params) {\n    return new Class({\n        type: \"undefined\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _null(Class, params) {\n    return new Class({\n        type: \"null\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _any(Class) {\n    return new Class({\n        type: \"any\",\n    });\n}\nexport function _unknown(Class) {\n    return new Class({\n        type: \"unknown\",\n    });\n}\nexport function _never(Class, params) {\n    return new Class({\n        type: \"never\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _void(Class, params) {\n    return new Class({\n        type: \"void\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _date(Class, params) {\n    return new Class({\n        type: \"date\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedDate(Class, params) {\n    return new Class({\n        type: \"date\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _nan(Class, params) {\n    return new Class({\n        type: \"nan\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _lt(value, params) {\n    return new checks.$ZodCheckLessThan({\n        check: \"less_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: false,\n    });\n}\nexport function _lte(value, params) {\n    return new checks.$ZodCheckLessThan({\n        check: \"less_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: true,\n    });\n}\nexport { \n/** @deprecated Use `z.lte()` instead. */\n_lte as _max, };\nexport function _gt(value, params) {\n    return new checks.$ZodCheckGreaterThan({\n        check: \"greater_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: false,\n    });\n}\nexport function _gte(value, params) {\n    return new checks.$ZodCheckGreaterThan({\n        check: \"greater_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: true,\n    });\n}\nexport { \n/** @deprecated Use `z.gte()` instead. */\n_gte as _min, };\nexport function _positive(params) {\n    return _gt(0, params);\n}\n// negative\nexport function _negative(params) {\n    return _lt(0, params);\n}\n// nonpositive\nexport function _nonpositive(params) {\n    return _lte(0, params);\n}\n// nonnegative\nexport function _nonnegative(params) {\n    return _gte(0, params);\n}\nexport function _multipleOf(value, params) {\n    return new checks.$ZodCheckMultipleOf({\n        check: \"multiple_of\",\n        ...util.normalizeParams(params),\n        value,\n    });\n}\nexport function _maxSize(maximum, params) {\n    return new checks.$ZodCheckMaxSize({\n        check: \"max_size\",\n        ...util.normalizeParams(params),\n        maximum,\n    });\n}\nexport function _minSize(minimum, params) {\n    return new checks.$ZodCheckMinSize({\n        check: \"min_size\",\n        ...util.normalizeParams(params),\n        minimum,\n    });\n}\nexport function _size(size, params) {\n    return new checks.$ZodCheckSizeEquals({\n        check: \"size_equals\",\n        ...util.normalizeParams(params),\n        size,\n    });\n}\nexport function _maxLength(maximum, params) {\n    const ch = new checks.$ZodCheckMaxLength({\n        check: \"max_length\",\n        ...util.normalizeParams(params),\n        maximum,\n    });\n    return ch;\n}\nexport function _minLength(minimum, params) {\n    return new checks.$ZodCheckMinLength({\n        check: \"min_length\",\n        ...util.normalizeParams(params),\n        minimum,\n    });\n}\nexport function _length(length, params) {\n    return new checks.$ZodCheckLengthEquals({\n        check: \"length_equals\",\n        ...util.normalizeParams(params),\n        length,\n    });\n}\nexport function _regex(pattern, params) {\n    return new checks.$ZodCheckRegex({\n        check: \"string_format\",\n        format: \"regex\",\n        ...util.normalizeParams(params),\n        pattern,\n    });\n}\nexport function _lowercase(params) {\n    return new checks.$ZodCheckLowerCase({\n        check: \"string_format\",\n        format: \"lowercase\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uppercase(params) {\n    return new checks.$ZodCheckUpperCase({\n        check: \"string_format\",\n        format: \"uppercase\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _includes(includes, params) {\n    return new checks.$ZodCheckIncludes({\n        check: \"string_format\",\n        format: \"includes\",\n        ...util.normalizeParams(params),\n        includes,\n    });\n}\nexport function _startsWith(prefix, params) {\n    return new checks.$ZodCheckStartsWith({\n        check: \"string_format\",\n        format: \"starts_with\",\n        ...util.normalizeParams(params),\n        prefix,\n    });\n}\nexport function _endsWith(suffix, params) {\n    return new checks.$ZodCheckEndsWith({\n        check: \"string_format\",\n        format: \"ends_with\",\n        ...util.normalizeParams(params),\n        suffix,\n    });\n}\nexport function _property(property, schema, params) {\n    return new checks.$ZodCheckProperty({\n        check: \"property\",\n        property,\n        schema,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _mime(types, params) {\n    return new checks.$ZodCheckMimeType({\n        check: \"mime_type\",\n        mime: types,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _overwrite(tx) {\n    return new checks.$ZodCheckOverwrite({\n        check: \"overwrite\",\n        tx,\n    });\n}\n// normalize\nexport function _normalize(form) {\n    return _overwrite((input) => input.normalize(form));\n}\n// trim\nexport function _trim() {\n    return _overwrite((input) => input.trim());\n}\n// toLowerCase\nexport function _toLowerCase() {\n    return _overwrite((input) => input.toLowerCase());\n}\n// toUpperCase\nexport function _toUpperCase() {\n    return _overwrite((input) => input.toUpperCase());\n}\nexport function _array(Class, element, params) {\n    return new Class({\n        type: \"array\",\n        element,\n        // get element() {\n        //   return element;\n        // },\n        ...util.normalizeParams(params),\n    });\n}\nexport function _union(Class, options, params) {\n    return new Class({\n        type: \"union\",\n        options,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _discriminatedUnion(Class, discriminator, options, params) {\n    return new Class({\n        type: \"union\",\n        options,\n        discriminator,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _intersection(Class, left, right) {\n    return new Class({\n        type: \"intersection\",\n        left,\n        right,\n    });\n}\n// export function _tuple(\n//   Class: util.SchemaClass<schemas.$ZodTuple>,\n//   items: [],\n//   params?: string | $ZodTupleParams\n// ): schemas.$ZodTuple<[], null>;\nexport function _tuple(Class, items, _paramsOrRest, _params) {\n    const hasRest = _paramsOrRest instanceof schemas.$ZodType;\n    const params = hasRest ? _params : _paramsOrRest;\n    const rest = hasRest ? _paramsOrRest : null;\n    return new Class({\n        type: \"tuple\",\n        items,\n        rest,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _record(Class, keyType, valueType, params) {\n    return new Class({\n        type: \"record\",\n        keyType,\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _map(Class, keyType, valueType, params) {\n    return new Class({\n        type: \"map\",\n        keyType,\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _set(Class, valueType, params) {\n    return new Class({\n        type: \"set\",\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _enum(Class, values, params) {\n    const entries = Array.isArray(values) ? Object.fromEntries(values.map((v) => [v, v])) : values;\n    // if (Array.isArray(values)) {\n    //   for (const value of values) {\n    //     entries[value] = value;\n    //   }\n    // } else {\n    //   Object.assign(entries, values);\n    // }\n    // const entries: util.EnumLike = {};\n    // for (const val of values) {\n    //   entries[val] = val;\n    // }\n    return new Class({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\n/** @deprecated This API has been merged into `z.enum()`. Use `z.enum()` instead.\n *\n * ```ts\n * enum Colors { red, green, blue }\n * z.enum(Colors);\n * ```\n */\nexport function _nativeEnum(Class, entries, params) {\n    return new Class({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _literal(Class, value, params) {\n    return new Class({\n        type: \"literal\",\n        values: Array.isArray(value) ? value : [value],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _file(Class, params) {\n    return new Class({\n        type: \"file\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _transform(Class, fn) {\n    return new Class({\n        type: \"transform\",\n        transform: fn,\n    });\n}\nexport function _optional(Class, innerType) {\n    return new Class({\n        type: \"optional\",\n        innerType,\n    });\n}\nexport function _nullable(Class, innerType) {\n    return new Class({\n        type: \"nullable\",\n        innerType,\n    });\n}\nexport function _default(Class, innerType, defaultValue) {\n    return new Class({\n        type: \"default\",\n        innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : util.shallowClone(defaultValue);\n        },\n    });\n}\nexport function _nonoptional(Class, innerType, params) {\n    return new Class({\n        type: \"nonoptional\",\n        innerType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _success(Class, innerType) {\n    return new Class({\n        type: \"success\",\n        innerType,\n    });\n}\nexport function _catch(Class, innerType, catchValue) {\n    return new Class({\n        type: \"catch\",\n        innerType,\n        catchValue: (typeof catchValue === \"function\" ? catchValue : () => catchValue),\n    });\n}\nexport function _pipe(Class, in_, out) {\n    return new Class({\n        type: \"pipe\",\n        in: in_,\n        out,\n    });\n}\nexport function _readonly(Class, innerType) {\n    return new Class({\n        type: \"readonly\",\n        innerType,\n    });\n}\nexport function _templateLiteral(Class, parts, params) {\n    return new Class({\n        type: \"template_literal\",\n        parts,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _lazy(Class, getter) {\n    return new Class({\n        type: \"lazy\",\n        getter,\n    });\n}\nexport function _promise(Class, innerType) {\n    return new Class({\n        type: \"promise\",\n        innerType,\n    });\n}\nexport function _custom(Class, fn, _params) {\n    const norm = util.normalizeParams(_params);\n    norm.abort ?? (norm.abort = true); // default to abort:false\n    const schema = new Class({\n        type: \"custom\",\n        check: \"custom\",\n        fn: fn,\n        ...norm,\n    });\n    return schema;\n}\n// same as _custom but defaults to abort:false\nexport function _refine(Class, fn, _params) {\n    const schema = new Class({\n        type: \"custom\",\n        check: \"custom\",\n        fn: fn,\n        ...util.normalizeParams(_params),\n    });\n    return schema;\n}\nexport function _superRefine(fn) {\n    const ch = _check((payload) => {\n        payload.addIssue = (issue) => {\n            if (typeof issue === \"string\") {\n                payload.issues.push(util.issue(issue, payload.value, ch._zod.def));\n            }\n            else {\n                // for Zod 3 backwards compatibility\n                const _issue = issue;\n                if (_issue.fatal)\n                    _issue.continue = false;\n                _issue.code ?? (_issue.code = \"custom\");\n                _issue.input ?? (_issue.input = payload.value);\n                _issue.inst ?? (_issue.inst = ch);\n                _issue.continue ?? (_issue.continue = !ch._zod.def.abort); // abort is always undefined, so this is always true...\n                payload.issues.push(util.issue(_issue));\n            }\n        };\n        return fn(payload.value, payload);\n    });\n    return ch;\n}\nexport function _check(fn, params) {\n    const ch = new checks.$ZodCheck({\n        check: \"custom\",\n        ...util.normalizeParams(params),\n    });\n    ch._zod.check = fn;\n    return ch;\n}\nexport function _stringbool(Classes, _params) {\n    const params = util.normalizeParams(_params);\n    let truthyArray = params.truthy ?? [\"true\", \"1\", \"yes\", \"on\", \"y\", \"enabled\"];\n    let falsyArray = params.falsy ?? [\"false\", \"0\", \"no\", \"off\", \"n\", \"disabled\"];\n    if (params.case !== \"sensitive\") {\n        truthyArray = truthyArray.map((v) => (typeof v === \"string\" ? v.toLowerCase() : v));\n        falsyArray = falsyArray.map((v) => (typeof v === \"string\" ? v.toLowerCase() : v));\n    }\n    const truthySet = new Set(truthyArray);\n    const falsySet = new Set(falsyArray);\n    const _Codec = Classes.Codec ?? schemas.$ZodCodec;\n    const _Boolean = Classes.Boolean ?? schemas.$ZodBoolean;\n    const _String = Classes.String ?? schemas.$ZodString;\n    const stringSchema = new _String({ type: \"string\", error: params.error });\n    const booleanSchema = new _Boolean({ type: \"boolean\", error: params.error });\n    const codec = new _Codec({\n        type: \"pipe\",\n        in: stringSchema,\n        out: booleanSchema,\n        transform: ((input, payload) => {\n            let data = input;\n            if (params.case !== \"sensitive\")\n                data = data.toLowerCase();\n            if (truthySet.has(data)) {\n                return true;\n            }\n            else if (falsySet.has(data)) {\n                return false;\n            }\n            else {\n                payload.issues.push({\n                    code: \"invalid_value\",\n                    expected: \"stringbool\",\n                    values: [...truthySet, ...falsySet],\n                    input: payload.value,\n                    inst: codec,\n                    continue: false,\n                });\n                return {};\n            }\n        }),\n        reverseTransform: ((input, _payload) => {\n            if (input === true) {\n                return truthyArray[0] || \"true\";\n            }\n            else {\n                return falsyArray[0] || \"false\";\n            }\n        }),\n        error: params.error,\n    });\n    return codec;\n}\nexport function _stringFormat(Class, format, fnOrRegex, _params = {}) {\n    const params = util.normalizeParams(_params);\n    const def = {\n        ...util.normalizeParams(_params),\n        check: \"string_format\",\n        type: \"string\",\n        format,\n        fn: typeof fnOrRegex === \"function\" ? fnOrRegex : (val) => fnOrRegex.test(val),\n        ...params,\n    };\n    if (fnOrRegex instanceof RegExp) {\n        def.pattern = fnOrRegex;\n    }\n    const inst = new Class(def);\n    return inst;\n}\n","import * as core from \"../core/index.js\";\nimport * as schemas from \"./schemas.js\";\nexport const ZodISODateTime = /*@__PURE__*/ core.$constructor(\"ZodISODateTime\", (inst, def) => {\n    core.$ZodISODateTime.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function datetime(params) {\n    return core._isoDateTime(ZodISODateTime, params);\n}\nexport const ZodISODate = /*@__PURE__*/ core.$constructor(\"ZodISODate\", (inst, def) => {\n    core.$ZodISODate.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function date(params) {\n    return core._isoDate(ZodISODate, params);\n}\nexport const ZodISOTime = /*@__PURE__*/ core.$constructor(\"ZodISOTime\", (inst, def) => {\n    core.$ZodISOTime.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function time(params) {\n    return core._isoTime(ZodISOTime, params);\n}\nexport const ZodISODuration = /*@__PURE__*/ core.$constructor(\"ZodISODuration\", (inst, def) => {\n    core.$ZodISODuration.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function duration(params) {\n    return core._isoDuration(ZodISODuration, params);\n}\n","import * as core from \"../core/index.js\";\nimport { $ZodError } from \"../core/index.js\";\nimport * as util from \"../core/util.js\";\nconst initializer = (inst, issues) => {\n    $ZodError.init(inst, issues);\n    inst.name = \"ZodError\";\n    Object.defineProperties(inst, {\n        format: {\n            value: (mapper) => core.formatError(inst, mapper),\n            // enumerable: false,\n        },\n        flatten: {\n            value: (mapper) => core.flattenError(inst, mapper),\n            // enumerable: false,\n        },\n        addIssue: {\n            value: (issue) => {\n                inst.issues.push(issue);\n                inst.message = JSON.stringify(inst.issues, util.jsonStringifyReplacer, 2);\n            },\n            // enumerable: false,\n        },\n        addIssues: {\n            value: (issues) => {\n                inst.issues.push(...issues);\n                inst.message = JSON.stringify(inst.issues, util.jsonStringifyReplacer, 2);\n            },\n            // enumerable: false,\n        },\n        isEmpty: {\n            get() {\n                return inst.issues.length === 0;\n            },\n            // enumerable: false,\n        },\n    });\n    // Object.defineProperty(inst, \"isEmpty\", {\n    //   get() {\n    //     return inst.issues.length === 0;\n    //   },\n    // });\n};\nexport const ZodError = core.$constructor(\"ZodError\", initializer);\nexport const ZodRealError = core.$constructor(\"ZodError\", initializer, {\n    Parent: Error,\n});\n// /** @deprecated Use `z.core.$ZodErrorMapCtx` instead. */\n// export type ErrorMapCtx = core.$ZodErrorMapCtx;\n","import * as core from \"../core/index.js\";\nimport { ZodRealError } from \"./errors.js\";\nexport const parse = /* @__PURE__ */ core._parse(ZodRealError);\nexport const parseAsync = /* @__PURE__ */ core._parseAsync(ZodRealError);\nexport const safeParse = /* @__PURE__ */ core._safeParse(ZodRealError);\nexport const safeParseAsync = /* @__PURE__ */ core._safeParseAsync(ZodRealError);\n// Codec functions\nexport const encode = /* @__PURE__ */ core._encode(ZodRealError);\nexport const decode = /* @__PURE__ */ core._decode(ZodRealError);\nexport const encodeAsync = /* @__PURE__ */ core._encodeAsync(ZodRealError);\nexport const decodeAsync = /* @__PURE__ */ core._decodeAsync(ZodRealError);\nexport const safeEncode = /* @__PURE__ */ core._safeEncode(ZodRealError);\nexport const safeDecode = /* @__PURE__ */ core._safeDecode(ZodRealError);\nexport const safeEncodeAsync = /* @__PURE__ */ core._safeEncodeAsync(ZodRealError);\nexport const safeDecodeAsync = /* @__PURE__ */ core._safeDecodeAsync(ZodRealError);\n","import * as core from \"../core/index.js\";\nimport { util } from \"../core/index.js\";\nimport * as checks from \"./checks.js\";\nimport * as iso from \"./iso.js\";\nimport * as parse from \"./parse.js\";\nexport const ZodType = /*@__PURE__*/ core.$constructor(\"ZodType\", (inst, def) => {\n    core.$ZodType.init(inst, def);\n    inst.def = def;\n    inst.type = def.type;\n    Object.defineProperty(inst, \"_def\", { value: def });\n    // base methods\n    inst.check = (...checks) => {\n        return inst.clone(util.mergeDefs(def, {\n            checks: [\n                ...(def.checks ?? []),\n                ...checks.map((ch) => typeof ch === \"function\" ? { _zod: { check: ch, def: { check: \"custom\" }, onattach: [] } } : ch),\n            ],\n        }));\n    };\n    inst.clone = (def, params) => core.clone(inst, def, params);\n    inst.brand = () => inst;\n    inst.register = ((reg, meta) => {\n        reg.add(inst, meta);\n        return inst;\n    });\n    // parsing\n    inst.parse = (data, params) => parse.parse(inst, data, params, { callee: inst.parse });\n    inst.safeParse = (data, params) => parse.safeParse(inst, data, params);\n    inst.parseAsync = async (data, params) => parse.parseAsync(inst, data, params, { callee: inst.parseAsync });\n    inst.safeParseAsync = async (data, params) => parse.safeParseAsync(inst, data, params);\n    inst.spa = inst.safeParseAsync;\n    // encoding/decoding\n    inst.encode = (data, params) => parse.encode(inst, data, params);\n    inst.decode = (data, params) => parse.decode(inst, data, params);\n    inst.encodeAsync = async (data, params) => parse.encodeAsync(inst, data, params);\n    inst.decodeAsync = async (data, params) => parse.decodeAsync(inst, data, params);\n    inst.safeEncode = (data, params) => parse.safeEncode(inst, data, params);\n    inst.safeDecode = (data, params) => parse.safeDecode(inst, data, params);\n    inst.safeEncodeAsync = async (data, params) => parse.safeEncodeAsync(inst, data, params);\n    inst.safeDecodeAsync = async (data, params) => parse.safeDecodeAsync(inst, data, params);\n    // refinements\n    inst.refine = (check, params) => inst.check(refine(check, params));\n    inst.superRefine = (refinement) => inst.check(superRefine(refinement));\n    inst.overwrite = (fn) => inst.check(checks.overwrite(fn));\n    // wrappers\n    inst.optional = () => optional(inst);\n    inst.nullable = () => nullable(inst);\n    inst.nullish = () => optional(nullable(inst));\n    inst.nonoptional = (params) => nonoptional(inst, params);\n    inst.array = () => array(inst);\n    inst.or = (arg) => union([inst, arg]);\n    inst.and = (arg) => intersection(inst, arg);\n    inst.transform = (tx) => pipe(inst, transform(tx));\n    inst.default = (def) => _default(inst, def);\n    inst.prefault = (def) => prefault(inst, def);\n    // inst.coalesce = (def, params) => coalesce(inst, def, params);\n    inst.catch = (params) => _catch(inst, params);\n    inst.pipe = (target) => pipe(inst, target);\n    inst.readonly = () => readonly(inst);\n    // meta\n    inst.describe = (description) => {\n        const cl = inst.clone();\n        core.globalRegistry.add(cl, { description });\n        return cl;\n    };\n    Object.defineProperty(inst, \"description\", {\n        get() {\n            return core.globalRegistry.get(inst)?.description;\n        },\n        configurable: true,\n    });\n    inst.meta = (...args) => {\n        if (args.length === 0) {\n            return core.globalRegistry.get(inst);\n        }\n        const cl = inst.clone();\n        core.globalRegistry.add(cl, args[0]);\n        return cl;\n    };\n    // helpers\n    inst.isOptional = () => inst.safeParse(undefined).success;\n    inst.isNullable = () => inst.safeParse(null).success;\n    return inst;\n});\n/** @internal */\nexport const _ZodString = /*@__PURE__*/ core.$constructor(\"_ZodString\", (inst, def) => {\n    core.$ZodString.init(inst, def);\n    ZodType.init(inst, def);\n    const bag = inst._zod.bag;\n    inst.format = bag.format ?? null;\n    inst.minLength = bag.minimum ?? null;\n    inst.maxLength = bag.maximum ?? null;\n    // validations\n    inst.regex = (...args) => inst.check(checks.regex(...args));\n    inst.includes = (...args) => inst.check(checks.includes(...args));\n    inst.startsWith = (...args) => inst.check(checks.startsWith(...args));\n    inst.endsWith = (...args) => inst.check(checks.endsWith(...args));\n    inst.min = (...args) => inst.check(checks.minLength(...args));\n    inst.max = (...args) => inst.check(checks.maxLength(...args));\n    inst.length = (...args) => inst.check(checks.length(...args));\n    inst.nonempty = (...args) => inst.check(checks.minLength(1, ...args));\n    inst.lowercase = (params) => inst.check(checks.lowercase(params));\n    inst.uppercase = (params) => inst.check(checks.uppercase(params));\n    // transforms\n    inst.trim = () => inst.check(checks.trim());\n    inst.normalize = (...args) => inst.check(checks.normalize(...args));\n    inst.toLowerCase = () => inst.check(checks.toLowerCase());\n    inst.toUpperCase = () => inst.check(checks.toUpperCase());\n});\nexport const ZodString = /*@__PURE__*/ core.$constructor(\"ZodString\", (inst, def) => {\n    core.$ZodString.init(inst, def);\n    _ZodString.init(inst, def);\n    inst.email = (params) => inst.check(core._email(ZodEmail, params));\n    inst.url = (params) => inst.check(core._url(ZodURL, params));\n    inst.jwt = (params) => inst.check(core._jwt(ZodJWT, params));\n    inst.emoji = (params) => inst.check(core._emoji(ZodEmoji, params));\n    inst.guid = (params) => inst.check(core._guid(ZodGUID, params));\n    inst.uuid = (params) => inst.check(core._uuid(ZodUUID, params));\n    inst.uuidv4 = (params) => inst.check(core._uuidv4(ZodUUID, params));\n    inst.uuidv6 = (params) => inst.check(core._uuidv6(ZodUUID, params));\n    inst.uuidv7 = (params) => inst.check(core._uuidv7(ZodUUID, params));\n    inst.nanoid = (params) => inst.check(core._nanoid(ZodNanoID, params));\n    inst.guid = (params) => inst.check(core._guid(ZodGUID, params));\n    inst.cuid = (params) => inst.check(core._cuid(ZodCUID, params));\n    inst.cuid2 = (params) => inst.check(core._cuid2(ZodCUID2, params));\n    inst.ulid = (params) => inst.check(core._ulid(ZodULID, params));\n    inst.base64 = (params) => inst.check(core._base64(ZodBase64, params));\n    inst.base64url = (params) => inst.check(core._base64url(ZodBase64URL, params));\n    inst.xid = (params) => inst.check(core._xid(ZodXID, params));\n    inst.ksuid = (params) => inst.check(core._ksuid(ZodKSUID, params));\n    inst.ipv4 = (params) => inst.check(core._ipv4(ZodIPv4, params));\n    inst.ipv6 = (params) => inst.check(core._ipv6(ZodIPv6, params));\n    inst.cidrv4 = (params) => inst.check(core._cidrv4(ZodCIDRv4, params));\n    inst.cidrv6 = (params) => inst.check(core._cidrv6(ZodCIDRv6, params));\n    inst.e164 = (params) => inst.check(core._e164(ZodE164, params));\n    // iso\n    inst.datetime = (params) => inst.check(iso.datetime(params));\n    inst.date = (params) => inst.check(iso.date(params));\n    inst.time = (params) => inst.check(iso.time(params));\n    inst.duration = (params) => inst.check(iso.duration(params));\n});\nexport function string(params) {\n    return core._string(ZodString, params);\n}\nexport const ZodStringFormat = /*@__PURE__*/ core.$constructor(\"ZodStringFormat\", (inst, def) => {\n    core.$ZodStringFormat.init(inst, def);\n    _ZodString.init(inst, def);\n});\nexport const ZodEmail = /*@__PURE__*/ core.$constructor(\"ZodEmail\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodEmail.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function email(params) {\n    return core._email(ZodEmail, params);\n}\nexport const ZodGUID = /*@__PURE__*/ core.$constructor(\"ZodGUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodGUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function guid(params) {\n    return core._guid(ZodGUID, params);\n}\nexport const ZodUUID = /*@__PURE__*/ core.$constructor(\"ZodUUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodUUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function uuid(params) {\n    return core._uuid(ZodUUID, params);\n}\nexport function uuidv4(params) {\n    return core._uuidv4(ZodUUID, params);\n}\n// ZodUUIDv6\nexport function uuidv6(params) {\n    return core._uuidv6(ZodUUID, params);\n}\n// ZodUUIDv7\nexport function uuidv7(params) {\n    return core._uuidv7(ZodUUID, params);\n}\nexport const ZodURL = /*@__PURE__*/ core.$constructor(\"ZodURL\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodURL.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function url(params) {\n    return core._url(ZodURL, params);\n}\nexport function httpUrl(params) {\n    return core._url(ZodURL, {\n        protocol: /^https?$/,\n        hostname: core.regexes.domain,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodEmoji = /*@__PURE__*/ core.$constructor(\"ZodEmoji\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodEmoji.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function emoji(params) {\n    return core._emoji(ZodEmoji, params);\n}\nexport const ZodNanoID = /*@__PURE__*/ core.$constructor(\"ZodNanoID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodNanoID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function nanoid(params) {\n    return core._nanoid(ZodNanoID, params);\n}\nexport const ZodCUID = /*@__PURE__*/ core.$constructor(\"ZodCUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodCUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cuid(params) {\n    return core._cuid(ZodCUID, params);\n}\nexport const ZodCUID2 = /*@__PURE__*/ core.$constructor(\"ZodCUID2\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodCUID2.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cuid2(params) {\n    return core._cuid2(ZodCUID2, params);\n}\nexport const ZodULID = /*@__PURE__*/ core.$constructor(\"ZodULID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodULID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ulid(params) {\n    return core._ulid(ZodULID, params);\n}\nexport const ZodXID = /*@__PURE__*/ core.$constructor(\"ZodXID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodXID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function xid(params) {\n    return core._xid(ZodXID, params);\n}\nexport const ZodKSUID = /*@__PURE__*/ core.$constructor(\"ZodKSUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodKSUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ksuid(params) {\n    return core._ksuid(ZodKSUID, params);\n}\nexport const ZodIPv4 = /*@__PURE__*/ core.$constructor(\"ZodIPv4\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodIPv4.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ipv4(params) {\n    return core._ipv4(ZodIPv4, params);\n}\nexport const ZodIPv6 = /*@__PURE__*/ core.$constructor(\"ZodIPv6\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodIPv6.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ipv6(params) {\n    return core._ipv6(ZodIPv6, params);\n}\nexport const ZodCIDRv4 = /*@__PURE__*/ core.$constructor(\"ZodCIDRv4\", (inst, def) => {\n    core.$ZodCIDRv4.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cidrv4(params) {\n    return core._cidrv4(ZodCIDRv4, params);\n}\nexport const ZodCIDRv6 = /*@__PURE__*/ core.$constructor(\"ZodCIDRv6\", (inst, def) => {\n    core.$ZodCIDRv6.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cidrv6(params) {\n    return core._cidrv6(ZodCIDRv6, params);\n}\nexport const ZodBase64 = /*@__PURE__*/ core.$constructor(\"ZodBase64\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodBase64.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function base64(params) {\n    return core._base64(ZodBase64, params);\n}\nexport const ZodBase64URL = /*@__PURE__*/ core.$constructor(\"ZodBase64URL\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodBase64URL.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function base64url(params) {\n    return core._base64url(ZodBase64URL, params);\n}\nexport const ZodE164 = /*@__PURE__*/ core.$constructor(\"ZodE164\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodE164.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function e164(params) {\n    return core._e164(ZodE164, params);\n}\nexport const ZodJWT = /*@__PURE__*/ core.$constructor(\"ZodJWT\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodJWT.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function jwt(params) {\n    return core._jwt(ZodJWT, params);\n}\nexport const ZodCustomStringFormat = /*@__PURE__*/ core.$constructor(\"ZodCustomStringFormat\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodCustomStringFormat.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function stringFormat(format, fnOrRegex, _params = {}) {\n    return core._stringFormat(ZodCustomStringFormat, format, fnOrRegex, _params);\n}\nexport function hostname(_params) {\n    return core._stringFormat(ZodCustomStringFormat, \"hostname\", core.regexes.hostname, _params);\n}\nexport function hex(_params) {\n    return core._stringFormat(ZodCustomStringFormat, \"hex\", core.regexes.hex, _params);\n}\nexport function hash(alg, params) {\n    const enc = params?.enc ?? \"hex\";\n    const format = `${alg}_${enc}`;\n    const regex = core.regexes[format];\n    if (!regex)\n        throw new Error(`Unrecognized hash format: ${format}`);\n    return core._stringFormat(ZodCustomStringFormat, format, regex, params);\n}\nexport const ZodNumber = /*@__PURE__*/ core.$constructor(\"ZodNumber\", (inst, def) => {\n    core.$ZodNumber.init(inst, def);\n    ZodType.init(inst, def);\n    inst.gt = (value, params) => inst.check(checks.gt(value, params));\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.lt = (value, params) => inst.check(checks.lt(value, params));\n    inst.lte = (value, params) => inst.check(checks.lte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    inst.int = (params) => inst.check(int(params));\n    inst.safe = (params) => inst.check(int(params));\n    inst.positive = (params) => inst.check(checks.gt(0, params));\n    inst.nonnegative = (params) => inst.check(checks.gte(0, params));\n    inst.negative = (params) => inst.check(checks.lt(0, params));\n    inst.nonpositive = (params) => inst.check(checks.lte(0, params));\n    inst.multipleOf = (value, params) => inst.check(checks.multipleOf(value, params));\n    inst.step = (value, params) => inst.check(checks.multipleOf(value, params));\n    // inst.finite = (params) => inst.check(core.finite(params));\n    inst.finite = () => inst;\n    const bag = inst._zod.bag;\n    inst.minValue =\n        Math.max(bag.minimum ?? Number.NEGATIVE_INFINITY, bag.exclusiveMinimum ?? Number.NEGATIVE_INFINITY) ?? null;\n    inst.maxValue =\n        Math.min(bag.maximum ?? Number.POSITIVE_INFINITY, bag.exclusiveMaximum ?? Number.POSITIVE_INFINITY) ?? null;\n    inst.isInt = (bag.format ?? \"\").includes(\"int\") || Number.isSafeInteger(bag.multipleOf ?? 0.5);\n    inst.isFinite = true;\n    inst.format = bag.format ?? null;\n});\nexport function number(params) {\n    return core._number(ZodNumber, params);\n}\nexport const ZodNumberFormat = /*@__PURE__*/ core.$constructor(\"ZodNumberFormat\", (inst, def) => {\n    core.$ZodNumberFormat.init(inst, def);\n    ZodNumber.init(inst, def);\n});\nexport function int(params) {\n    return core._int(ZodNumberFormat, params);\n}\nexport function float32(params) {\n    return core._float32(ZodNumberFormat, params);\n}\nexport function float64(params) {\n    return core._float64(ZodNumberFormat, params);\n}\nexport function int32(params) {\n    return core._int32(ZodNumberFormat, params);\n}\nexport function uint32(params) {\n    return core._uint32(ZodNumberFormat, params);\n}\nexport const ZodBoolean = /*@__PURE__*/ core.$constructor(\"ZodBoolean\", (inst, def) => {\n    core.$ZodBoolean.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function boolean(params) {\n    return core._boolean(ZodBoolean, params);\n}\nexport const ZodBigInt = /*@__PURE__*/ core.$constructor(\"ZodBigInt\", (inst, def) => {\n    core.$ZodBigInt.init(inst, def);\n    ZodType.init(inst, def);\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.gt = (value, params) => inst.check(checks.gt(value, params));\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.lt = (value, params) => inst.check(checks.lt(value, params));\n    inst.lte = (value, params) => inst.check(checks.lte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    inst.positive = (params) => inst.check(checks.gt(BigInt(0), params));\n    inst.negative = (params) => inst.check(checks.lt(BigInt(0), params));\n    inst.nonpositive = (params) => inst.check(checks.lte(BigInt(0), params));\n    inst.nonnegative = (params) => inst.check(checks.gte(BigInt(0), params));\n    inst.multipleOf = (value, params) => inst.check(checks.multipleOf(value, params));\n    const bag = inst._zod.bag;\n    inst.minValue = bag.minimum ?? null;\n    inst.maxValue = bag.maximum ?? null;\n    inst.format = bag.format ?? null;\n});\nexport function bigint(params) {\n    return core._bigint(ZodBigInt, params);\n}\nexport const ZodBigIntFormat = /*@__PURE__*/ core.$constructor(\"ZodBigIntFormat\", (inst, def) => {\n    core.$ZodBigIntFormat.init(inst, def);\n    ZodBigInt.init(inst, def);\n});\n// int64\nexport function int64(params) {\n    return core._int64(ZodBigIntFormat, params);\n}\n// uint64\nexport function uint64(params) {\n    return core._uint64(ZodBigIntFormat, params);\n}\nexport const ZodSymbol = /*@__PURE__*/ core.$constructor(\"ZodSymbol\", (inst, def) => {\n    core.$ZodSymbol.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function symbol(params) {\n    return core._symbol(ZodSymbol, params);\n}\nexport const ZodUndefined = /*@__PURE__*/ core.$constructor(\"ZodUndefined\", (inst, def) => {\n    core.$ZodUndefined.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _undefined(params) {\n    return core._undefined(ZodUndefined, params);\n}\nexport { _undefined as undefined };\nexport const ZodNull = /*@__PURE__*/ core.$constructor(\"ZodNull\", (inst, def) => {\n    core.$ZodNull.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _null(params) {\n    return core._null(ZodNull, params);\n}\nexport { _null as null };\nexport const ZodAny = /*@__PURE__*/ core.$constructor(\"ZodAny\", (inst, def) => {\n    core.$ZodAny.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function any() {\n    return core._any(ZodAny);\n}\nexport const ZodUnknown = /*@__PURE__*/ core.$constructor(\"ZodUnknown\", (inst, def) => {\n    core.$ZodUnknown.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function unknown() {\n    return core._unknown(ZodUnknown);\n}\nexport const ZodNever = /*@__PURE__*/ core.$constructor(\"ZodNever\", (inst, def) => {\n    core.$ZodNever.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function never(params) {\n    return core._never(ZodNever, params);\n}\nexport const ZodVoid = /*@__PURE__*/ core.$constructor(\"ZodVoid\", (inst, def) => {\n    core.$ZodVoid.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _void(params) {\n    return core._void(ZodVoid, params);\n}\nexport { _void as void };\nexport const ZodDate = /*@__PURE__*/ core.$constructor(\"ZodDate\", (inst, def) => {\n    core.$ZodDate.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    const c = inst._zod.bag;\n    inst.minDate = c.minimum ? new Date(c.minimum) : null;\n    inst.maxDate = c.maximum ? new Date(c.maximum) : null;\n});\nexport function date(params) {\n    return core._date(ZodDate, params);\n}\nexport const ZodArray = /*@__PURE__*/ core.$constructor(\"ZodArray\", (inst, def) => {\n    core.$ZodArray.init(inst, def);\n    ZodType.init(inst, def);\n    inst.element = def.element;\n    inst.min = (minLength, params) => inst.check(checks.minLength(minLength, params));\n    inst.nonempty = (params) => inst.check(checks.minLength(1, params));\n    inst.max = (maxLength, params) => inst.check(checks.maxLength(maxLength, params));\n    inst.length = (len, params) => inst.check(checks.length(len, params));\n    inst.unwrap = () => inst.element;\n});\nexport function array(element, params) {\n    return core._array(ZodArray, element, params);\n}\n// .keyof\nexport function keyof(schema) {\n    const shape = schema._zod.def.shape;\n    return _enum(Object.keys(shape));\n}\nexport const ZodObject = /*@__PURE__*/ core.$constructor(\"ZodObject\", (inst, def) => {\n    core.$ZodObjectJIT.init(inst, def);\n    ZodType.init(inst, def);\n    util.defineLazy(inst, \"shape\", () => {\n        return def.shape;\n    });\n    inst.keyof = () => _enum(Object.keys(inst._zod.def.shape));\n    inst.catchall = (catchall) => inst.clone({ ...inst._zod.def, catchall: catchall });\n    inst.passthrough = () => inst.clone({ ...inst._zod.def, catchall: unknown() });\n    inst.loose = () => inst.clone({ ...inst._zod.def, catchall: unknown() });\n    inst.strict = () => inst.clone({ ...inst._zod.def, catchall: never() });\n    inst.strip = () => inst.clone({ ...inst._zod.def, catchall: undefined });\n    inst.extend = (incoming) => {\n        return util.extend(inst, incoming);\n    };\n    inst.safeExtend = (incoming) => {\n        return util.safeExtend(inst, incoming);\n    };\n    inst.merge = (other) => util.merge(inst, other);\n    inst.pick = (mask) => util.pick(inst, mask);\n    inst.omit = (mask) => util.omit(inst, mask);\n    inst.partial = (...args) => util.partial(ZodOptional, inst, args[0]);\n    inst.required = (...args) => util.required(ZodNonOptional, inst, args[0]);\n});\nexport function object(shape, params) {\n    const def = {\n        type: \"object\",\n        shape: shape ?? {},\n        ...util.normalizeParams(params),\n    };\n    return new ZodObject(def);\n}\n// strictObject\nexport function strictObject(shape, params) {\n    return new ZodObject({\n        type: \"object\",\n        shape,\n        catchall: never(),\n        ...util.normalizeParams(params),\n    });\n}\n// looseObject\nexport function looseObject(shape, params) {\n    return new ZodObject({\n        type: \"object\",\n        shape,\n        catchall: unknown(),\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodUnion = /*@__PURE__*/ core.$constructor(\"ZodUnion\", (inst, def) => {\n    core.$ZodUnion.init(inst, def);\n    ZodType.init(inst, def);\n    inst.options = def.options;\n});\nexport function union(options, params) {\n    return new ZodUnion({\n        type: \"union\",\n        options: options,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodDiscriminatedUnion = /*@__PURE__*/ core.$constructor(\"ZodDiscriminatedUnion\", (inst, def) => {\n    ZodUnion.init(inst, def);\n    core.$ZodDiscriminatedUnion.init(inst, def);\n});\nexport function discriminatedUnion(discriminator, options, params) {\n    // const [options, params] = args;\n    return new ZodDiscriminatedUnion({\n        type: \"union\",\n        options,\n        discriminator,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodIntersection = /*@__PURE__*/ core.$constructor(\"ZodIntersection\", (inst, def) => {\n    core.$ZodIntersection.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function intersection(left, right) {\n    return new ZodIntersection({\n        type: \"intersection\",\n        left: left,\n        right: right,\n    });\n}\nexport const ZodTuple = /*@__PURE__*/ core.$constructor(\"ZodTuple\", (inst, def) => {\n    core.$ZodTuple.init(inst, def);\n    ZodType.init(inst, def);\n    inst.rest = (rest) => inst.clone({\n        ...inst._zod.def,\n        rest: rest,\n    });\n});\nexport function tuple(items, _paramsOrRest, _params) {\n    const hasRest = _paramsOrRest instanceof core.$ZodType;\n    const params = hasRest ? _params : _paramsOrRest;\n    const rest = hasRest ? _paramsOrRest : null;\n    return new ZodTuple({\n        type: \"tuple\",\n        items: items,\n        rest,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodRecord = /*@__PURE__*/ core.$constructor(\"ZodRecord\", (inst, def) => {\n    core.$ZodRecord.init(inst, def);\n    ZodType.init(inst, def);\n    inst.keyType = def.keyType;\n    inst.valueType = def.valueType;\n});\nexport function record(keyType, valueType, params) {\n    return new ZodRecord({\n        type: \"record\",\n        keyType,\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\n// type alksjf = core.output<core.$ZodRecordKey>;\nexport function partialRecord(keyType, valueType, params) {\n    const k = core.clone(keyType);\n    k._zod.values = undefined;\n    return new ZodRecord({\n        type: \"record\",\n        keyType: k,\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodMap = /*@__PURE__*/ core.$constructor(\"ZodMap\", (inst, def) => {\n    core.$ZodMap.init(inst, def);\n    ZodType.init(inst, def);\n    inst.keyType = def.keyType;\n    inst.valueType = def.valueType;\n});\nexport function map(keyType, valueType, params) {\n    return new ZodMap({\n        type: \"map\",\n        keyType: keyType,\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodSet = /*@__PURE__*/ core.$constructor(\"ZodSet\", (inst, def) => {\n    core.$ZodSet.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (...args) => inst.check(core._minSize(...args));\n    inst.nonempty = (params) => inst.check(core._minSize(1, params));\n    inst.max = (...args) => inst.check(core._maxSize(...args));\n    inst.size = (...args) => inst.check(core._size(...args));\n});\nexport function set(valueType, params) {\n    return new ZodSet({\n        type: \"set\",\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodEnum = /*@__PURE__*/ core.$constructor(\"ZodEnum\", (inst, def) => {\n    core.$ZodEnum.init(inst, def);\n    ZodType.init(inst, def);\n    inst.enum = def.entries;\n    inst.options = Object.values(def.entries);\n    const keys = new Set(Object.keys(def.entries));\n    inst.extract = (values, params) => {\n        const newEntries = {};\n        for (const value of values) {\n            if (keys.has(value)) {\n                newEntries[value] = def.entries[value];\n            }\n            else\n                throw new Error(`Key ${value} not found in enum`);\n        }\n        return new ZodEnum({\n            ...def,\n            checks: [],\n            ...util.normalizeParams(params),\n            entries: newEntries,\n        });\n    };\n    inst.exclude = (values, params) => {\n        const newEntries = { ...def.entries };\n        for (const value of values) {\n            if (keys.has(value)) {\n                delete newEntries[value];\n            }\n            else\n                throw new Error(`Key ${value} not found in enum`);\n        }\n        return new ZodEnum({\n            ...def,\n            checks: [],\n            ...util.normalizeParams(params),\n            entries: newEntries,\n        });\n    };\n});\nfunction _enum(values, params) {\n    const entries = Array.isArray(values) ? Object.fromEntries(values.map((v) => [v, v])) : values;\n    return new ZodEnum({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport { _enum as enum };\n/** @deprecated This API has been merged into `z.enum()`. Use `z.enum()` instead.\n *\n * ```ts\n * enum Colors { red, green, blue }\n * z.enum(Colors);\n * ```\n */\nexport function nativeEnum(entries, params) {\n    return new ZodEnum({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodLiteral = /*@__PURE__*/ core.$constructor(\"ZodLiteral\", (inst, def) => {\n    core.$ZodLiteral.init(inst, def);\n    ZodType.init(inst, def);\n    inst.values = new Set(def.values);\n    Object.defineProperty(inst, \"value\", {\n        get() {\n            if (def.values.length > 1) {\n                throw new Error(\"This schema contains multiple valid literal values. Use `.values` instead.\");\n            }\n            return def.values[0];\n        },\n    });\n});\nexport function literal(value, params) {\n    return new ZodLiteral({\n        type: \"literal\",\n        values: Array.isArray(value) ? value : [value],\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodFile = /*@__PURE__*/ core.$constructor(\"ZodFile\", (inst, def) => {\n    core.$ZodFile.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (size, params) => inst.check(core._minSize(size, params));\n    inst.max = (size, params) => inst.check(core._maxSize(size, params));\n    inst.mime = (types, params) => inst.check(core._mime(Array.isArray(types) ? types : [types], params));\n});\nexport function file(params) {\n    return core._file(ZodFile, params);\n}\nexport const ZodTransform = /*@__PURE__*/ core.$constructor(\"ZodTransform\", (inst, def) => {\n    core.$ZodTransform.init(inst, def);\n    ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        if (_ctx.direction === \"backward\") {\n            throw new core.$ZodEncodeError(inst.constructor.name);\n        }\n        payload.addIssue = (issue) => {\n            if (typeof issue === \"string\") {\n                payload.issues.push(util.issue(issue, payload.value, def));\n            }\n            else {\n                // for Zod 3 backwards compatibility\n                const _issue = issue;\n                if (_issue.fatal)\n                    _issue.continue = false;\n                _issue.code ?? (_issue.code = \"custom\");\n                _issue.input ?? (_issue.input = payload.value);\n                _issue.inst ?? (_issue.inst = inst);\n                // _issue.continue ??= true;\n                payload.issues.push(util.issue(_issue));\n            }\n        };\n        const output = def.transform(payload.value, payload);\n        if (output instanceof Promise) {\n            return output.then((output) => {\n                payload.value = output;\n                return payload;\n            });\n        }\n        payload.value = output;\n        return payload;\n    };\n});\nexport function transform(fn) {\n    return new ZodTransform({\n        type: \"transform\",\n        transform: fn,\n    });\n}\nexport const ZodOptional = /*@__PURE__*/ core.$constructor(\"ZodOptional\", (inst, def) => {\n    core.$ZodOptional.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function optional(innerType) {\n    return new ZodOptional({\n        type: \"optional\",\n        innerType: innerType,\n    });\n}\nexport const ZodNullable = /*@__PURE__*/ core.$constructor(\"ZodNullable\", (inst, def) => {\n    core.$ZodNullable.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function nullable(innerType) {\n    return new ZodNullable({\n        type: \"nullable\",\n        innerType: innerType,\n    });\n}\n// nullish\nexport function nullish(innerType) {\n    return optional(nullable(innerType));\n}\nexport const ZodDefault = /*@__PURE__*/ core.$constructor(\"ZodDefault\", (inst, def) => {\n    core.$ZodDefault.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n    inst.removeDefault = inst.unwrap;\n});\nexport function _default(innerType, defaultValue) {\n    return new ZodDefault({\n        type: \"default\",\n        innerType: innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : util.shallowClone(defaultValue);\n        },\n    });\n}\nexport const ZodPrefault = /*@__PURE__*/ core.$constructor(\"ZodPrefault\", (inst, def) => {\n    core.$ZodPrefault.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function prefault(innerType, defaultValue) {\n    return new ZodPrefault({\n        type: \"prefault\",\n        innerType: innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : util.shallowClone(defaultValue);\n        },\n    });\n}\nexport const ZodNonOptional = /*@__PURE__*/ core.$constructor(\"ZodNonOptional\", (inst, def) => {\n    core.$ZodNonOptional.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function nonoptional(innerType, params) {\n    return new ZodNonOptional({\n        type: \"nonoptional\",\n        innerType: innerType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodSuccess = /*@__PURE__*/ core.$constructor(\"ZodSuccess\", (inst, def) => {\n    core.$ZodSuccess.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function success(innerType) {\n    return new ZodSuccess({\n        type: \"success\",\n        innerType: innerType,\n    });\n}\nexport const ZodCatch = /*@__PURE__*/ core.$constructor(\"ZodCatch\", (inst, def) => {\n    core.$ZodCatch.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n    inst.removeCatch = inst.unwrap;\n});\nfunction _catch(innerType, catchValue) {\n    return new ZodCatch({\n        type: \"catch\",\n        innerType: innerType,\n        catchValue: (typeof catchValue === \"function\" ? catchValue : () => catchValue),\n    });\n}\nexport { _catch as catch };\nexport const ZodNaN = /*@__PURE__*/ core.$constructor(\"ZodNaN\", (inst, def) => {\n    core.$ZodNaN.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function nan(params) {\n    return core._nan(ZodNaN, params);\n}\nexport const ZodPipe = /*@__PURE__*/ core.$constructor(\"ZodPipe\", (inst, def) => {\n    core.$ZodPipe.init(inst, def);\n    ZodType.init(inst, def);\n    inst.in = def.in;\n    inst.out = def.out;\n});\nexport function pipe(in_, out) {\n    return new ZodPipe({\n        type: \"pipe\",\n        in: in_,\n        out: out,\n        // ...util.normalizeParams(params),\n    });\n}\nexport const ZodCodec = /*@__PURE__*/ core.$constructor(\"ZodCodec\", (inst, def) => {\n    ZodPipe.init(inst, def);\n    core.$ZodCodec.init(inst, def);\n});\nexport function codec(in_, out, params) {\n    return new ZodCodec({\n        type: \"pipe\",\n        in: in_,\n        out: out,\n        transform: params.decode,\n        reverseTransform: params.encode,\n    });\n}\nexport const ZodReadonly = /*@__PURE__*/ core.$constructor(\"ZodReadonly\", (inst, def) => {\n    core.$ZodReadonly.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function readonly(innerType) {\n    return new ZodReadonly({\n        type: \"readonly\",\n        innerType: innerType,\n    });\n}\nexport const ZodTemplateLiteral = /*@__PURE__*/ core.$constructor(\"ZodTemplateLiteral\", (inst, def) => {\n    core.$ZodTemplateLiteral.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function templateLiteral(parts, params) {\n    return new ZodTemplateLiteral({\n        type: \"template_literal\",\n        parts,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodLazy = /*@__PURE__*/ core.$constructor(\"ZodLazy\", (inst, def) => {\n    core.$ZodLazy.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.getter();\n});\nexport function lazy(getter) {\n    return new ZodLazy({\n        type: \"lazy\",\n        getter: getter,\n    });\n}\nexport const ZodPromise = /*@__PURE__*/ core.$constructor(\"ZodPromise\", (inst, def) => {\n    core.$ZodPromise.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function promise(innerType) {\n    return new ZodPromise({\n        type: \"promise\",\n        innerType: innerType,\n    });\n}\nexport const ZodFunction = /*@__PURE__*/ core.$constructor(\"ZodFunction\", (inst, def) => {\n    core.$ZodFunction.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function _function(params) {\n    return new ZodFunction({\n        type: \"function\",\n        input: Array.isArray(params?.input) ? tuple(params?.input) : (params?.input ?? array(unknown())),\n        output: params?.output ?? unknown(),\n    });\n}\nexport { _function as function };\nexport const ZodCustom = /*@__PURE__*/ core.$constructor(\"ZodCustom\", (inst, def) => {\n    core.$ZodCustom.init(inst, def);\n    ZodType.init(inst, def);\n});\n// custom checks\nexport function check(fn) {\n    const ch = new core.$ZodCheck({\n        check: \"custom\",\n        // ...util.normalizeParams(params),\n    });\n    ch._zod.check = fn;\n    return ch;\n}\nexport function custom(fn, _params) {\n    return core._custom(ZodCustom, fn ?? (() => true), _params);\n}\nexport function refine(fn, _params = {}) {\n    return core._refine(ZodCustom, fn, _params);\n}\n// superRefine\nexport function superRefine(fn) {\n    return core._superRefine(fn);\n}\nfunction _instanceof(cls, params = {\n    error: `Input not instance of ${cls.name}`,\n}) {\n    const inst = new ZodCustom({\n        type: \"custom\",\n        check: \"custom\",\n        fn: (data) => data instanceof cls,\n        abort: true,\n        ...util.normalizeParams(params),\n    });\n    inst._zod.bag.Class = cls;\n    return inst;\n}\nexport { _instanceof as instanceof };\n// stringbool\nexport const stringbool = (...args) => core._stringbool({\n    Codec: ZodCodec,\n    Boolean: ZodBoolean,\n    String: ZodString,\n}, ...args);\nexport function json(params) {\n    const jsonSchema = lazy(() => {\n        return union([string(params), number(), boolean(), _null(), array(jsonSchema), record(string(), jsonSchema)]);\n    });\n    return jsonSchema;\n}\n// preprocess\n// /** @deprecated Use `z.pipe()` and `z.transform()` instead. */\nexport function preprocess(fn, schema) {\n    return pipe(transform(fn), schema);\n}\n","// Normalize API base: in dev we proxy '/api' via Vite; in prod we can use relative '/api'.\r\nconst RAW = (import.meta as any)?.env?.VITE_API_BASE ?? '/api';\r\n\r\n// remove trailing slash and ensure leading slash\r\nfunction norm(base: string) {\r\n  const t = (base || '').trim();\r\n  const noTrail = t.endsWith('/') ? t.slice(0, -1) : t;\r\n  return noTrail.startsWith('/') ? noTrail : `/${noTrail}`;\r\n}\r\n\r\nexport const API_BASE = norm(RAW);\r\nexport const WS_BASE = (import.meta as any)?.env?.VITE_WS_BASE ?? '';\r\nexport const WS_PATH = import.meta.env.VITE_WS_PATH || (typeof window !== 'undefined' ? `ws://${window.location.hostname}:8080/socket.io/` : 'ws://localhost:8080/socket.io/')\r\n\r\n// Legacy exports for compatibility\r\nexport const API_URL = API_BASE\r\nexport const WS_URL = WS_PATH","import { z } from 'zod'\r\nimport { API_BASE } from '../lib/config'\r\n\r\ntype RequestInit = globalThis.RequestInit\r\n\r\n// safe join: join('/api', '/health') => '/api/health'; join('/api', 'health') => '/api/health'\r\nfunction join(base: string, path: string) {\r\n  return `${base}${path.startsWith('/') ? path : `/${path}`}`;\r\n}\r\n\r\nlet csrf = ''\r\n\r\n// Zod schemas for API responses\r\nexport const SystemMetricsSchema = z.object({\r\n  cpu: z.number(),\r\n  memory: z.object({\r\n    used: z.number(),\r\n    total: z.number(),\r\n    percentage: z.number(),\r\n  }),\r\n  process_memory: z.object({\r\n    used: z.number(),\r\n    total: z.number(),\r\n    percentage: z.number(),\r\n  }).optional(),\r\n  uptime: z.number(),\r\n  system_uptime: z.number().optional(),\r\n  platform: z.string().optional(),\r\n  arch: z.string().optional(),\r\n  training: z.object({\r\n    active: z.number(),\r\n    total: z.number(),\r\n    completed: z.number(),\r\n  }).optional(),\r\n  timestamp: z.string(),\r\n})\r\n\r\nexport const TrainingSessionSchema = z.object({\r\n  id: z.union([z.string(), z.number()]),\r\n  name: z.string(),\r\n  type: z.string(),\r\n  status: z.string(),\r\n  accuracy: z.number(),\r\n  loss: z.number(),\r\n  epochs: z.number(),\r\n  current_epoch: z.number(),\r\n  progress: z.number(),\r\n  dataset_id: z.union([z.string(), z.number()]),\r\n  estimated_time: z.number(),\r\n  learning_rate: z.number(),\r\n  batch_size: z.number(),\r\n  created_at: z.string(),\r\n  updated_at: z.string(),\r\n  metrics_history: z.array(z.object({\r\n    epoch: z.number(),\r\n    accuracy: z.number(),\r\n    loss: z.number(),\r\n    timestamp: z.string(),\r\n  })),\r\n})\r\n\r\nexport const DatasetSchema = z.object({\r\n  id: z.union([z.string(), z.number()]),\r\n  name: z.string(),\r\n  source: z.string(),\r\n  samples: z.number(),\r\n  size_mb: z.number(),\r\n  size: z.number().optional(), // Alias from controller\r\n  records: z.number().optional(), // Alias from controller\r\n  status: z.string(),\r\n  type: z.string().optional(),\r\n  created_at: z.string(),\r\n  last_used: z.string().optional(),\r\n  description: z.string().optional(),\r\n})\r\n\r\nexport const HealthSchema = z.object({\r\n  status: z.string(),\r\n  database: z.string().optional(),\r\n  uptime: z.number().optional(),\r\n  memory: z.object({\r\n    used: z.number(),\r\n    total: z.number(),\r\n    percentage: z.number(),\r\n  }).optional(),\r\n  cpu: z.number().optional(),\r\n  timestamp: z.string().optional(),\r\n  beacon: z.string().optional(),\r\n})\r\n\r\nexport type SystemMetrics = z.infer<typeof SystemMetricsSchema>\r\nexport type TrainingSession = z.infer<typeof TrainingSessionSchema>\r\nexport type Dataset = z.infer<typeof DatasetSchema>\r\nexport type Health = z.infer<typeof HealthSchema>\r\n\r\nasync function getCsrf() {\r\n  try {\r\n    const r = await fetch(`${API_BASE}/csrf-token`, { credentials: 'include' })\r\n    if (r.ok) {\r\n      const j = await r.json()\r\n      csrf = j?.token || ''\r\n    }\r\n  } catch (error) {\r\n    // Ignore CSRF errors\r\n  }\r\n}\r\n\r\nasync function request<T>(path: string, init: RequestInit = {}): Promise<T> {\r\n  const token = localStorage.getItem('token') || ''\r\n  const headers: Record<string, string> = {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n    ...(init.headers as any),\r\n  }\r\n  if (token) headers.Authorization = `Bearer ${token}`\r\n  if (init.method && init.method !== 'GET') headers['X-CSRF-Token'] = csrf\r\n\r\n  const url = path.startsWith('/api') || path.startsWith('http')\r\n    ? path\r\n    : join(API_BASE, path);\r\n  \r\n  let res = await fetch(url, { ...init, headers, credentials: 'include' })\r\n  if (res.status === 403) {\r\n    await getCsrf()\r\n    headers['X-CSRF-Token'] = csrf\r\n    res = await fetch(url, { ...init, headers, credentials: 'include' })\r\n  }\r\n  if (!res.ok) {\r\n    const text = await res.text().catch(() => '');\r\n    throw new Error(`HTTP ${res.status} on ${url}: ${text || res.statusText}`);\r\n  }\r\n  return res.json()\r\n}\r\n\r\nasync function requestWithSchema<T>(\r\n  path: string, \r\n  schema: z.ZodSchema<T>, \r\n  init: RequestInit = {}\r\n): Promise<T> {\r\n  try {\r\n    const data = await request(path, init)\r\n    return schema.parse(data)\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      console.error(`API Schema validation error for ${path}:`, error.issues)\r\n      throw new Error(`Invalid API response format for ${path}`)\r\n    }\r\n    throw error\r\n  }\r\n}\r\n\r\nexport const API = {\r\n  // Health check\r\n  health: (): Promise<Health> => requestWithSchema('/health', HealthSchema),\r\n  \r\n  // System monitoring\r\n  monitoring: (): Promise<SystemMetrics> => requestWithSchema('/monitoring', SystemMetricsSchema),\r\n  systemStats: (): Promise<SystemMetrics> => requestWithSchema('/monitoring', SystemMetricsSchema),\r\n  \r\n  // Models and training\r\n  models: (): Promise<TrainingSession[]> => requestWithSchema('/models', z.object({\r\n    models: z.array(TrainingSessionSchema),\r\n    pagination: z.object({\r\n      page: z.number(),\r\n      limit: z.number(),\r\n      total: z.number(),\r\n      pages: z.number(),\r\n    })\r\n  })).then(data => data.models),\r\n  getModels: (): Promise<TrainingSession[]> => requestWithSchema('/models', z.object({\r\n    models: z.array(TrainingSessionSchema),\r\n    pagination: z.object({\r\n      page: z.number(),\r\n      limit: z.number(),\r\n      total: z.number(),\r\n      pages: z.number(),\r\n    })\r\n  })).then(data => data.models),\r\n  getModel: (id: string | number): Promise<TrainingSession> => requestWithSchema(`/models/${id}`, TrainingSessionSchema),\r\n  createModel: (data: any) => request('/models', { method: 'POST', body: JSON.stringify(data) }),\r\n  startTraining: (id: string | number, body?: any) => request(`/models/${id}/start`, { method: 'POST', body: body ? JSON.stringify(body) : undefined }),\r\n  pauseTraining: (id: string | number) => request(`/models/${id}/pause`, { method: 'POST' }),\r\n  stopTraining: (id: string | number) => request(`/models/${id}/stop`, { method: 'POST' }),\r\n  resumeTraining: (id: string | number) => request(`/models/${id}/resume`, { method: 'POST' }),\r\n  \r\n  // Datasets\r\n  datasets: (): Promise<Dataset[]> => requestWithSchema('/datasets', z.object({\r\n    datasets: z.array(DatasetSchema),\r\n    pagination: z.object({\r\n      page: z.number(),\r\n      limit: z.number(),\r\n      total: z.number(),\r\n      pages: z.number(),\r\n    })\r\n  })).then(data => data.datasets),\r\n  getDatasets: (): Promise<Dataset[]> => requestWithSchema('/datasets', z.object({\r\n    datasets: z.array(DatasetSchema),\r\n    pagination: z.object({\r\n      page: z.number(),\r\n      limit: z.number(),\r\n      total: z.number(),\r\n      pages: z.number(),\r\n    })\r\n  })).then(data => data.datasets.map((d: any) => ({\r\n    ...d,\r\n    sizeMB: typeof d.size === 'number' ? d.size : (typeof d.size_mb === 'number' ? d.size_mb : undefined),\r\n  }))),\r\n  getDataset: (id: string | number): Promise<Dataset> => requestWithSchema(`/datasets/${id}`, DatasetSchema),\r\n  downloadDataset: (id: string | number) => request(`/datasets/${id}/download`, { method: 'POST' }),\r\n  \r\n  // Logs (fallback to raw request since schema varies)\r\n  logs: (params?: { page?: number; limit?: number }) => {\r\n    const query = params ? `?${new URLSearchParams(params as any).toString()}` : ''\r\n    return request(`/logs${query}`)\r\n  },\r\n  getLogs: (params?: { page?: number; limit?: number }) => {\r\n    const query = params ? `?${new URLSearchParams(params as any).toString()}` : ''\r\n    return request(`/logs${query}`)\r\n  },\r\n  \r\n  // Additional API methods\r\n  getAnalytics: () => request('/analytics'),\r\n  getSystemMetrics: (): Promise<SystemMetrics> => requestWithSchema('/monitoring', SystemMetricsSchema),\r\n  getSettings: () => request('/settings'),\r\n  updateSettings: (settings: any) => request('/settings', { method: 'PUT', body: JSON.stringify(settings) }),\r\n  \r\n  // Model training methods\r\n  trainModel: (id: string, config?: any) => request(`/models/${id}/train`, { method: 'POST', body: config ? JSON.stringify(config) : undefined }),\r\n  deleteModel: (id: string) => request(`/models/${id}`, { method: 'DELETE' }),\r\n}\r\n\r\nexport async function bootstrapClient() {\r\n  await getCsrf()\r\n}\r\n\r\n// Export API as apiClient for backward compatibility\r\nexport const apiClient = API;","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { API } from '../services/api';\r\nimport { WSConnectionStatus } from '../lib/ws-events';\r\n\r\ninterface HealthCheck {\r\n  timestamp: number;\r\n  status: 'online' | 'offline';\r\n  responseTime?: number;\r\n  error?: string;\r\n}\r\n\r\ninterface SystemContextType {\r\n  status: 'online' | 'offline';\r\n  connectionStatus: WSConnectionStatus;\r\n  healthHistory: HealthCheck[];\r\n  lastHealthCheck: HealthCheck | null;\r\n  setStatus: (status: 'online' | 'offline') => void;\r\n  setConnectionStatus: (status: WSConnectionStatus) => void;\r\n  addHealthCheck: (check: HealthCheck) => void;\r\n  clearHealthHistory: () => void;\r\n}\r\n\r\nconst SystemContext = createContext<SystemContextType | undefined>(undefined);\r\n\r\ninterface SystemProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nfunction SystemProvider({ children }: SystemProviderProps) {\r\n  const [status, setStatus] = useState<'online' | 'offline'>('online');\r\n  const [connectionStatus, setConnectionStatus] = useState<WSConnectionStatus>('disconnected');\r\n  const [healthHistory, setHealthHistory] = useState<HealthCheck[]>([]);\r\n  const [lastHealthCheck, setLastHealthCheck] = useState<HealthCheck | null>(null);\r\n\r\n  const addHealthCheck = (check: HealthCheck) => {\r\n    setLastHealthCheck(check);\r\n    setHealthHistory(prev => {\r\n      const newHistory = [check, ...prev].slice(0, 10); // Keep last 10 checks\r\n      return newHistory;\r\n    });\r\n  };\r\n\r\n  const clearHealthHistory = () => {\r\n    setHealthHistory([]);\r\n    setLastHealthCheck(null);\r\n  };\r\n\r\n  // Health check interval\r\n  useEffect(() => {\r\n    const checkHealth = async () => {\r\n      const startTime = Date.now();\r\n      try {\r\n        await API.health();\r\n        const responseTime = Date.now() - startTime;\r\n        const check: HealthCheck = {\r\n          timestamp: Date.now(),\r\n          status: 'online',\r\n          responseTime\r\n        };\r\n        setStatus('online');\r\n        addHealthCheck(check);\r\n      } catch (error) {\r\n        const check: HealthCheck = {\r\n          timestamp: Date.now(),\r\n          status: 'offline',\r\n          error: error instanceof Error ? error.message : 'Unknown error'\r\n        };\r\n        setStatus('offline');\r\n        addHealthCheck(check);\r\n      }\r\n    };\r\n\r\n    // Initial check\r\n    checkHealth();\r\n\r\n    // Set up interval\r\n    const healthInterval = setInterval(checkHealth, 30000); // Every 30 seconds\r\n\r\n    return () => {\r\n      clearInterval(healthInterval);\r\n    };\r\n  }, []);\r\n\r\n  const value: SystemContextType = {\r\n    status,\r\n    connectionStatus,\r\n    healthHistory,\r\n    lastHealthCheck,\r\n    setStatus,\r\n    setConnectionStatus,\r\n    addHealthCheck,\r\n    clearHealthHistory\r\n  };\r\n\r\n  return (\r\n    <SystemContext.Provider value={value}>\r\n      {children}\r\n    </SystemContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useSystem() {\r\n  const context = useContext(SystemContext);\r\n  if (!context) {\r\n    throw new Error('useSystem must be used within a SystemProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n// System status hook for components\r\nexport function useSystemStatus() {\r\n  const { status, connectionStatus, lastHealthCheck, healthHistory } = useSystem();\r\n  \r\n  const getStatusColor = () => {\r\n    if (status === 'offline' || connectionStatus === 'error') return 'red';\r\n    if (connectionStatus === 'connecting') return 'yellow';\r\n    return 'green';\r\n  };\r\n\r\n  const getStatusText = () => {\r\n    if (status === 'offline') return 'آفلاین';\r\n    if (connectionStatus === 'connecting') return 'در حال اتصال';\r\n    if (connectionStatus === 'error') return 'خطا در اتصال';\r\n    return 'آنلاین';\r\n  };\r\n\r\n  const getAverageResponseTime = () => {\r\n    const onlineChecks = healthHistory.filter(check => check.status === 'online' && check.responseTime);\r\n    if (onlineChecks.length === 0) return null;\r\n    \r\n    const totalTime = onlineChecks.reduce((sum, check) => sum + (check.responseTime || 0), 0);\r\n    return Math.round(totalTime / onlineChecks.length);\r\n  };\r\n\r\n  return {\r\n    status,\r\n    connectionStatus,\r\n    lastHealthCheck,\r\n    healthHistory,\r\n    statusColor: getStatusColor(),\r\n    statusText: getStatusText(),\r\n    averageResponseTime: getAverageResponseTime(),\r\n    isHealthy: status === 'online' && connectionStatus === 'connected'\r\n  };\r\n}\r\n\r\n// Named export for stable API\r\nexport { SystemProvider };\r\n\r\n// Default export for Fast Refresh compatibility\r\nexport default SystemProvider;\r\n","import React, { useState, useEffect, createContext, useContext } from 'react';\r\nimport { Card, CardContent } from './ui/Card';\r\nimport { Button } from './ui/Button';\r\nimport { Badge } from './ui/Badge';\r\nimport { \r\n  CheckCircle, \r\n  AlertTriangle, \r\n  Info, \r\n  X, \r\n  Bell, \r\n  BellOff,\r\n  Settings,\r\n  Zap,\r\n  Brain,\r\n  Database,\r\n  Activity\r\n} from 'lucide-react';\r\n\r\nexport interface Notification {\r\n  id: string;\r\n  type: 'success' | 'warning' | 'error' | 'info';\r\n  title: string;\r\n  message: string;\r\n  timestamp: Date;\r\n  read: boolean;\r\n  category: 'system' | 'training' | 'model' | 'dataset' | 'user';\r\n  action?: {\r\n    label: string;\r\n    onClick: () => void;\r\n  };\r\n}\r\n\r\ninterface NotificationContextType {\r\n  notifications: Notification[];\r\n  addNotification: (notification: Omit<Notification, 'id' | 'timestamp' | 'read'>) => void;\r\n  markAsRead: (id: string) => void;\r\n  markAllAsRead: () => void;\r\n  removeNotification: (id: string) => void;\r\n  clearAll: () => void;\r\n  unreadCount: number;\r\n}\r\n\r\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined);\r\n\r\nexport const useNotifications = () => {\r\n  const context = useContext(NotificationContext);\r\n  if (!context) {\r\n    throw new Error('useNotifications must be used within a NotificationProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface NotificationProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport function NotificationProvider({ children }: NotificationProviderProps) {\r\n  const [notifications, setNotifications] = useState<Notification[]>([]);\r\n\r\n  const addNotification = (notification: Omit<Notification, 'id' | 'timestamp' | 'read'>) => {\r\n    const newNotification: Notification = {\r\n      ...notification,\r\n      id: Date.now().toString() + Math.random().toString(36).substr(2, 9),\r\n      timestamp: new Date(),\r\n      read: false,\r\n    };\r\n\r\n    setNotifications(prev => [newNotification, ...prev.slice(0, 49)]); // Keep last 50 notifications\r\n  };\r\n\r\n  const markAsRead = (id: string) => {\r\n    setNotifications(prev => \r\n      prev.map(notification => \r\n        notification.id === id ? { ...notification, read: true } : notification\r\n      )\r\n    );\r\n  };\r\n\r\n  const markAllAsRead = () => {\r\n    setNotifications(prev => \r\n      prev.map(notification => ({ ...notification, read: true }))\r\n    );\r\n  };\r\n\r\n  const removeNotification = (id: string) => {\r\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\r\n  };\r\n\r\n  const clearAll = () => {\r\n    setNotifications([]);\r\n  };\r\n\r\n  const unreadCount = notifications.filter(n => !n.read).length;\r\n\r\n  return (\r\n    <NotificationContext.Provider value={{\r\n      notifications,\r\n      addNotification,\r\n      markAsRead,\r\n      markAllAsRead,\r\n      removeNotification,\r\n      clearAll,\r\n      unreadCount,\r\n    }}>\r\n      {children}\r\n    </NotificationContext.Provider>\r\n  );\r\n}\r\n\r\ninterface NotificationBellProps {\r\n  className?: string;\r\n}\r\n\r\nexport function NotificationBell({ className = '' }: NotificationBellProps) {\r\n  const { unreadCount, notifications } = useNotifications();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={`relative ${className}`}>\r\n      <Button\r\n        variant=\"ghost\"\r\n        size=\"sm\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className=\"relative\"\r\n      >\r\n        {unreadCount > 0 ? (\r\n          <Bell className=\"h-5 w-5\" />\r\n        ) : (\r\n          <BellOff className=\"h-5 w-5\" />\r\n        )}\r\n        {unreadCount > 0 && (\r\n          <Badge \r\n            variant=\"destructive\" \r\n            className=\"absolute -top-1 -right-1 h-5 w-5 flex items-center justify-center p-0 text-xs\"\r\n          >\r\n            {unreadCount > 99 ? '99+' : unreadCount}\r\n          </Badge>\r\n        )}\r\n      </Button>\r\n\r\n      {isOpen && (\r\n        <div className=\"absolute top-full right-0 mt-2 w-80 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-50\">\r\n          <NotificationPanel onClose={() => setIsOpen(false)} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface NotificationPanelProps {\r\n  onClose: () => void;\r\n}\r\n\r\nfunction NotificationPanel({ onClose }: NotificationPanelProps) {\r\n  const { \r\n    notifications, \r\n    markAsRead, \r\n    markAllAsRead, \r\n    removeNotification, \r\n    clearAll, \r\n    unreadCount \r\n  } = useNotifications();\r\n\r\n  const getIcon = (type: Notification['type']) => {\r\n    switch (type) {\r\n      case 'success': return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\r\n      case 'warning': return <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />;\r\n      case 'error': return <AlertTriangle className=\"h-4 w-4 text-red-500\" />;\r\n      case 'info': return <Info className=\"h-4 w-4 text-blue-500\" />;\r\n    }\r\n  };\r\n\r\n  const getCategoryIcon = (category: Notification['category']) => {\r\n    switch (category) {\r\n      case 'system': return <Settings className=\"h-3 w-3\" />;\r\n      case 'training': return <Activity className=\"h-3 w-3\" />;\r\n      case 'model': return <Brain className=\"h-3 w-3\" />;\r\n      case 'dataset': return <Database className=\"h-3 w-3\" />;\r\n      case 'user': return <Zap className=\"h-3 w-3\" />;\r\n    }\r\n  };\r\n\r\n  const formatTime = (timestamp: Date) => {\r\n    const now = new Date();\r\n    const diff = now.getTime() - timestamp.getTime();\r\n    const minutes = Math.floor(diff / 60000);\r\n    const hours = Math.floor(diff / 3600000);\r\n    const days = Math.floor(diff / 86400000);\r\n\r\n    if (days > 0) return `${days} روز پیش`;\r\n    if (hours > 0) return `${hours} ساعت پیش`;\r\n    if (minutes > 0) return `${minutes} دقیقه پیش`;\r\n    return 'همین الان';\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-h-96 overflow-hidden\">\r\n      {/* Header */}\r\n      <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n            اعلان‌ها\r\n            {unreadCount > 0 && (\r\n              <Badge variant=\"secondary\" className=\"mr-2\">\r\n                {unreadCount} جدید\r\n              </Badge>\r\n            )}\r\n          </h3>\r\n          <div className=\"flex items-center gap-2\">\r\n            {unreadCount > 0 && (\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                onClick={markAllAsRead}\r\n                className=\"text-xs\"\r\n              >\r\n                همه را خوانده شده علامت‌گذاری کن\r\n              </Button>\r\n            )}\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              onClick={onClose}\r\n            >\r\n              <X className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Notifications List */}\r\n      <div className=\"max-h-64 overflow-y-auto\">\r\n        {notifications.length === 0 ? (\r\n          <div className=\"p-4 text-center text-gray-500 dark:text-gray-400\">\r\n            <BellOff className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\r\n            <p className=\"text-sm\">هیچ اعلانی وجود ندارد</p>\r\n          </div>\r\n        ) : (\r\n          notifications.slice(0, 10).map((notification) => (\r\n            <div\r\n              key={notification.id}\r\n              className={`p-4 border-b border-gray-100 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors ${\r\n                !notification.read ? 'bg-blue-50 dark:bg-blue-900/20' : ''\r\n              }`}\r\n            >\r\n              <div className=\"flex items-start gap-3\">\r\n                <div className=\"flex-shrink-0 mt-0.5\">\r\n                  {getIcon(notification.type)}\r\n                </div>\r\n                <div className=\"flex-1 min-w-0\">\r\n                  <div className=\"flex items-center gap-2 mb-1\">\r\n                    <h4 className=\"text-sm font-medium text-gray-900 dark:text-gray-100 truncate\">\r\n                      {notification.title}\r\n                    </h4>\r\n                    <div className=\"flex items-center gap-1\">\r\n                      {getCategoryIcon(notification.category)}\r\n                      {!notification.read && (\r\n                        <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\r\n                    {notification.message}\r\n                  </p>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-xs text-gray-500 dark:text-gray-500\">\r\n                      {formatTime(notification.timestamp)}\r\n                    </span>\r\n                    <div className=\"flex items-center gap-1\">\r\n                      {notification.action && (\r\n                        <Button\r\n                          variant=\"ghost\"\r\n                          size=\"sm\"\r\n                          onClick={notification.action.onClick}\r\n                          className=\"text-xs h-6 px-2\"\r\n                        >\r\n                          {notification.action.label}\r\n                        </Button>\r\n                      )}\r\n                      <Button\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        onClick={() => removeNotification(notification.id)}\r\n                        className=\"text-xs h-6 px-2 text-gray-400 hover:text-red-500\"\r\n                      >\r\n                        <X className=\"h-3 w-3\" />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      {/* Footer */}\r\n      {notifications.length > 0 && (\r\n        <div className=\"p-3 border-t border-gray-200 dark:border-gray-700\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              onClick={clearAll}\r\n              className=\"text-xs text-red-500 hover:text-red-600\"\r\n            >\r\n              پاک کردن همه\r\n            </Button>\r\n            <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n              {notifications.length} اعلان\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Hook for easy notification creation\r\nexport const useNotificationActions = () => {\r\n  const { addNotification } = useNotifications();\r\n\r\n  const notifySuccess = (title: string, message: string, category: Notification['category'] = 'system') => {\r\n    addNotification({ type: 'success', title, message, category });\r\n  };\r\n\r\n  const notifyError = (title: string, message: string, category: Notification['category'] = 'system') => {\r\n    addNotification({ type: 'error', title, message, category });\r\n  };\r\n\r\n  const notifyWarning = (title: string, message: string, category: Notification['category'] = 'system') => {\r\n    addNotification({ type: 'warning', title, message, category });\r\n  };\r\n\r\n  const notifyInfo = (title: string, message: string, category: Notification['category'] = 'system') => {\r\n    addNotification({ type: 'info', title, message, category });\r\n  };\r\n\r\n  return {\r\n    notifySuccess,\r\n    notifyError,\r\n    notifyWarning,\r\n    notifyInfo,\r\n  };\r\n};\r\n","import React, { Suspense, lazy } from 'react'\nimport { Routes, Route, Navigate } from 'react-router-dom'\nimport { EnhancedAppLayout } from './components/layout/EnhancedAppLayout'\nimport { EnhancedLandingPage } from './components/EnhancedLandingPage'\nimport { ErrorBoundary } from './components/ErrorBoundary'\nimport { ToastProvider } from './components/ui/Toast'\nimport { SystemProvider } from './context/SystemContext'\nimport { NotificationProvider } from './components/NotificationSystem'\n\nconst lazyCompat = <T extends Record<string, any>>(imp: () => Promise<T>, key: string) =>\n  lazy(async () => { const m = await imp(); return { default: m.default ?? m[key] } })\n\nconst Overview           = lazyCompat(() => import('./components/Overview'), 'Overview')\nconst DashboardAdvanced  = lazyCompat(() => import('./components/EnhancedDashboard'), 'default')\nconst AnalyticsPage      = lazyCompat(() => import('./components/AnalyticsPage'), 'AnalyticsPage')\nconst DataPage           = lazyCompat(() => import('./components/DataPage'), 'DataPage')\nconst ModelsPage         = lazyCompat(() => import('./components/ModelsPage'), 'ModelsPage')\nconst MonitoringPage     = lazyCompat(() => import('./components/MonitoringPage'), 'MonitoringPage')\nconst LogsPage           = lazyCompat(() => import('./components/LogsPage'), 'LogsPage')\nconst SettingsPage       = lazyCompat(() => import('./components/SettingsPage'), 'SettingsPage')\nconst TeamPage           = lazyCompat(() => import('./components/TeamPage'), 'TeamPage')\nconst TrainingManagement = lazyCompat(() => import('./components/TrainingManagement'), 'TrainingManagement')\nconst ProjectDownloader  = lazyCompat(() => import('./components/ProjectDownloader'), 'ProjectDownloader')\nconst DatasetGallery     = lazyCompat(() => import('./components/DatasetGallery'), 'DatasetGallery')\n\nfunction AppLoading() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-900 to-slate-800\" dir=\"rtl\">\n      <div className=\"text-center space-y-4\">\n        <div className=\"w-16 h-16 rounded-full border-4 border-blue-500 border-t-transparent animate-spin mx-auto\" />\n        <div className=\"text-white font-persian text-lg\">\n          در حال بارگذاری سیستم هوش مصنوعی حقوقی...\n        </div>\n        <div className=\"text-slate-400 text-sm\">\n          لطفاً صبر کنید\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default function App() {\n  return (\n    <ErrorBoundary>\n      <SystemProvider>\n        <NotificationProvider>\n          <ToastProvider>\n            <Suspense fallback={<AppLoading />}>\n              <Routes>\n                <Route path=\"/\" element={<EnhancedLandingPage />} />\n                <Route element={<EnhancedAppLayout />}>\n                  <Route path=\"/overview\" element={<Overview />} />\n                  <Route path=\"/dashboard\" element={<DashboardAdvanced />} />\n                  <Route path=\"/dashboard-advanced\" element={<DashboardAdvanced />} />\n                  <Route path=\"/analytics\" element={<AnalyticsPage />} />\n                  <Route path=\"/data\" element={<DataPage />} />\n                  <Route path=\"/data-gallery\" element={<DatasetGallery />} />\n                  <Route path=\"/logs\" element={<LogsPage />} />\n                  <Route path=\"/models\" element={<ModelsPage />} />\n                  <Route path=\"/models/:category\" element={<ModelsPage />} />\n                  <Route path=\"/monitoring\" element={<MonitoringPage />} />\n                  <Route path=\"/training\" element={<TrainingManagement />} />\n                  <Route path=\"/team\" element={<TeamPage />} />\n                  <Route path=\"/settings\" element={<SettingsPage />} />\n                  <Route path=\"/download\" element={<ProjectDownloader />} />\n                  <Route path=\"/legal-docs\" element={<DataPage />} />\n                  <Route path=\"/export\" element={<ProjectDownloader />} />\n                  <Route path=\"/import\" element={<DataPage />} />\n                </Route>\n                <Route path=\"*\" element={<Navigate to=\"/overview\" replace />} />\n              </Routes>\n            </Suspense>\n          </ToastProvider>\n        </NotificationProvider>\n      </SystemProvider>\n    </ErrorBoundary>\n  )\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { ErrorBoundary } from './components/ErrorBoundary';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst basename = (import.meta as any).env.BASE_URL || '/newboltailearn/';\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <HashRouter \r\n      basename={basename}\r\n      future={{\r\n        v7_startTransition: true,\r\n        v7_relativeSplatPath: true\r\n      }}\r\n    >\r\n      <ErrorBoundary>\r\n        <App />\r\n      </ErrorBoundary>\r\n    </HashRouter>\r\n  </React.StrictMode>\r\n);"],"file":"assets/index-BocINV5w.js"}
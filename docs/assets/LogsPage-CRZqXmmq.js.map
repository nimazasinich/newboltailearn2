{"version":3,"file":"LogsPage-CRZqXmmq.js","sources":["../../src/services/monitoring.ts","../../src/components/ui/PageSkeleton.tsx","../../src/components/ui/DataTable.tsx","../../src/components/LogsPage.tsx"],"sourcesContent":["import { apiRequest, API_ENDPOINTS } from '../lib/api-config';\n\n// Monitoring interfaces\nexport interface SystemMetrics {\n  cpu: number;\n  memory: {\n    used: number;\n    total: number;\n    percentage: number;\n  };\n  process_memory: {\n    used: number;\n    total: number;\n    percentage: number;\n  };\n  uptime: number;\n  system_uptime: number;\n  platform: string;\n  arch: string;\n  timestamp: string;\n  active_training: number;\n}\n\nexport interface TrainingStatus {\n  active: number;\n  total: number;\n  completed: number;\n  failed: number;\n  success_rate: string;\n}\n\nexport interface DatasetStatus {\n  available: number;\n  downloading: number;\n  total: number;\n}\n\nexport interface SystemActivity {\n  [level: string]: number;\n}\n\nexport interface MonitoringData {\n  cpu: number;\n  memory: {\n    used: number;\n    total: number;\n    percentage: number;\n  };\n  process_memory: {\n    used: number;\n    total: number;\n    percentage: number;\n  };\n  uptime: number;\n  system_uptime: number;\n  platform: string;\n  arch: string;\n  timestamp: string;\n  active_training: number;\n  training: TrainingStatus;\n  datasets: DatasetStatus;\n  activity: SystemActivity;\n}\n\nexport interface HealthCheck {\n  status: 'healthy' | 'degraded' | 'unhealthy';\n  timestamp: string;\n  uptime: number;\n  environment: string;\n  database: 'connected' | 'disconnected';\n  version: string;\n  components?: {\n    database: boolean;\n    redis?: boolean;\n    storage: boolean;\n    external_apis: boolean;\n  };\n}\n\nexport interface LogEntry {\n  id: number;\n  level: 'info' | 'warning' | 'error' | 'debug';\n  category: string;\n  message: string;\n  metadata?: string;\n  timestamp: string;\n  model_name?: string; // For training logs\n  model_id?: number;\n  epoch?: number;\n  loss?: number;\n  accuracy?: number;\n}\n\n// Monitoring API functions\nexport async function getSystemMetrics(): Promise<MonitoringData> {\n  const response = await apiRequest(API_ENDPOINTS.MONITORING);\n  return response.json();\n}\n\nexport async function getHealthCheck(): Promise<HealthCheck> {\n  const response = await apiRequest(API_ENDPOINTS.HEALTH);\n  return response.json();\n}\n\nexport async function getPerformanceMetrics(): Promise<{\n  cpu_history: number[];\n  memory_history: number[];\n  timestamps: string[];\n  average_response_time: number;\n  error_rate: number;\n}> {\n  const response = await apiRequest(API_ENDPOINTS.MONITORING_PERFORMANCE);\n  return response.json();\n}\n\n// Logs\nexport async function getLogs(params?: {\n  type?: 'system' | 'training';\n  level?: 'info' | 'warning' | 'error' | 'debug';\n  limit?: number;\n  offset?: number;\n}): Promise<LogEntry[]> {\n  try {\n    const searchParams = new URLSearchParams();\n    if (params) {\n      Object.entries(params).forEach(([key, value]) => {\n        if (value !== undefined) {\n          searchParams.append(key, String(value));\n        }\n      });\n    }\n    \n    const query = searchParams.toString();\n    const url = query ? `${API_ENDPOINTS.LOGS}?${query}` : API_ENDPOINTS.LOGS;\n    \n    const response = await apiRequest(url);\n    const data = await response.json();\n    \n    // Handle different response formats from API\n    if (data && typeof data === 'object') {\n      // If response has logs property (paginated response)\n      if (Array.isArray(data.logs)) {\n        return data.logs;\n      }\n      // If response is directly an array\n      if (Array.isArray(data)) {\n        return data;\n      }\n    }\n    \n    // Fallback to empty array if data is not in expected format\n    return [];\n  } catch (error) {\n    console.error('Failed to fetch logs:', error);\n    return [];\n  }\n}\n\nexport async function getSystemLogs(limit: number = 100): Promise<LogEntry[]> {\n  return getLogs({ type: 'system', limit });\n}\n\nexport async function getTrainingLogs(limit: number = 100): Promise<LogEntry[]> {\n  return getLogs({ type: 'training', limit });\n}\n\nexport async function getErrorLogs(limit: number = 50): Promise<LogEntry[]> {\n  return getLogs({ level: 'error', limit });\n}\n\n// Export monitoring data\nexport async function exportMonitoringData(\n  format: 'csv' | 'json' = 'json',\n  timeRange: '24h' | '7d' | '30d' = '24h'\n): Promise<Blob> {\n  const response = await apiRequest(`/monitoring/export?format=${format}&timeRange=${timeRange}`);\n  return response.blob();\n}\n\n// Real-time monitoring helpers\nexport function getSystemHealthStatus(metrics: SystemMetrics): 'healthy' | 'warning' | 'critical' {\n  const cpuThreshold = 80;\n  const memoryThreshold = 85;\n  \n  if (metrics.cpu > 90 || metrics.memory.percentage > 90) {\n    return 'critical';\n  }\n  \n  if (metrics.cpu > cpuThreshold || metrics.memory.percentage > memoryThreshold) {\n    return 'warning';\n  }\n  \n  return 'healthy';\n}\n\nexport function formatUptime(seconds: number): string {\n  const days = Math.floor(seconds / 86400);\n  const hours = Math.floor((seconds % 86400) / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  \n  if (days > 0) {\n    return `${days}d ${hours}h ${minutes}m`;\n  }\n  if (hours > 0) {\n    return `${hours}h ${minutes}m`;\n  }\n  return `${minutes}m`;\n}\n\nexport function getMetricColor(value: number, thresholds: { warning: number; critical: number }): string {\n  if (value >= thresholds.critical) {\n    return 'text-red-600 bg-red-50';\n  }\n  if (value >= thresholds.warning) {\n    return 'text-yellow-600 bg-yellow-50';\n  }\n  return 'text-green-600 bg-green-50';\n}\n\nexport function formatBytes(bytes: number): string {\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n  if (bytes === 0) return '0 B';\n  \n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\n  return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + ' ' + sizes[i];\n}\n\n// Alert thresholds\nexport const ALERT_THRESHOLDS = {\n  cpu: { warning: 70, critical: 90 },\n  memory: { warning: 80, critical: 95 },\n  disk: { warning: 85, critical: 95 },\n  error_rate: { warning: 5, critical: 10 }, // percentage\n} as const;\n","import React from 'react';\n\nexport function PageSkeleton() {\n  return (\n    <div className=\"animate-pulse space-y-6\" role=\"status\" aria-label=\"در حال بارگذاری...\">\n      {/* Header skeleton */}\n      <div className=\"space-y-3\">\n        <div className=\"h-9 bg-gray-200 dark:bg-gray-700 rounded w-1/3\"></div>\n        <div className=\"h-5 bg-gray-200 dark:bg-gray-700 rounded w-2/3\"></div>\n      </div>\n\n      {/* Stats cards skeleton */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {Array.from({ length: 4 }).map((_, i) => (\n          <div key={`stat-${i}`} className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"w-12 h-12 bg-gray-200 dark:bg-gray-700 rounded-lg\"></div>\n              <div className=\"ms-4 space-y-2 flex-1\">\n                <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-2/3\"></div>\n                <div className=\"h-7 bg-gray-200 dark:bg-gray-700 rounded w-1/2\"></div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Content cards skeleton */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\n        {Array.from({ length: 6 }).map((_, i) => (\n          <div key={`content-${i}`} className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6 space-y-4\">\n            <div className=\"flex justify-between items-start\">\n              <div className=\"flex-1 space-y-2\">\n                <div className=\"h-6 bg-gray-200 dark:bg-gray-700 rounded w-3/4\"></div>\n                <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-1/2\"></div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <div className=\"w-5 h-5 bg-gray-200 dark:bg-gray-700 rounded\"></div>\n                <div className=\"w-16 h-6 bg-gray-200 dark:bg-gray-700 rounded-full\"></div>\n              </div>\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"bg-gray-50 dark:bg-gray-700 p-3 rounded-lg space-y-2\">\n                <div className=\"h-6 bg-gray-200 dark:bg-gray-600 rounded w-2/3 mx-auto\"></div>\n                <div className=\"h-3 bg-gray-200 dark:bg-gray-600 rounded w-1/2 mx-auto\"></div>\n              </div>\n              <div className=\"bg-gray-50 dark:bg-gray-700 p-3 rounded-lg space-y-2\">\n                <div className=\"h-6 bg-gray-200 dark:bg-gray-600 rounded w-2/3 mx-auto\"></div>\n                <div className=\"h-3 bg-gray-200 dark:bg-gray-600 rounded w-1/2 mx-auto\"></div>\n              </div>\n            </div>\n            <div className=\"flex gap-2\">\n              <div className=\"flex-1 h-10 bg-gray-200 dark:bg-gray-700 rounded\"></div>\n              <div className=\"w-10 h-10 bg-gray-200 dark:bg-gray-700 rounded\"></div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Announcement for screen readers */}\n      <div className=\"sr-only\" aria-live=\"polite\" aria-atomic=\"true\">\n        در حال بارگذاری محتوا، لطفاً صبر کنید...\n      </div>\n    </div>\n  );\n}\n\nexport function InlineLoader({ \n  size = 'sm', \n  className = '', \n  text,\n  variant = 'spinner' \n}: { \n  size?: 'sm' | 'md' | 'lg'; \n  className?: string; \n  text?: string;\n  variant?: 'spinner' | 'dots' | 'pulse';\n}) {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-6 h-6', \n    lg: 'w-8 h-8'\n  };\n\n  const renderSpinner = () => (\n    <div className={`animate-spin rounded-full border-2 border-gray-300 border-t-blue-600 dark:border-gray-600 dark:border-t-blue-400 ${sizeClasses[size]}`}></div>\n  );\n\n  const renderDots = () => (\n    <div className=\"flex gap-1\">\n      {[0, 1, 2].map(i => (\n        <div \n          key={i}\n          className={`bg-blue-600 dark:bg-blue-400 rounded-full animate-pulse ${sizeClasses[size]}`}\n          style={{ animationDelay: `${i * 0.2}s` }}\n        ></div>\n      ))}\n    </div>\n  );\n\n  const renderPulse = () => (\n    <div className={`bg-blue-600 dark:bg-blue-400 rounded animate-pulse ${sizeClasses[size]}`}></div>\n  );\n\n  const renderLoader = () => {\n    switch (variant) {\n      case 'dots': return renderDots();\n      case 'pulse': return renderPulse();\n      default: return renderSpinner();\n    }\n  };\n\n  return (\n    <div className={`flex items-center justify-center gap-2 ${className}`} role=\"status\" aria-label=\"در حال بارگذاری...\">\n      {renderLoader()}\n      {text && (\n        <span className=\"text-sm text-gray-600 dark:text-gray-400\">{text}</span>\n      )}\n      <span className=\"sr-only\">در حال بارگذاری...</span>\n    </div>\n  );\n}","import React, { useState, useMemo } from 'react';\nimport { ChevronUp, ChevronDown, Search, ChevronLeft, ChevronRight } from 'lucide-react';\nimport { cn } from '../../utils/cn';\n\nexport interface Column<T> {\n  key: keyof T;\n  title: string;\n  sortable?: boolean;\n  searchable?: boolean;\n  render?: (value: any, row: T, index: number) => React.ReactNode;\n  width?: string;\n  align?: 'left' | 'center' | 'right';\n  className?: string;\n}\n\nexport interface DataTableProps<T> {\n  data: T[];\n  columns: Column<T>[];\n  loading?: boolean;\n  error?: string;\n  itemsPerPage?: number;\n  onRowClick?: (row: T, index: number) => void;\n  className?: string;\n  emptyMessage?: string;\n  searchPlaceholder?: string;\n  showSearch?: boolean;\n  showPagination?: boolean;\n  striped?: boolean;\n  hoverable?: boolean;\n  compact?: boolean;\n}\n\nfunction DataTable<T extends Record<string, any>>({\n  data,\n  columns,\n  loading = false,\n  error,\n  itemsPerPage = 10,\n  onRowClick,\n  className = '',\n  emptyMessage = 'داده‌ای یافت نشد',\n  searchPlaceholder = 'جستجو...',\n  showSearch = true,\n  showPagination = true,\n  striped = true,\n  hoverable = true,\n  compact = false,\n}: DataTableProps<T>) {\n  const [sortField, setSortField] = useState<keyof T | null>(null);\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Filter and sort data\n  const processedData = useMemo(() => {\n    let filtered = [...data];\n\n    // Search filter\n    if (searchTerm && showSearch) {\n      const searchableColumns = columns.filter(col => col.searchable !== false);\n      filtered = data.filter((row) =>\n        searchableColumns.some((col) =>\n          String(row[col.key] || '').toLowerCase().includes(searchTerm.toLowerCase())\n        )\n      );\n    }\n\n    // Sort\n    if (sortField) {\n      filtered.sort((a, b) => {\n        const aVal = a[sortField];\n        const bVal = b[sortField];\n        \n        // Handle null/undefined values\n        if (aVal == null && bVal == null) return 0;\n        if (aVal == null) return 1;\n        if (bVal == null) return -1;\n        \n        // Handle different data types\n        if (typeof aVal === 'string' && typeof bVal === 'string') {\n          return sortDirection === 'asc' \n            ? aVal.localeCompare(bVal, 'fa')\n            : bVal.localeCompare(aVal, 'fa');\n        }\n        \n        if (typeof aVal === 'number' && typeof bVal === 'number') {\n          return sortDirection === 'asc' ? aVal - bVal : bVal - aVal;\n        }\n        \n        // Fallback to string comparison\n        const aStr = String(aVal);\n        const bStr = String(bVal);\n        return sortDirection === 'asc' \n          ? aStr.localeCompare(bStr, 'fa')\n          : bStr.localeCompare(aStr, 'fa');\n      });\n    }\n\n    return filtered;\n  }, [data, columns, searchTerm, sortField, sortDirection, showSearch]);\n\n  // Pagination\n  const totalPages = Math.ceil(processedData.length / itemsPerPage);\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const paginatedData = showPagination \n    ? processedData.slice(startIndex, startIndex + itemsPerPage)\n    : processedData;\n\n  // Reset pagination when search changes\n  React.useEffect(() => {\n    setCurrentPage(1);\n  }, [searchTerm]);\n\n  const handleSort = (field: keyof T) => {\n    const column = columns.find(col => col.key === field);\n    if (!column?.sortable) return;\n\n    if (sortField === field) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n\n  const getSortIcon = (field: keyof T) => {\n    if (sortField !== field) return null;\n    return sortDirection === 'asc' \n      ? <ChevronUp className=\"h-4 w-4\" />\n      : <ChevronDown className=\"h-4 w-4\" />;\n  };\n\n  // Loading skeleton\n  if (loading) {\n    return (\n      <div className={cn('space-y-4', className)}>\n        {showSearch && (\n          <div className=\"h-10 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\"></div>\n        )}\n        <div className=\"space-y-2\">\n          <div className=\"h-12 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\"></div>\n          {[...Array(5)].map((_, i) => (\n            <div key={i} className=\"h-10 bg-gray-100 dark:bg-gray-800 rounded animate-pulse\"></div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  // Error state\n  if (error) {\n    return (\n      <div className={cn('text-center py-8', className)}>\n        <div className=\"text-red-600 dark:text-red-400 mb-2\">خطا در بارگذاری داده‌ها</div>\n        <div className=\"text-sm text-gray-500 dark:text-gray-400\">{error}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={cn('space-y-4', className)} dir=\"rtl\">\n      {/* Search */}\n      {showSearch && (\n        <div className=\"flex items-center gap-4\">\n          <div className=\"relative flex-1 max-w-sm\">\n            <Search className=\"absolute right-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder={searchPlaceholder}\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pr-10 pl-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\"\n            />\n          </div>\n          \n          {showPagination && processedData.length > 0 && (\n            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n              نمایش {startIndex + 1}-{Math.min(startIndex + itemsPerPage, processedData.length)} از {processedData.length} مورد\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Table */}\n      <div className=\"overflow-x-auto rounded-lg border border-gray-200 dark:border-gray-700\">\n        <table className=\"w-full bg-white dark:bg-gray-800\">\n          <thead className=\"bg-gray-50 dark:bg-gray-900\">\n            <tr>\n              {columns.map((column) => (\n                <th\n                  key={String(column.key)}\n                  className={cn(\n                    'px-4 py-3 text-sm font-semibold text-gray-700 dark:text-gray-300',\n                    column.sortable && 'cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800 select-none',\n                    column.align === 'center' && 'text-center',\n                    column.align === 'left' && 'text-left',\n                    'text-right', // Default RTL alignment\n                    compact && 'px-2 py-2',\n                    column.className\n                  )}\n                  style={{ width: column.width }}\n                  onClick={() => column.sortable && handleSort(column.key)}\n                >\n                  <div className={cn(\n                    'flex items-center gap-2',\n                    column.align === 'center' && 'justify-center',\n                    column.align === 'left' && 'justify-start',\n                    'justify-end' // Default RTL alignment\n                  )}>\n                    <span>{column.title}</span>\n                    {column.sortable && (\n                      <div className=\"flex flex-col\">\n                        {getSortIcon(column.key) || (\n                          <div className=\"text-gray-400\">\n                            <ChevronUp className=\"h-3 w-3\" />\n                            <ChevronDown className=\"h-3 w-3 -mt-1\" />\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {paginatedData.length > 0 ? (\n              paginatedData.map((row, index) => (\n                <tr\n                  key={index}\n                  className={cn(\n                    'border-t border-gray-100 dark:border-gray-700',\n                    striped && index % 2 === 0 && 'bg-gray-50/50 dark:bg-gray-800/50',\n                    hoverable && 'hover:bg-gray-50 dark:hover:bg-gray-800',\n                    onRowClick && 'cursor-pointer'\n                  )}\n                  onClick={() => onRowClick?.(row, startIndex + index)}\n                >\n                  {columns.map((column) => (\n                    <td\n                      key={String(column.key)}\n                      className={cn(\n                        'px-4 py-3 text-sm text-gray-900 dark:text-gray-100',\n                        column.align === 'center' && 'text-center',\n                        column.align === 'left' && 'text-left',\n                        'text-right', // Default RTL alignment\n                        compact && 'px-2 py-2',\n                        column.className\n                      )}\n                    >\n                      {column.render \n                        ? column.render(row[column.key], row, startIndex + index)\n                        : String(row[column.key] || '')\n                      }\n                    </td>\n                  ))}\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td \n                  colSpan={columns.length} \n                  className=\"px-4 py-8 text-center text-gray-500 dark:text-gray-400\"\n                >\n                  {emptyMessage}\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Pagination */}\n      {showPagination && totalPages > 1 && (\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <button\n              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n              disabled={currentPage === 1}\n              className=\"flex items-center gap-1 px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-md disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50 dark:hover:bg-gray-700\"\n            >\n              <ChevronRight className=\"h-4 w-4\" />\n              قبلی\n            </button>\n            \n            <div className=\"flex items-center gap-1\">\n              {/* Page numbers */}\n              {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                let pageNum;\n                if (totalPages <= 5) {\n                  pageNum = i + 1;\n                } else if (currentPage <= 3) {\n                  pageNum = i + 1;\n                } else if (currentPage >= totalPages - 2) {\n                  pageNum = totalPages - 4 + i;\n                } else {\n                  pageNum = currentPage - 2 + i;\n                }\n                \n                return (\n                  <button\n                    key={pageNum}\n                    onClick={() => setCurrentPage(pageNum)}\n                    className={cn(\n                      'px-3 py-2 text-sm rounded-md',\n                      currentPage === pageNum\n                        ? 'bg-primary-600 text-white'\n                        : 'border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700'\n                    )}\n                  >\n                    {pageNum.toLocaleString('fa-IR')}\n                  </button>\n                );\n              })}\n            </div>\n            \n            <button\n              onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n              disabled={currentPage === totalPages}\n              className=\"flex items-center gap-1 px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-md disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50 dark:hover:bg-gray-700\"\n            >\n              بعدی\n              <ChevronLeft className=\"h-4 w-4\" />\n            </button>\n          </div>\n          \n          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n            صفحه {currentPage.toLocaleString('fa-IR')} از {totalPages.toLocaleString('fa-IR')}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DataTable;\n","import React, { useState, useEffect } from 'react';\nimport { FileText, Filter, Download, RefreshCw, AlertCircle, Search } from 'lucide-react';\nimport { getLogs, getSystemLogs, getTrainingLogs, getErrorLogs, type LogEntry } from '../services/monitoring';\nimport { PageSkeleton } from './ui/PageSkeleton';\nimport DataTable, { type Column } from './ui/DataTable';\nimport { useToast } from './ui/Toast';\n\ntype LogFilter = 'all' | 'system' | 'training' | 'error';\n\nexport function LogsPage() {\n  const [logs, setLogs] = useState<LogEntry[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [filter, setFilter] = useState<LogFilter>('all');\n  const { addToast } = useToast();\n\n  useEffect(() => {\n    loadLogs();\n  }, [filter]);\n\n  const loadLogs = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      let logsData: any;\n      switch (filter) {\n        case 'system':\n          logsData = await getSystemLogs(200);\n          break;\n        case 'training':\n          logsData = await getTrainingLogs(200);\n          break;\n        case 'error':\n          logsData = await getErrorLogs(200);\n          break;\n        default:\n          logsData = await getLogs({ limit: 200 });\n      }\n      \n      // Ensure logsData is always an array\n      const logsArray = Array.isArray(logsData) ? logsData : [];\n      setLogs(logsArray);\n    } catch (err) {\n      console.error('Failed to load logs:', err);\n      setError('خطا در بارگذاری گزارش‌ها');\n      setLogs([]); // Set to empty array on error\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleExport = () => {\n    try {\n      const csvContent = [\n        ['زمان', 'سطح', 'دسته‌بندی', 'پیام', 'جزئیات'].join(','),\n        ...logs.map(log => [\n          new Date(log.timestamp).toLocaleString('fa-IR'),\n          log.level,\n          log.category || '',\n          `\"${log.message.replace(/\"/g, '\"\"')}\"`,\n          log.metadata ? `\"${log.metadata.replace(/\"/g, '\"\"')}\"` : ''\n        ].join(','))\n      ].join('\\n');\n\n      const blob = new Blob(['\\ufeff' + csvContent], { type: 'text/csv;charset=utf-8;' });\n      const link = document.createElement('a');\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', `logs_${new Date().toISOString().split('T')[0]}.csv`);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      \n      addToast({ type: 'success', title: 'گزارش‌ها با موفقیت صادر شد' });\n    } catch (err) {\n      console.error('Failed to export logs:', err);\n      addToast({ type: 'error', title: 'خطا در صادرات گزارش‌ها' });\n    }\n  };\n\n  const getLevelIcon = (level: string) => {\n    switch (level) {\n      case 'error':\n        return '🔴';\n      case 'warning':\n        return '🟡';\n      case 'info':\n        return '🔵';\n      case 'debug':\n        return '⚪';\n      default:\n        return '📝';\n    }\n  };\n\n  const getLevelColor = (level: string) => {\n    switch (level) {\n      case 'error':\n        return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n      case 'warning':\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n      case 'info':\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n      case 'debug':\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\n    }\n  };\n\n  const columns: Column<LogEntry>[] = [\n    {\n      key: 'timestamp',\n      title: 'زمان',\n      sortable: true,\n      width: '160px',\n      render: (value) => (\n        <div className=\"text-xs font-mono\">\n          <div>{new Date(value).toLocaleDateString('fa-IR')}</div>\n          <div className=\"text-gray-500\">{new Date(value).toLocaleTimeString('fa-IR')}</div>\n        </div>\n      ),\n    },\n    {\n      key: 'level',\n      title: 'سطح',\n      sortable: true,\n      width: '90px',\n      align: 'center',\n      render: (value) => (\n        <div className=\"flex items-center justify-center gap-1\">\n          <span>{getLevelIcon(value)}</span>\n          <span className={`px-2 py-1 rounded-full text-xs font-medium ${getLevelColor(value)}`}>\n            {value}\n          </span>\n        </div>\n      ),\n    },\n    {\n      key: 'category',\n      title: 'دسته‌بندی',\n      sortable: true,\n      width: '120px',\n      render: (value) => (\n        <span className=\"text-sm bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded text-gray-700 dark:text-gray-300\">\n          {value || 'عمومی'}\n        </span>\n      ),\n    },\n    {\n      key: 'message',\n      title: 'پیام',\n      render: (value, row) => (\n        <div className=\"space-y-1\">\n          <div className=\"text-sm\">{value}</div>\n          {row.model_name && (\n            <div className=\"text-xs text-blue-600 dark:text-blue-400\">\n              مدل: {row.model_name}\n            </div>\n          )}\n          {(row.epoch !== undefined || row.accuracy !== undefined) && (\n            <div className=\"text-xs text-gray-500 space-x-2 space-x-reverse\">\n              {row.epoch !== undefined && <span>Epoch: {row.epoch}</span>}\n              {row.accuracy !== undefined && <span>دقت: {(row.accuracy * 100).toFixed(1)}%</span>}\n              {row.loss !== undefined && <span>Loss: {row.loss.toFixed(4)}</span>}\n            </div>\n          )}\n          {row.metadata && (\n            <details className=\"text-xs\">\n              <summary className=\"cursor-pointer text-gray-500 hover:text-gray-700\">جزئیات</summary>\n              <pre className=\"mt-1 p-2 bg-gray-100 dark:bg-gray-700 rounded text-xs overflow-auto\">\n                {JSON.stringify(JSON.parse(row.metadata), null, 2)}\n              </pre>\n            </details>\n          )}\n        </div>\n      ),\n    },\n  ];\n\n  const filterOptions = [\n    { value: 'all', label: 'همه گزارش‌ها', count: logs.length },\n    { value: 'system', label: 'سیستم', count: logs.filter(l => l.category !== 'training').length },\n    { value: 'training', label: 'آموزش', count: logs.filter(l => l.category === 'training').length },\n    { value: 'error', label: 'خطاها', count: logs.filter(l => l.level === 'error').length },\n  ];\n\n  if (loading && logs.length === 0) {\n    return <PageSkeleton />;\n  }\n\n  return (\n    <div className=\"space-y-6\" dir=\"rtl\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">گزارش‌های سیستم</h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n            مشاهده و تحلیل گزارش‌های سیستم و فعالیت‌های آموزش\n          </p>\n        </div>\n        <div className=\"flex gap-3\">\n          <button\n            onClick={handleExport}\n            disabled={logs.length === 0}\n            className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            <Download className=\"h-4 w-4\" />\n            صادرات CSV\n          </button>\n          <button\n            onClick={loadLogs}\n            disabled={loading}\n            className=\"flex items-center gap-2 px-4 py-2 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors disabled:opacity-50\"\n          >\n            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\n            بروزرسانی\n          </button>\n        </div>\n      </div>\n\n      {/* Error Alert */}\n      {error && (\n        <div className=\"p-4 bg-red-50 dark:bg-red-950 border border-red-200 dark:border-red-800 rounded-lg\">\n          <div className=\"flex items-center gap-2\">\n            <AlertCircle className=\"h-5 w-5 text-red-600\" />\n            <p className=\"text-red-800 dark:text-red-200\">{error}</p>\n          </div>\n        </div>\n      )}\n\n      {/* Filters */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4\">\n        <div className=\"flex items-center gap-4\">\n          <div className=\"flex items-center gap-2\">\n            <Filter className=\"h-4 w-4 text-gray-600\" />\n            <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">فیلتر:</span>\n          </div>\n          <div className=\"flex gap-2\">\n            {filterOptions.map((option) => (\n              <button\n                key={option.value}\n                onClick={() => setFilter(option.value as LogFilter)}\n                className={`flex items-center gap-2 px-3 py-1 rounded-lg text-sm transition-colors ${\n                  filter === option.value\n                    ? 'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200'\n                    : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n                }`}\n              >\n                <span>{option.label}</span>\n                <span className=\"bg-white dark:bg-gray-800 px-2 py-0.5 rounded-full text-xs\">\n                  {option.count.toLocaleString('fa-IR')}\n                </span>\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Logs Table */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n              {filterOptions.find(f => f.value === filter)?.label || 'گزارش‌ها'}\n            </h2>\n            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n              {logs.length.toLocaleString('fa-IR')} مورد\n            </div>\n          </div>\n          \n          <DataTable\n            data={logs}\n            columns={columns}\n            loading={loading}\n            error={error || undefined}\n            emptyMessage=\"هیچ گزارشی یافت نشد\"\n            searchPlaceholder=\"جستجوی گزارش‌ها...\"\n            itemsPerPage={25}\n            compact\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LogsPage;"],"names":["async","getLogs","params","searchParams","URLSearchParams","Object","entries","forEach","key","value","append","String","query","toString","url","API_ENDPOINTS","LOGS","response","apiRequest","data","json","Array","isArray","logs","error","console","PageSkeleton","className","role","children","jsxs","jsx","from","length","map","_","i","DataTable","columns","loading","itemsPerPage","onRowClick","emptyMessage","searchPlaceholder","showSearch","showPagination","striped","hoverable","compact","sortField","setSortField","useState","sortDirection","setSortDirection","currentPage","setCurrentPage","searchTerm","setSearchTerm","processedData","useMemo","filtered","searchableColumns","filter","col","searchable","row","some","toLowerCase","includes","sort","a","b","aVal","bVal","localeCompare","aStr","bStr","totalPages","Math","ceil","startIndex","paginatedData","slice","React","useEffect","cn","dir","Search","type","placeholder","onChange","e","target","min","column","sortable","align","style","width","onClick","field","find","handleSort","title","ChevronUp","ChevronDown","index","render","colSpan","max","disabled","ChevronRight","pageNum","toLocaleString","ChevronLeft","LogsPage","setLogs","setLoading","setError","setFilter","addToast","useToast","loadLogs","logsData","limit","getSystemLogs","getTrainingLogs","level","getErrorLogs","logsArray","err","getLevelIcon","getLevelColor","Date","toLocaleDateString","toLocaleTimeString","model_name","epoch","accuracy","toFixed","loss","metadata","JSON","stringify","parse","filterOptions","label","count","l","category","csvContent","join","log","timestamp","message","replace","blob","Blob","link","document","createElement","URL","createObjectURL","setAttribute","toISOString","split","visibility","body","appendChild","click","removeChild","Download","RefreshCw","AlertCircle","Filter","option","f"],"mappings":"oUAoHAA,eAAsBC,EAAQC,GAM5B,IACE,MAAMC,EAAe,IAAIC,gBACrBF,GACFG,OAAOC,QAAQJ,GAAQK,QAAQ,EAAEC,EAAKC,WACtB,IAAVA,GACFN,EAAaO,OAAOF,EAAKG,OAAOF,MAKtC,MAAMG,EAAQT,EAAaU,WACrBC,EAAMF,EAAQ,GAAGG,EAAcC,QAAQJ,IAAUG,EAAcC,KAE/DC,QAAiBC,EAAWJ,GAC5BK,QAAaF,EAASG,OAG5B,GAAID,GAAwB,iBAATA,EAAmB,CAEpC,GAAIE,MAAMC,QAAQH,EAAKI,MACrB,OAAOJ,EAAKI,KAGd,GAAIF,MAAMC,QAAQH,GAChB,OAAOA,CAEX,CAGA,MAAO,EACT,OAASK,GAEP,OADAC,QAAQD,MAAM,wBAAyBA,GAChC,EACT,CACF,CC1JO,SAASE,IACd,cACG,MAAA,CAAIC,UAAU,0BAA0BC,KAAK,SAAS,aAAW,qBAEhEC,SAAA,GAAAC,KAAC,MAAA,CAAIH,UAAU,YACbE,SAAA,GAAAE,IAAC,MAAA,CAAIJ,UAAU,qDACfI,IAAC,MAAA,CAAIJ,UAAU,sDAIjBI,EAAAA,IAAC,OAAIJ,UAAU,uDACZE,eAAMG,KAAK,CAAEC,OAAQ,IAAKC,IAAI,CAACC,EAAGC,IACjCL,EAAAA,IAAC,MAAA,CAAsBJ,UAAU,uFAC/BE,SAAAC,EAAAA,KAAC,MAAA,CAAIH,UAAU,oBACbE,SAAA,GAAAE,IAAC,MAAA,CAAIJ,UAAU,wDACfG,KAAC,MAAA,CAAIH,UAAU,wBACbE,SAAA,GAAAE,IAAC,MAAA,CAAIJ,UAAU,qDACfI,IAAC,MAAA,CAAIJ,UAAU,0DALX,QAAQS,cAarB,MAAA,CAAIT,UAAU,uDACZE,SAAAR,MAAMW,KAAK,CAAEC,OAAQ,IAAKC,IAAI,CAACC,EAAGC,IACjCN,EAAAA,KAAC,MAAA,CAAyBH,UAAU,iGAClCE,SAAA,GAAAC,KAAC,MAAA,CAAIH,UAAU,mCACbE,SAAA,GAAAC,KAAC,MAAA,CAAIH,UAAU,mBACbE,SAAA,GAAAE,IAAC,MAAA,CAAIJ,UAAU,qDACfI,IAAC,MAAA,CAAIJ,UAAU,wDAEjBG,KAAC,MAAA,CAAIH,UAAU,0BACbE,SAAA,GAAAE,IAAC,MAAA,CAAIJ,UAAU,mDACfI,IAAC,MAAA,CAAIJ,UAAU,+DAGnBG,KAAC,MAAA,CAAIH,UAAU,yBACbE,SAAA,GAAAC,KAAC,MAAA,CAAIH,UAAU,uDACbE,SAAA,GAAAE,IAAC,MAAA,CAAIJ,UAAU,6DACfI,IAAC,MAAA,CAAIJ,UAAU,gEAEjBG,KAAC,MAAA,CAAIH,UAAU,uDACbE,SAAA,GAAAE,IAAC,MAAA,CAAIJ,UAAU,6DACfI,IAAC,MAAA,CAAIJ,UAAU,mEAGnBG,KAAC,MAAA,CAAIH,UAAU,aACbE,SAAA,GAAAE,IAAC,MAAA,CAAIJ,UAAU,uDACfI,IAAC,MAAA,CAAIJ,UAAU,wDAvBT,WAAWS,QA8BzBL,EAAAA,IAAC,OAAIJ,UAAU,UAAU,YAAU,SAAS,cAAY,OAAOE,SAAA,+CAKrE,CChCA,SAASQ,GAAyClB,KAChDA,EAAAmB,QACAA,EAAAC,QACAA,GAAU,EAAAf,MACVA,EAAAgB,aACAA,EAAe,GAAAC,WACfA,EAAAd,UACAA,EAAY,GAAAe,aACZA,EAAe,mBAAAC,kBACfA,EAAoB,WAAAC,WACpBA,GAAa,EAAAC,eACbA,GAAiB,EAAAC,QACjBA,GAAU,EAAAC,UACVA,GAAY,EAAAC,QACZA,GAAU,IAEV,MAAOC,EAAWC,GAAgBC,EAAAA,SAAyB,OACpDC,EAAeC,GAAoBF,EAAAA,SAAyB,QAC5DG,EAAaC,GAAkBJ,EAAAA,SAAS,IACxCK,EAAYC,GAAiBN,EAAAA,SAAS,IAGvCO,EAAgBC,EAAAA,QAAQ,KAC5B,IAAIC,EAAW,IAAIzC,GAGnB,GAAIqC,GAAcZ,EAAY,CAC5B,MAAMiB,EAAoBvB,EAAQwB,OAAOC,IAA0B,IAAnBA,EAAIC,YACpDJ,EAAWzC,EAAK2C,OAAQG,GACtBJ,EAAkBK,KAAMH,GACtBpD,OAAOsD,EAAIF,EAAIvD,MAAQ,IAAI2D,cAAcC,SAASZ,EAAWW,gBAGnE,CAiCA,OA9BIlB,GACFW,EAASS,KAAK,CAACC,EAAGC,KAChB,MAAMC,EAAOF,EAAErB,GACTwB,EAAOF,EAAEtB,GAGf,GAAY,MAARuB,GAAwB,MAARC,EAAc,OAAO,EACzC,GAAY,MAARD,EAAc,OAAO,EACzB,GAAY,MAARC,EAAc,OAAO,EAGzB,GAAoB,iBAATD,GAAqC,iBAATC,EACrC,MAAyB,QAAlBrB,EACHoB,EAAKE,cAAcD,EAAM,MACzBA,EAAKC,cAAcF,EAAM,MAG/B,GAAoB,iBAATA,GAAqC,iBAATC,EACrC,MAAyB,QAAlBrB,EAA0BoB,EAAOC,EAAOA,EAAOD,EAIxD,MAAMG,EAAOhE,OAAO6D,GACdI,EAAOjE,OAAO8D,GACpB,MAAyB,QAAlBrB,EACHuB,EAAKD,cAAcE,EAAM,MACzBA,EAAKF,cAAcC,EAAM,QAI1Bf,GACN,CAACzC,EAAMmB,EAASkB,EAAYP,EAAWG,EAAeR,IAGnDiC,EAAaC,KAAKC,KAAKrB,EAAczB,OAASO,GAC9CwC,GAAc1B,EAAc,GAAKd,EACjCyC,EAAgBpC,EAClBa,EAAcwB,MAAMF,EAAYA,EAAaxC,GAC7CkB,EAGJyB,EAAMC,UAAU,KACd7B,EAAe,IACd,CAACC,IAsBJ,OAAIjB,SAEC,MAAA,CAAIZ,UAAW0D,EAAG,YAAa1D,GAC7BE,SAAA,CAAAe,GACCb,EAAAA,IAAC,MAAA,CAAIJ,UAAU,8DAEjBG,KAAC,MAAA,CAAIH,UAAU,YACbE,SAAA,GAAAE,IAAC,MAAA,CAAIJ,UAAU,4DACd,IAAIN,MAAM,IAAIa,IAAI,CAACC,EAAGC,IACrBL,EAAAA,IAAC,MAAA,CAAYJ,UAAU,2DAAbS,UAQhBZ,SAEC,MAAA,CAAIG,UAAW0D,EAAG,mBAAoB1D,GACrCE,SAAA,CAAAE,EAAAA,IAAC,MAAA,CAAIJ,UAAU,sCAAsCE,SAAA,4BACrDE,EAAAA,IAAC,MAAA,CAAIJ,UAAU,2CAA4CE,SAAAL,OAM/DM,OAAC,OAAIH,UAAW0D,EAAG,YAAa1D,GAAY2D,IAAI,MAE7CzD,SAAA,CAAAe,GACCd,EAAAA,KAAC,MAAA,CAAIH,UAAU,0BACbE,SAAA,GAAAC,KAAC,MAAA,CAAIH,UAAU,2BACbE,SAAA,GAAAE,IAACwD,EAAA,CAAO5D,UAAU,oEAClBI,EAAAA,IAAC,QAAA,CACCyD,KAAK,OACLC,YAAa9C,EACblC,MAAO+C,EACPkC,SAAWC,GAAMlC,EAAckC,EAAEC,OAAOnF,OACxCkB,UAAU,mLAIbkB,GAAkBa,EAAczB,OAAS,GACxCH,EAAAA,KAAC,MAAA,CAAIH,UAAU,2CAA2CE,SAAA,CAAA,SACjDmD,EAAa,EAAE,IAAEF,KAAKe,IAAIb,EAAaxC,EAAckB,EAAczB,QAAQ,OAAKyB,EAAczB,OAAO,oBAOnH,MAAA,CAAIN,UAAU,yEACbE,SAAAC,EAAAA,KAAC,QAAA,CAAMH,UAAU,mCACfE,SAAA,GAAAE,IAAC,QAAA,CAAMJ,UAAU,8BACfE,SAAAE,EAAAA,IAAC,MACEF,SAAAS,EAAQJ,IAAK4D,IACZ/D,SAAAA,IAAC,KAAA,CAECJ,UAAW0D,EACT,mEACAS,EAAOC,UAAY,sEACF,WAAjBD,EAAOE,OAAsB,cACZ,SAAjBF,EAAOE,OAAoB,YAC3B,aACAhD,GAAW,YACX8C,EAAOnE,WAETsE,MAAO,CAAEC,MAAOJ,EAAOI,OACvBC,QAAS,IAAML,EAAOC,UAxFnB,CAACK,IAClB,MAAMN,EAASxD,EAAQ+D,KAAKtC,GAAOA,EAAIvD,MAAQ4F,GAC1CN,GAAQC,WAET9C,IAAcmD,EAChB/C,EAAmC,QAAlBD,EAA0B,OAAS,QAEpDF,EAAakD,GACb/C,EAAiB,UAgF6BiD,CAAWR,EAAOtF,KAEpDqB,SAAAC,EAAAA,KAAC,OAAIH,UAAW0D,EACd,0BACiB,WAAjBS,EAAOE,OAAsB,iBACZ,SAAjBF,EAAOE,OAAoB,gBAC3B,eAEAnE,SAAA,GAAAE,IAAC,OAAA,CAAMF,WAAO0E,QACbT,EAAOC,UACNhE,MAAC,MAAA,CAAIJ,UAAU,gBACZE,UAvFFuE,EAuFcN,EAAOtF,KAtFpCyC,IAAcmD,EAAc,KACP,QAAlBhD,EACHrB,MAACyE,EAAA,CAAU7E,UAAU,cACrBI,IAAC0E,EAAA,CAAY9E,UAAU,cAoFLG,OAAC,MAAA,CAAIH,UAAU,gBACbE,SAAA,GAAAE,IAACyE,EAAA,CAAU7E,UAAU,cACrBI,IAAC0E,EAAA,CAAY9E,UAAU,4BAzB5BhB,OAAOmF,EAAOtF,MAjEf,IAAC4F,QAoGbrE,EAAAA,IAAC,SACEF,SAAAoD,EAAchD,OAAS,EACtBgD,EAAc/C,IAAI,CAAC+B,EAAKyC,IACtB3E,EAAAA,IAAC,KAAA,CAECJ,UAAW0D,EACT,gDACAvC,GAAW4D,EAAQ,GAAM,GAAK,oCAC9B3D,GAAa,0CACbN,GAAc,kBAEhB0D,QAAS,IAAM1D,IAAawB,EAAKe,EAAa0B,GAE7C7E,SAAAS,EAAQJ,IAAK4D,GACZ/D,EAAAA,IAAC,KAAA,CAECJ,UAAW0D,EACT,qDACiB,WAAjBS,EAAOE,OAAsB,cACZ,SAAjBF,EAAOE,OAAoB,YAC3B,aACAhD,GAAW,YACX8C,EAAOnE,WAGRE,WAAO8E,OACJb,EAAOa,OAAO1C,EAAI6B,EAAOtF,KAAMyD,EAAKe,EAAa0B,GACjD/F,OAAOsD,EAAI6B,EAAOtF,MAAQ,KAZzBG,OAAOmF,EAAOtF,QAXlBkG,IA8BT3E,EAAAA,IAAC,KAAA,CACCF,SAAAE,EAAAA,IAAC,KAAA,CACC6E,QAAStE,EAAQL,OACjBN,UAAU,yDAETE,SAAAa,aASZG,GAAkBgC,EAAa,GAC9B/C,EAAAA,KAAC,MAAA,CAAIH,UAAU,oCACbE,SAAA,GAAAC,KAAC,MAAA,CAAIH,UAAU,0BACbE,SAAA,CAAAC,EAAAA,KAAC,SAAA,CACCqE,QAAS,IAAM5C,EAAeuB,KAAK+B,IAAI,EAAGvD,EAAc,IACxDwD,SAA0B,IAAhBxD,EACV3B,UAAU,2LAEVE,SAAA,GAAAE,IAACgF,EAAA,CAAapF,UAAU,YAAY,gBAIrC,MAAA,CAAIA,UAAU,0BAEZE,SAAAR,MAAMW,KAAK,CAAEC,OAAQ6C,KAAKe,IAAI,EAAGhB,IAAe,CAAC1C,EAAGC,KACnD,IAAI4E,EAWJ,OATEA,EADEnC,GAAc,GAEPvB,GAAe,EADdlB,EAAI,EAGLkB,GAAeuB,EAAa,EAC3BA,EAAa,EAAIzC,EAEjBkB,EAAc,EAAIlB,EAI5BL,EAAAA,IAAC,SAAA,CAECoE,QAAS,IAAM5C,EAAeyD,GAC9BrF,UAAW0D,EACT,+BACA/B,IAAgB0D,EACZ,4BACA,uFAGLnF,SAAAmF,EAAQC,eAAe,UATnBD,OAeblF,EAAAA,KAAC,SAAA,CACCqE,QAAS,IAAM5C,EAAeuB,KAAKe,IAAIhB,EAAYvB,EAAc,IACjEwD,SAAUxD,IAAgBuB,EAC1BlD,UAAU,2LACXE,SAAA,CAAA,SAECE,IAACmF,EAAA,CAAYvF,UAAU,oBAI3BG,KAAC,MAAA,CAAIH,UAAU,2CAA2CE,SAAA,CAAA,QAClDyB,EAAY2D,eAAe,SAAS,OAAKpC,EAAWoC,eAAe,iBAMrF,CCpUO,SAASE,IACd,MAAO5F,EAAM6F,GAAWjE,EAAAA,SAAqB,KACtCZ,EAAS8E,GAAclE,EAAAA,UAAS,IAChC3B,EAAO8F,GAAYnE,EAAAA,SAAwB,OAC3CW,EAAQyD,GAAapE,EAAAA,SAAoB,QAC1CqE,SAAEA,GAAaC,IAErBrC,EAAAA,UAAU,KACRsC,KACC,CAAC5D,IAEJ,MAAM4D,EAAW1H,UACf,IAIE,IAAI2H,EACJ,OAJAN,GAAW,GACXC,EAAS,MAGDxD,GACN,IAAK,SACH6D,QHkIV3H,eAAoC4H,EAAgB,KAClD,OAAO3H,EAAQ,CAAEuF,KAAM,SAAUoC,SACnC,CGpI2BC,CAAc,KAC/B,MACF,IAAK,WACHF,QHmIV3H,eAAsC4H,EAAgB,KACpD,OAAO3H,EAAQ,CAAEuF,KAAM,WAAYoC,SACrC,CGrI2BE,CAAgB,KACjC,MACF,IAAK,QACHH,QHoIV3H,eAAmC4H,EAAgB,IACjD,OAAO3H,EAAQ,CAAE8H,MAAO,QAASH,SACnC,CGtI2BI,CAAa,KAC9B,MACF,QACEL,QAAiB1H,EAAQ,CAAE2H,MAAO,MAItC,MAAMK,EAAY5G,MAAMC,QAAQqG,GAAYA,EAAW,GACvDP,EAAQa,EACV,OAASC,GACPzG,QAAQD,MAAM,uBAAwB0G,GACtCZ,EAAS,4BACTF,EAAQ,GACV,CAAA,QACEC,GAAW,EACb,GAiCIc,EAAgBJ,IACpB,OAAQA,GACN,IAAK,QACH,MAAO,KACT,IAAK,UACH,MAAO,KACT,IAAK,OACH,MAAO,KACT,IAAK,QACH,MAAO,IACT,QACE,MAAO,OAIPK,EAAiBL,IACrB,OAAQA,GACN,IAAK,QACH,MAAO,4DACT,IAAK,UACH,MAAO,wEACT,IAAK,OACH,MAAO,gEAGT,QACE,MAAO,kEAIPzF,EAA8B,CAClC,CACE9B,IAAK,YACL+F,MAAO,OACPR,UAAU,EACVG,MAAO,QACPS,OAASlG,GACPqB,EAAAA,KAAC,MAAA,CAAIH,UAAU,oBACbE,SAAA,CAAAE,MAAC,OAAKF,SAAA,IAAIwG,KAAK5H,GAAO6H,mBAAmB,WACzCvG,EAAAA,IAAC,MAAA,CAAIJ,UAAU,gBAAiBE,SAAA,IAAIwG,KAAK5H,GAAO8H,mBAAmB,eAIzE,CACE/H,IAAK,QACL+F,MAAO,MACPR,UAAU,EACVG,MAAO,OACPF,MAAO,SACPW,OAASlG,GACPqB,EAAAA,KAAC,MAAA,CAAIH,UAAU,yCACbE,SAAA,CAAAE,EAAAA,IAAC,OAAA,CAAMF,SAAAsG,EAAa1H,KACpBsB,EAAAA,IAAC,QAAKJ,UAAW,8CAA8CyG,EAAc3H,KAC1EoB,SAAApB,QAKT,CACED,IAAK,WACL+F,MAAO,YACPR,UAAU,EACVG,MAAO,QACPS,OAASlG,GACPsB,EAAAA,IAAC,QAAKJ,UAAU,0FACbE,YAAS,WAIhB,CACErB,IAAK,UACL+F,MAAO,OACPI,OAAQ,CAAClG,EAAOwD,IACdnC,EAAAA,KAAC,MAAA,CAAIH,UAAU,YACbE,SAAA,CAAAE,EAAAA,IAAC,MAAA,CAAIJ,UAAU,UAAWE,SAAApB,IACzBwD,EAAIuE,YACH1G,OAAC,MAAA,CAAIH,UAAU,2CAA2CE,SAAA,CAAA,QAClDoC,EAAIuE,oBAGE,IAAdvE,EAAIwE,YAAwC,IAAjBxE,EAAIyE,WAC/B5G,EAAAA,KAAC,MAAA,CAAIH,UAAU,kDACZE,SAAA,MAAc,IAAdoC,EAAIwE,SAAuB3G,KAAC,OAAA,CAAKD,SAAA,CAAA,UAAQoC,EAAIwE,cAC5B,IAAjBxE,EAAIyE,YAA0B5G,KAAC,OAAA,CAAKD,SAAA,CAAA,SAAsB,IAAfoC,EAAIyE,UAAgBC,QAAQ,GAAG,YAC7D,IAAb1E,EAAI2E,QAAsB9G,KAAC,OAAA,CAAKD,SAAA,CAAA,SAAOoC,EAAI2E,KAAKD,QAAQ,SAG5D1E,EAAI4E,UACH/G,OAAC,UAAA,CAAQH,UAAU,UACjBE,SAAA,CAAAE,EAAAA,IAAC,UAAA,CAAQJ,UAAU,mDAAmDE,SAAA,aACtEE,IAAC,MAAA,CAAIJ,UAAU,sEACZE,SAAAiH,KAAKC,UAAUD,KAAKE,MAAM/E,EAAI4E,UAAW,KAAM,aASxDI,EAAgB,CACpB,CAAExI,MAAO,MAAOyI,MAAO,eAAgBC,MAAO5H,EAAKU,QACnD,CAAExB,MAAO,SAAUyI,MAAO,QAASC,MAAO5H,EAAKuC,OAAOsF,GAAoB,aAAfA,EAAEC,UAAyBpH,QACtF,CAAExB,MAAO,WAAYyI,MAAO,QAASC,MAAO5H,EAAKuC,OAAOsF,GAAoB,aAAfA,EAAEC,UAAyBpH,QACxF,CAAExB,MAAO,QAASyI,MAAO,QAASC,MAAO5H,EAAKuC,OAAOsF,GAAiB,UAAZA,EAAErB,OAAmB9F,SAGjF,OAAIM,GAA2B,IAAhBhB,EAAKU,aACVP,EAAA,IAIRI,EAAAA,KAAC,MAAA,CAAIH,UAAU,YAAY2D,IAAI,MAE7BzD,SAAA,GAAAC,KAAC,MAAA,CAAIH,UAAU,oCACbE,SAAA,CAAAC,OAAC,MAAA,CACCD,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAGJ,UAAU,mDAAmDE,SAAA,oBACjEE,EAAAA,IAAC,IAAA,CAAEJ,UAAU,wCAAwCE,SAAA,2DAIvDC,KAAC,MAAA,CAAIH,UAAU,aACbE,SAAA,CAAAC,EAAAA,KAAC,SAAA,CACCqE,QAzJW,KACnB,IACE,MAAMmD,EAAa,CACjB,CAAC,OAAQ,MAAO,YAAa,OAAQ,UAAUC,KAAK,QACjDhI,EAAKW,IAAIsH,GAAO,CACjB,IAAInB,KAAKmB,EAAIC,WAAWxC,eAAe,SACvCuC,EAAIzB,MACJyB,EAAIH,UAAY,GAChB,IAAIG,EAAIE,QAAQC,QAAQ,KAAM,SAC9BH,EAAIX,SAAW,IAAIW,EAAIX,SAASc,QAAQ,KAAM,SAAW,IACzDJ,KAAK,OACPA,KAAK,MAEDK,EAAO,IAAIC,KAAK,CAAC,SAAWP,GAAa,CAAE9D,KAAM,4BACjDsE,EAAOC,SAASC,cAAc,KAC9BlJ,EAAMmJ,IAAIC,gBAAgBN,GAChCE,EAAKK,aAAa,OAAQrJ,GAC1BgJ,EAAKK,aAAa,WAAY,SAAA,IAAY9B,MAAO+B,cAAcC,MAAM,KAAK,UAC1EP,EAAK7D,MAAMqE,WAAa,SACxBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAKW,QACLV,SAASQ,KAAKG,YAAYZ,GAE1BtC,EAAS,CAAEhC,KAAM,UAAWe,MAAO,8BACrC,OAAS2B,GACPzG,QAAQD,MAAM,yBAA0B0G,GACxCV,EAAS,CAAEhC,KAAM,QAASe,MAAO,0BACnC,GA+HQO,SAA0B,IAAhBvF,EAAKU,OACfN,UAAU,4JAEVE,SAAA,GAAAE,IAAC4I,EAAA,CAAShJ,UAAU,YAAY,gBAGlCG,EAAAA,KAAC,SAAA,CACCqE,QAASuB,EACTZ,SAAUvE,EACVZ,UAAU,4LAEVE,SAAA,CAAAE,MAAC6I,GAAUjJ,UAAW,YAAWY,EAAU,eAAiB,MAAQ,qBAOzEf,SACE,MAAA,CAAIG,UAAU,qFACbE,SAAAC,EAAAA,KAAC,MAAA,CAAIH,UAAU,0BACbE,SAAA,GAAAE,IAAC8I,EAAA,CAAYlJ,UAAU,yBACvBI,EAAAA,IAAC,IAAA,CAAEJ,UAAU,iCAAkCE,SAAAL,eAMpD,MAAA,CAAIG,UAAU,uFACbE,SAAAC,EAAAA,KAAC,MAAA,CAAIH,UAAU,0BACbE,SAAA,GAAAC,KAAC,MAAA,CAAIH,UAAU,0BACbE,SAAA,GAAAE,IAAC+I,EAAA,CAAOnJ,UAAU,0BAClBI,EAAAA,IAAC,OAAA,CAAKJ,UAAU,uDAAuDE,SAAA,oBAExE,MAAA,CAAIF,UAAU,aACZE,SAAAoH,EAAc/G,IAAK6I,GAClBjJ,EAAAA,KAAC,SAAA,CAECqE,QAAS,IAAMoB,EAAUwD,EAAOtK,OAChCkB,UAAW,2EACTmC,IAAWiH,EAAOtK,MACd,gEACA,0GAGNoB,SAAA,GAAAE,IAAC,OAAA,CAAMF,WAAOqH,QACdnH,MAAC,QAAKJ,UAAU,6DACbE,WAAOsH,MAAMlC,eAAe,aAV1B8D,EAAOtK,qBAmBrB,MAAA,CAAIkB,UAAU,mFACbE,SAAAC,EAAAA,KAAC,MAAA,CAAIH,UAAU,MACbE,SAAA,GAAAC,KAAC,MAAA,CAAIH,UAAU,yCACbE,SAAA,GAAAE,IAAC,KAAA,CAAGJ,UAAU,sDACXE,SAAAoH,EAAc5C,KAAK2E,GAAKA,EAAEvK,QAAUqD,IAASoF,OAAS,eAEzDpH,KAAC,MAAA,CAAIH,UAAU,2CACZE,SAAA,CAAAN,EAAKU,OAAOgF,eAAe,SAAS,cAIzClF,EAAAA,IAACM,EAAA,CACClB,KAAMI,EACNe,UACAC,UACAf,MAAOA,QAAS,EAChBkB,aAAa,sBACbC,kBAAkB,qBAClBH,aAAc,GACdQ,SAAO,WAMnB"}
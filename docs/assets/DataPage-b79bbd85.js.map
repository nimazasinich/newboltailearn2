{"version":3,"file":"DataPage-b79bbd85.js","sources":["../../src/components/DataPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/Card';\nimport { Badge } from './ui/Badge';\nimport { Progress } from './ui/Progress';\nimport { Button } from './ui/Button';\nimport { \n  Database, \n  Download, \n  Upload, \n  RefreshCw, \n  Search, \n  Filter,\n  FileText,\n  HardDrive,\n  Clock,\n  CheckCircle,\n  AlertCircle,\n  Trash2,\n  Eye,\n  Plus,\n  BarChart3\n} from 'lucide-react';\n\n// Mock Data برای Datasets\nconst MOCK_DATASETS = [\n  {\n    id: 'legal-qa-persian',\n    name: 'Persian Legal QA Dataset',\n    source: 'Internal',\n    samples: 15000,\n    size_mb: 45.2,\n    status: 'available',\n    type: 'qa',\n    description: 'مجموعه داده پرسش و پاسخ حقوقی فارسی شامل 15 هزار جفت پرسش و پاسخ',\n    created_at: new Date(Date.now() - 86400000 * 7).toISOString(),\n    updated_at: new Date(Date.now() - 3600000).toISOString(),\n    download_count: 45,\n    usage_count: 12,\n    quality_score: 94\n  },\n  {\n    id: 'court-decisions',\n    name: 'Court Decisions Dataset',\n    source: 'Public',\n    samples: 8500,\n    size_mb: 32.1,\n    status: 'available',\n    type: 'classification',\n    description: 'مجموعه تصمیمات دادگاه شامل رای‌های مختلف دادگاه‌های کشور',\n    created_at: new Date(Date.now() - 86400000 * 14).toISOString(),\n    updated_at: new Date(Date.now() - 86400000 * 2).toISOString(),\n    download_count: 78,\n    usage_count: 23,\n    quality_score: 89\n  },\n  {\n    id: 'legal-docs',\n    name: 'Legal Documents Collection',\n    source: 'Mixed',\n    samples: 12000,\n    size_mb: 67.8,\n    status: 'processing',\n    type: 'text',\n    description: 'مجموعه اسناد حقوقی متنوع شامل قراردادها، وصیت‌نامه‌ها و سایر اسناد',\n    created_at: new Date(Date.now() - 86400000 * 3).toISOString(),\n    updated_at: new Date(Date.now() - 1800000).toISOString(),\n    download_count: 23,\n    usage_count: 5,\n    quality_score: 76\n  },\n  {\n    id: 'contracts-dataset',\n    name: 'Contracts Analysis Dataset',\n    source: 'Internal',\n    samples: 6500,\n    size_mb: 28.4,\n    status: 'available',\n    type: 'analysis',\n    description: 'مجموعه داده تحلیل قراردادها برای شناسایی بندهای مهم',\n    created_at: new Date(Date.now() - 86400000 * 21).toISOString(),\n    updated_at: new Date(Date.now() - 86400000 * 5).toISOString(),\n    download_count: 34,\n    usage_count: 8,\n    quality_score: 91\n  },\n  {\n    id: 'case-law-db',\n    name: 'Case Law Database',\n    source: 'External',\n    samples: 9800,\n    size_mb: 54.6,\n    status: 'error',\n    type: 'reference',\n    description: 'پایگاه داده رویه قضایی و سوابق دادگاهی',\n    created_at: new Date(Date.now() - 86400000 * 10).toISOString(),\n    updated_at: new Date(Date.now() - 86400000 * 1).toISOString(),\n    download_count: 12,\n    usage_count: 2,\n    quality_score: 65\n  }\n];\n\nexport default function DataPage() {\n  const [datasets, setDatasets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [typeFilter, setTypeFilter] = useState('all');\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Load real data from API\n  useEffect(() => {\n    const loadDatasets = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await fetch('/api/datasets');\n        if (response.ok) {\n          const data = await response.json();\n          setDatasets(data);\n        } else {\n          throw new Error('Failed to load datasets');\n        }\n      } catch (err) {\n        console.error('Error loading datasets:', err);\n        setError('خطا در بارگذاری دیتاست‌ها');\n        // Fallback to mock data\n        setDatasets(MOCK_DATASETS);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadDatasets();\n  }, []);\n\n  // فیلتر کردن دیتاست‌ها\n  const filteredDatasets = datasets.filter(dataset => {\n    const matchesSearch = dataset.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         dataset.description.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = statusFilter === 'all' || dataset.status === statusFilter;\n    const matchesType = typeFilter === 'all' || dataset.type === typeFilter;\n    return matchesSearch && matchesStatus && matchesType;\n  });\n\n  // تابع برای گرفتن رنگ وضعیت\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'available': return 'bg-green-100 text-green-800';\n      case 'processing': return 'bg-blue-100 text-blue-800';\n      case 'downloading': return 'bg-yellow-100 text-yellow-800';\n      case 'error': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  // تابع برای گرفتن آیکون وضعیت\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'available': return <CheckCircle className=\"w-3 h-3\" />;\n      case 'processing': return <RefreshCw className=\"w-3 h-3 animate-spin\" />;\n      case 'downloading': return <Download className=\"w-3 h-3\" />;\n      case 'error': return <AlertCircle className=\"w-3 h-3\" />;\n      default: return <Clock className=\"w-3 h-3\" />;\n    }\n  };\n\n  // تابع برای گرفتن متن وضعیت به فارسی\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'available': return 'آماده';\n      case 'processing': return 'در حال پردازش';\n      case 'downloading': return 'در حال دانلود';\n      case 'error': return 'خطا';\n      default: return 'نامشخص';\n    }\n  };\n\n  // تابع برای فرمت کردن حجم فایل\n  const formatFileSize = (sizeInMB: number) => {\n    if (sizeInMB >= 1024) {\n      return `${(sizeInMB / 1024).toFixed(1)} GB`;\n    }\n    return `${sizeInMB.toFixed(1)} MB`;\n  };\n\n  // آمار\n  const stats = {\n    total: datasets.length,\n    available: datasets.filter(d => d.status === 'available').length,\n    processing: datasets.filter(d => d.status === 'processing').length,\n    totalSamples: datasets.reduce((sum, d) => sum + d.samples, 0),\n    totalSize: datasets.reduce((sum, d) => sum + d.size_mb, 0),\n    avgQuality: datasets.reduce((sum, d) => sum + d.quality_score, 0) / datasets.length\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-slate-50 dark:bg-slate-900 flex items-center justify-center\">\n        <div className=\"text-center space-y-4\">\n          <div className=\"w-16 h-16 rounded-full border-4 border-blue-500 border-t-transparent animate-spin mx-auto\" />\n          <div className=\"text-slate-600 dark:text-slate-400 font-persian text-lg\">\n            در حال بارگذاری دیتاست‌ها...\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-slate-50 dark:bg-slate-900 p-6\">\n      <div className=\"max-w-7xl mx-auto space-y-8\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-slate-900 dark:text-slate-100\">\n              مدیریت دیتاست‌ها\n            </h1>\n            <p className=\"text-slate-600 dark:text-slate-400 mt-2\">\n              مدیریت و سازماندهی مجموعه داده‌های آموزشی\n            </p>\n          </div>\n          <div className=\"flex items-center gap-3\">\n            <Button variant=\"outline\" onClick={() => location.hash = '#/data-gallery'}>\n              <Database className=\"w-4 h-4 mr-2\" />\n              گالری دیتاست\n            </Button>\n            <Button onClick={() => setShowUploadModal(true)}>\n              <Upload className=\"w-4 h-4 mr-2\" />\n              آپلود جدید\n            </Button>\n          </div>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          <Card className=\"border-0 shadow-sm\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-slate-500 mb-1\">کل دیتاست‌ها</p>\n                  <p className=\"text-3xl font-bold text-slate-900 dark:text-slate-100\">{stats.total}</p>\n                </div>\n                <Database className=\"w-8 h-8 text-blue-500\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"border-0 shadow-sm\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-slate-500 mb-1\">آماده استفاده</p>\n                  <p className=\"text-3xl font-bold text-green-600\">{stats.available}</p>\n                </div>\n                <CheckCircle className=\"w-8 h-8 text-green-500\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"border-0 shadow-sm\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-slate-500 mb-1\">کل نمونه‌ها</p>\n                  <p className=\"text-3xl font-bold text-purple-600\">{stats.totalSamples.toLocaleString()}</p>\n                </div>\n                <FileText className=\"w-8 h-8 text-purple-500\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"border-0 shadow-sm\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-slate-500 mb-1\">حجم کل</p>\n                  <p className=\"text-3xl font-bold text-orange-600\">{formatFileSize(stats.totalSize)}</p>\n                </div>\n                <HardDrive className=\"w-8 h-8 text-orange-500\" />\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Filters */}\n        <Card className=\"border-0 shadow-sm\">\n          <CardContent className=\"p-6\">\n            <div className=\"flex flex-col md:flex-row gap-4\">\n              <div className=\"flex-1\">\n                <div className=\"relative\">\n                  <Search className=\"w-4 h-4 absolute right-3 top-1/2 transform -translate-y-1/2 text-slate-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"جستجو در دیتاست‌ها...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"w-full pr-10 pl-4 py-2 bg-white dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n              <div className=\"flex items-center gap-4\">\n                <div className=\"flex items-center gap-2\">\n                  <Filter className=\"w-4 h-4 text-slate-500\" />\n                  <select\n                    value={statusFilter}\n                    onChange={(e) => setStatusFilter(e.target.value)}\n                    className=\"px-3 py-2 bg-white dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded-lg\"\n                  >\n                    <option value=\"all\">همه وضعیت‌ها</option>\n                    <option value=\"available\">آماده</option>\n                    <option value=\"processing\">در حال پردازش</option>\n                    <option value=\"downloading\">در حال دانلود</option>\n                    <option value=\"error\">خطا</option>\n                  </select>\n                </div>\n                <select\n                  value={typeFilter}\n                  onChange={(e) => setTypeFilter(e.target.value)}\n                  className=\"px-3 py-2 bg-white dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded-lg\"\n                >\n                  <option value=\"all\">همه انواع</option>\n                  <option value=\"qa\">پرسش و پاسخ</option>\n                  <option value=\"classification\">دسته‌بندی</option>\n                  <option value=\"text\">متن</option>\n                  <option value=\"analysis\">تحلیل</option>\n                  <option value=\"reference\">مرجع</option>\n                </select>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Datasets Grid */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {filteredDatasets.map((dataset) => (\n            <Card key={dataset.id} className=\"border-0 shadow-sm hover:shadow-md transition-shadow\">\n              <CardHeader className=\"pb-4\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-10 h-10 bg-purple-100 dark:bg-purple-900/30 rounded-lg flex items-center justify-center\">\n                      <Database className=\"w-5 h-5 text-purple-600 dark:text-purple-400\" />\n                    </div>\n                    <div>\n                      <CardTitle className=\"text-lg\">{dataset.name}</CardTitle>\n                      <p className=\"text-sm text-slate-500\">{dataset.source} • {dataset.type}</p>\n                    </div>\n                  </div>\n                  <Badge className={`${getStatusColor(dataset.status)} flex items-center gap-1`}>\n                    {getStatusIcon(dataset.status)}\n                    {getStatusText(dataset.status)}\n                  </Badge>\n                </div>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <p className=\"text-sm text-slate-600 dark:text-slate-400\">\n                  {dataset.description}\n                </p>\n\n                {/* Progress for processing datasets */}\n                {dataset.status === 'processing' && (\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between text-sm\">\n                      <span>پیشرفت پردازش</span>\n                      <span>75%</span>\n                    </div>\n                    <Progress value={75} />\n                  </div>\n                )}\n\n                {/* Stats */}\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <span className=\"text-slate-500\">نمونه‌ها:</span>\n                    <span className=\"font-medium mr-2\">{dataset.samples.toLocaleString()}</span>\n                  </div>\n                  <div>\n                    <span className=\"text-slate-500\">حجم:</span>\n                    <span className=\"font-medium mr-2\">{formatFileSize(dataset.size_mb)}</span>\n                  </div>\n                  <div>\n                    <span className=\"text-slate-500\">دانلودها:</span>\n                    <span className=\"font-medium mr-2\">{dataset.download_count}</span>\n                  </div>\n                  <div>\n                    <span className=\"text-slate-500\">کیفیت:</span>\n                    <span className=\"font-medium mr-2\">{dataset.quality_score}%</span>\n                  </div>\n                </div>\n\n                {/* Quality Score Bar */}\n                <div className=\"space-y-1\">\n                  <div className=\"flex justify-between text-xs text-slate-500\">\n                    <span>امتیاز کیفیت</span>\n                    <span>{dataset.quality_score}%</span>\n                  </div>\n                  <div className=\"w-full bg-slate-200 dark:bg-slate-700 rounded-full h-2\">\n                    <div\n                      className={`h-2 rounded-full ${\n                        dataset.quality_score >= 90 ? 'bg-green-500' :\n                        dataset.quality_score >= 75 ? 'bg-yellow-500' : 'bg-red-500'\n                      }`}\n                      style={{ width: `${dataset.quality_score}%` }}\n                    ></div>\n                  </div>\n                </div>\n\n                {/* Actions */}\n                <div className=\"flex items-center gap-2 pt-4 border-t border-slate-200 dark:border-slate-700\">\n                  {dataset.status === 'available' && (\n                    <Button variant=\"outline\" size=\"sm\">\n                      <Download className=\"w-3 h-3 mr-1\" />\n                      دانلود\n                    </Button>\n                  )}\n                  <Button variant=\"outline\" size=\"sm\">\n                    <Eye className=\"w-3 h-3 mr-1\" />\n                    پیش‌نمایش\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\">\n                    <BarChart3 className=\"w-3 h-3 mr-1\" />\n                    آمار\n                  </Button>\n                  {dataset.status === 'error' && (\n                    <Button variant=\"outline\" size=\"sm\" className=\"text-red-600 hover:text-red-700\">\n                      <RefreshCw className=\"w-3 h-3 mr-1\" />\n                      تلاش مجدد\n                    </Button>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        {/* Empty State */}\n        {filteredDatasets.length === 0 && (\n          <Card className=\"border-0 shadow-sm\">\n            <CardContent className=\"p-12 text-center\">\n              <Database className=\"w-16 h-16 text-slate-400 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-slate-900 dark:text-slate-100 mb-2\">\n                هیچ دیتاستی یافت نشد\n              </h3>\n              <p className=\"text-slate-500 mb-6\">\n                {searchTerm || statusFilter !== 'all' || typeFilter !== 'all'\n                  ? 'فیلترهای انتخابی را تغییر دهید یا دیتاست جدیدی آپلود کنید'\n                  : 'هنوز هیچ دیتاستی آپلود نشده است'\n                }\n              </p>\n              <div className=\"flex items-center justify-center gap-3\">\n                <Button onClick={() => setShowUploadModal(true)}>\n                  <Upload className=\"w-4 h-4 mr-2\" />\n                  آپلود دیتاست\n                </Button>\n                <Button variant=\"outline\" onClick={() => location.hash = '#/data-gallery'}>\n                  <Database className=\"w-4 h-4 mr-2\" />\n                  گالری دیتاست\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Upload Modal Placeholder */}\n        {showUploadModal && (\n          <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\">\n            <Card className=\"w-full max-w-md\">\n              <CardHeader>\n                <CardTitle>آپلود دیتاست جدید</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <p className=\"text-slate-600\">فرم آپلود دیتاست در حال توسعه است...</p>\n                <div className=\"flex justify-end gap-2\">\n                  <Button variant=\"outline\" onClick={() => setShowUploadModal(false)}>\n                    انصراف\n                  </Button>\n                  <Button onClick={() => setShowUploadModal(false)}>\n                    آپلود\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":["MOCK_DATASETS","id","name","source","samples","size_mb","status","type","description","created_at","Date","now","toISOString","updated_at","download_count","usage_count","quality_score","DataPage","datasets","setDatasets","useState","loading","setLoading","searchTerm","setSearchTerm","statusFilter","setStatusFilter","typeFilter","setTypeFilter","showUploadModal","setShowUploadModal","error","setError","useEffect","async","response","fetch","ok","Error","data","json","err","console","filteredDatasets","filter","dataset","matchesSearch","toLowerCase","includes","matchesStatus","matchesType","getStatusColor","getStatusIcon","jsx","CheckCircle","className","RefreshCw","Download","AlertCircle","Clock","getStatusText","formatFileSize","sizeInMB","toFixed","stats","total","length","available","d","processing","totalSamples","reduce","sum","totalSize","avgQuality","children","jsxs","Button","variant","onClick","location","hash","Database","Upload","Card","CardContent","toLocaleString","FileText","HardDrive","Search","jsxRuntimeExports","placeholder","value","onChange","e","target","Filter","map","CardHeader","CardTitle","Badge","Progress","style","width","size","Eye","BarChart3"],"mappings":"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"}
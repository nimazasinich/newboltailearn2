import{a as t,j as e,b as a,A as s}from"./index-izy1IMjv.js";import{o,a as n,s as r,b as i,u as c,_ as d,n as l,c as p,r as u}from"./api--a0sVTLk.js";const g=["running","paused","completed","failed","pending","training","idle"],m=o({page:l(),limit:l(),total:l(),pages:l()}),f=o({id:c([r(),l()]),name:r(),type:r().optional(),status:r().optional(),accuracy:c([l(),d()]).optional(),loss:c([l(),d()]).optional(),epochs:c([l(),d()]).optional(),current_epoch:c([l(),r(),d()]).optional(),currentEpoch:c([l(),r(),d()]).optional(),dataset_id:c([r(),l(),d()]).optional(),config:c([r(),u(r(),p()),d()]).optional(),created_at:r().optional(),updated_at:r().optional(),createdAt:r().optional(),updatedAt:r().optional(),description:c([r(),d()]).optional(),category:c([r(),d()]).optional()}).passthrough(),h=o({models:n(f),pagination:m.optional()}).passthrough(),y=o({id:c([r(),l()]),session_id:r().optional(),model_id:c([r(),l(),d()]).optional(),status:r().optional(),start_time:r().optional(),end_time:c([r(),d()]).optional(),total_epochs:c([r(),l(),d()]).optional(),current_epoch:c([r(),l(),d()]).optional(),config:c([r(),u(r(),p()),d()]).optional(),metrics:c([r(),u(r(),p()),d()]).optional(),progress:c([r(),l(),d()]).optional(),loss:c([r(),l(),d()]).optional(),accuracy:c([r(),l(),d()]).optional(),model_name:c([r(),d()]).optional(),model_type:c([r(),d()]).optional(),dataset_id:c([r(),l(),d()]).optional(),created_at:r().optional(),updated_at:r().optional()}).passthrough(),w=n(y),S=o({id:c([r(),l()]),level:r(),message:r(),epoch:c([r(),l(),d()]).optional(),loss:c([r(),l(),d()]).optional(),accuracy:c([r(),l(),d()]).optional(),timestamp:r()}).passthrough(),_=o({logs:n(S),pagination:m}).passthrough(),E=o({id:c([r(),l()]),epoch:c([r(),l()]),accuracy:c([r(),l(),d()]).optional(),loss:c([r(),l(),d()]).optional(),file_path:r(),created_at:r()}).passthrough(),I=o({totalModels:l(),activeTraining:l(),completedTraining:l(),averageAccuracy:l(),totalTrainingHours:l()}).passthrough(),b=o({id:c([r(),l()]),name:r(),type:r().optional(),status:r().optional(),size:c([r(),l(),d()]).optional(),size_mb:c([r(),l(),d()]).optional(),records:c([r(),l(),d()]).optional(),samples:c([r(),l(),d()]).optional(),description:c([r(),d()]).optional(),source:c([r(),d()]).optional(),created_at:r().optional(),updated_at:r().optional()}).passthrough(),j=o({datasets:n(b),pagination:m.optional()}).passthrough(),v=o({success:i(),message:r().optional(),sessionId:c([r(),l()]).optional(),config:p().optional()}).passthrough(),A=o({success:i(),message:r().optional(),optimizationId:r().optional(),type:r().optional(),parameters:p().optional()}).passthrough(),P=o({success:i(),message:r().optional()}).passthrough(),T=o({success:i(),message:r().optional(),modelId:c([r(),l()]).optional(),checkpointPath:r().optional()}).passthrough();function O(t){if("number"==typeof t&&Number.isFinite(t))return t;if("string"==typeof t){const e=Number(t);return Number.isFinite(e)?e:void 0}}function M(t){return"string"==typeof t?t:"number"==typeof t?t.toString():void 0}function D(t){if(t&&"object"==typeof t&&!Array.isArray(t))return t;if("string"==typeof t)try{const e=JSON.parse(t);if(e&&"object"==typeof e&&!Array.isArray(e))return e}catch{return}}function N(t){if(!t)return"pending";const e=t.toLowerCase();return g.includes(e)?e:"pending"}function L(t,e,a){return{page:e,limit:a,total:t,pages:Math.max(1,Math.ceil(t/Math.max(a,1)))}}function $(t){const e=D(t.config),a=O(t.currentEpoch??t.current_epoch),s=t.dataset_id;return{id:M(t.id)??String(t.id),name:t.name,type:t.type,status:t.status,accuracy:"number"==typeof t.accuracy?t.accuracy:void 0,loss:"number"==typeof t.loss?t.loss:void 0,epochs:"number"==typeof t.epochs?t.epochs:void 0,currentEpoch:a,datasetId:null==s?void 0:String(s),config:e,createdAt:t.createdAt??t.created_at,updatedAt:t.updatedAt??t.updated_at,description:t.description??void 0,category:t.category??void 0}}function z(t){const e=D(t.config),a=D(t.metrics);return{id:Number(t.id),sessionId:t.session_id??M(t.id)??String(t.id),modelId:void 0===t.model_id||null===t.model_id?void 0:Number(t.model_id),status:N(t.status),startTime:t.start_time,endTime:t.end_time??void 0,totalEpochs:O(t.total_epochs),currentEpoch:O(t.current_epoch),config:e,metrics:a??null,progress:O(t.progress),loss:O(t.loss),accuracy:O(t.accuracy),modelName:t.model_name??null,modelType:t.model_type??null,datasetId:t.dataset_id??null,createdAt:t.created_at??t.start_time,updatedAt:t.updated_at??void 0}}function k(t){return{id:Number(t.id),level:t.level,message:t.message,epoch:O(t.epoch),loss:O(t.loss),accuracy:O(t.accuracy),timestamp:t.timestamp}}function G(t){return{id:Number(t.id),epoch:Number(t.epoch),accuracy:O(t.accuracy),loss:O(t.loss),filePath:t.file_path,createdAt:t.created_at}}function F(t){const e=O(t.size??t.size_mb??t.samples),a=O(t.records??t.samples);return{id:M(t.id)??String(t.id),name:t.name,type:t.type,status:t.status,size:e,records:a,description:t.description??null,source:t.source??null,createdAt:t.created_at,updatedAt:t.updated_at}}function J(t,e,a){const s=h.safeParse(t);if(s.success){const t=s.data;return{models:t.models.map($),pagination:t.pagination??L(t.models.length,e,a)}}if(Array.isArray(t)){const s=f.array().safeParse(t);if(s.success){const t=s.data;return{models:t.map($),pagination:L(t.length,e,a)}}const o=w.safeParse(t);if(o.success){return{models:[],pagination:L(o.data.length,e,a)}}}if(t&&"object"==typeof t&&"data"in t)return J(t.data,e,a);throw new Error("Invalid model list response format")}function R(t){const e=w.safeParse(t);if(e.success){return e.data.map(z)}if(t&&"object"==typeof t){const e=t,a=e.sessions;if(Array.isArray(a))return R(a);if("data"in e)return R(e.data)}throw new Error("Invalid training sessions response format")}function U(t){const e=y.safeParse(t);if(e.success){return z(e.data)}if(t&&"object"==typeof t&&"data"in t)return U(t.data);throw new Error("Invalid training session response format")}function x(t){const e=_.safeParse(t);if(e.success){const t=e.data;return{logs:t.logs.map(k),pagination:t.pagination}}if(t&&"object"==typeof t&&"data"in t)return x(t.data);throw new Error("Invalid model logs response format")}function C(t){if(Array.isArray(t)){const e=E.array().safeParse(t);if(e.success){return e.data.map(G)}}if(t&&"object"==typeof t&&"data"in t)return C(t.data);throw new Error("Invalid checkpoint response format")}function B(t,e,a){const s=j.safeParse(t);if(s.success){const t=s.data;return{datasets:t.datasets.map(F),pagination:t.pagination??L(t.datasets.length,e,a)}}if(Array.isArray(t)){const s=b.array().safeParse(t);if(s.success){const t=s.data;return{datasets:t.map(F),pagination:L(t.length,e,a)}}}if(t&&"object"==typeof t&&"data"in t)return B(t.data,e,a);throw new Error("Invalid dataset response format")}function H(t){const e=I.safeParse(t);if(e.success)return e.data;if(t&&"object"==typeof t&&"data"in t)return H(t.data);throw new Error("Invalid training stats response format")}function Y(t){const e=v.safeParse(t);if(e.success)return e.data;if(t&&"object"==typeof t&&"data"in t)return Y(t.data);throw new Error("Invalid training response format")}function q(t){const e=A.safeParse(t);if(e.success)return e.data;if(t&&"object"==typeof t&&"data"in t)return q(t.data);throw new Error("Invalid optimization response format")}function K(t){const e=P.safeParse(t);if(e.success)return e.data;if(t&&"object"==typeof t&&"data"in t)return K(t.data);throw new Error("Invalid success response format")}function Q(t){const e=T.safeParse(t);if(e.success)return e.data;if(t&&"object"==typeof t&&"data"in t)return Q(t.data);throw new Error("Invalid load model response format")}function V(t){const e=f.safeParse(t);if(e.success)return $(e.data);if(t&&"object"==typeof t){const e=t.model;if(e)return V(e);if("data"in t)return V(t.data)}throw new Error("Invalid model response format")}const W={async getModels(o=1,n=10){try{const r=new URLSearchParams({page:String(o),limit:String(n)}),i=await t(e(a,`${s.MODELS}?${r.toString()}`));return J(await i.json(),o,n)}catch(r){return console.error("Get models failed:",r),{models:[],pagination:L(0,o,n)}}},async getModel(o){try{const n=await t(e(a,s.MODEL_BY_ID(String(o))));return V(await n.json())}catch(n){console.error("Get model failed:",n);const t=(new Date).toISOString();return{id:String(o),name:"مدل پیش‌فرض",type:"persian-bert",status:"idle",accuracy:0,loss:0,epochs:0,currentEpoch:0,datasetId:void 0,config:{},createdAt:t,updatedAt:t}}},async createModel(o){try{const n={name:o.name,type:o.type,config:o.config??{}};o.datasetId&&(n.dataset_id=o.datasetId);const r=await t(e(a,s.MODELS),{method:"POST",body:JSON.stringify(o)});return V(await r.json())}catch(n){console.error("Create model failed:",n);const t=(new Date).toISOString();return{id:String(Date.now()),name:o.name,type:o.type,status:"idle",accuracy:0,loss:0,epochs:0,currentEpoch:0,datasetId:o.datasetId,config:o.config??{},createdAt:t,updatedAt:t}}},async updateModel(o,n){try{const r=await t(e(a,s.MODEL_BY_ID(String(o))),{method:"PATCH",body:JSON.stringify(n)}),i=K(await r.json());return{success:i.success,message:i.message??(i.success?"Model updated successfully":"Failed to update model")}}catch(r){throw console.error("Update model failed:",r),new Error("خطا در به‌روزرسانی مدل")}},async deleteModel(o){try{const n=await t(e(a,s.MODEL_BY_ID(String(o))),{method:"DELETE"}),r=K(await n.json());return{success:r.success,message:r.message??(r.success?"Model deleted successfully":"Failed to delete model")}}catch(n){throw console.error("Delete model failed:",n),new Error("خطا در حذف مدل")}},async startTraining(o,n){try{const r=await t(e(a,s.MODEL_TRAIN(o.toString())),{method:"POST",body:JSON.stringify(n)}),i=Y(await r.json());return{success:i.success,message:i.message,sessionId:i.sessionId?String(i.sessionId):void 0,config:i.config}}catch(r){return console.error("Start training failed:",r),{success:!0,message:"آموزش در حالت آفلاین شروع شد",sessionId:`session_${Date.now()}`,config:n}}},async pauseTraining(o){try{const n=await t(e(a,s.MODEL_PAUSE(o.toString())),{method:"POST"}),r=K(await n.json());return{success:r.success,message:r.message??(r.success?"آموزش متوقف شد":"Failed to pause training")}}catch(n){throw console.error("Pause training failed:",n),new Error("خطا در توقف آموزش")}},async resumeTraining(o,n={}){try{const r=await t(e(a,s.MODEL_RESUME(o.toString())),{method:"POST",body:JSON.stringify(n)}),i=Y(await r.json());return{success:i.success,message:i.message??"آموزش از سر گرفته شد",sessionId:i.sessionId?String(i.sessionId):`session_${Date.now()}`,config:i.config??n}}catch(r){throw console.error("Resume training failed:",r),new Error("خطا در ادامه آموزش")}},async getTrainingSessions(s){try{const o=s?`/models/${s}/sessions`:"/training/sessions",n=await t(e(a,o));return R(await n.json())}catch(o){throw console.error("Get training sessions failed:",o),new Error("خطا در دریافت جلسات آموزش")}},async getTrainingSession(s){try{const o=await t(e(a,`/training/sessions/${s}`));return U(await o.json())}catch(o){throw console.error("Get training session failed:",o),new Error("خطا در دریافت جلسه آموزش")}},async getModelLogs(s,o=1,n=50){try{const r=new URLSearchParams({page:String(o),limit:String(n)}),i=await t(e(a,`/models/${s}/logs?${r.toString()}`));return x(await i.json())}catch(r){throw console.error("Get model logs failed:",r),new Error("خطا در دریافت لاگ‌های مدل")}},async getModelCheckpoints(s){try{const o=await t(e(a,`/models/${s}/checkpoints`));return C(await o.json())}catch(o){throw console.error("Get model checkpoints failed:",o),new Error("خطا در دریافت checkpoint های مدل")}},async startOptimization(s,o={}){try{const n=await t(e(a,`/models/${s}/optimize`),{method:"POST",body:JSON.stringify(o)});return q(await n.json())}catch(n){throw console.error("Start optimization failed:",n),new Error("خطا در شروع بهینه‌سازی")}},async loadModel(s,o){try{const n=await t(e(a,`/models/${s}/load`),{method:"POST",body:JSON.stringify({checkpointPath:o})}),r=Q(await n.json());return{success:r.success,message:r.message??"مدل با موفقیت بارگذاری شد",modelId:r.modelId?String(r.modelId):String(s),checkpointPath:r.checkpointPath??o}}catch(n){throw console.error("Load model failed:",n),new Error("خطا در بارگذاری مدل")}},async getTrainingStats(){try{const s=await t(e(a,"/training/stats"));return H(await s.json())}catch(s){return console.error("Get training stats failed:",s),{totalModels:0,activeTraining:0,completedTraining:0,averageAccuracy:0,totalTrainingHours:0}}},async getDatasets(s=1,o=10){try{const n=new URLSearchParams({page:String(s),limit:String(o)}),r=await t(e(a,`/datasets?${n.toString()}`));return B(await r.json(),s,o)}catch(n){return console.error("Get datasets failed:",n),{datasets:[],pagination:L(0,s,o)}}},async stopTraining(s){try{const o=await t(e(a,`/training/${s}/stop`),{method:"POST"}),n=K(await o.json());return{success:n.success,message:n.message??(n.success?"Training stopped successfully":"Failed to stop training")}}catch(o){return console.error("Stop training failed:",o),{success:!1,message:"Failed to stop training"}}}};export{W as t};
//# sourceMappingURL=training-B_ZmQWyx.js.map

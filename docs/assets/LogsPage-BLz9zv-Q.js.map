{"version":3,"file":"LogsPage-BLz9zv-Q.js","sources":["../../node_modules/lucide-react/dist/esm/icons/chevron-left.js","../../node_modules/lucide-react/dist/esm/icons/chevron-up.js","../../src/services/monitoring.ts","../../src/components/ui/PageSkeleton.tsx","../../src/components/ui/DataTable.tsx","../../src/components/LogsPage.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChevronLeft = createLucideIcon(\"ChevronLeft\", [\n  [\"path\", { d: \"m15 18-6-6 6-6\", key: \"1wnfg3\" }]\n]);\n\nexport { ChevronLeft as default };\n//# sourceMappingURL=chevron-left.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChevronUp = createLucideIcon(\"ChevronUp\", [[\"path\", { d: \"m18 15-6-6-6 6\", key: \"153udz\" }]]);\n\nexport { ChevronUp as default };\n//# sourceMappingURL=chevron-up.js.map\n","import { apiRequest, API_ENDPOINTS } from '../lib/api-config';\r\n\r\n// Monitoring interfaces\r\nexport interface SystemMetrics {\r\n  cpu: number;\r\n  memory: {\r\n    used: number;\r\n    total: number;\r\n    percentage: number;\r\n  };\r\n  process_memory: {\r\n    used: number;\r\n    total: number;\r\n    percentage: number;\r\n  };\r\n  uptime: number;\r\n  system_uptime: number;\r\n  platform: string;\r\n  arch: string;\r\n  timestamp: string;\r\n  active_training: number;\r\n}\r\n\r\nexport interface TrainingStatus {\r\n  active: number;\r\n  total: number;\r\n  completed: number;\r\n  failed: number;\r\n  success_rate: string;\r\n}\r\n\r\nexport interface DatasetStatus {\r\n  available: number;\r\n  downloading: number;\r\n  total: number;\r\n}\r\n\r\nexport interface SystemActivity {\r\n  [level: string]: number;\r\n}\r\n\r\nexport interface MonitoringData {\r\n  cpu: number;\r\n  memory: {\r\n    used: number;\r\n    total: number;\r\n    percentage: number;\r\n  };\r\n  process_memory: {\r\n    used: number;\r\n    total: number;\r\n    percentage: number;\r\n  };\r\n  uptime: number;\r\n  system_uptime: number;\r\n  platform: string;\r\n  arch: string;\r\n  timestamp: string;\r\n  active_training: number;\r\n  training: TrainingStatus;\r\n  datasets: DatasetStatus;\r\n  activity: SystemActivity;\r\n}\r\n\r\nexport interface HealthCheck {\r\n  status: 'healthy' | 'degraded' | 'unhealthy';\r\n  timestamp: string;\r\n  uptime: number;\r\n  environment: string;\r\n  database: 'connected' | 'disconnected';\r\n  version: string;\r\n  components?: {\r\n    database: boolean;\r\n    redis?: boolean;\r\n    storage: boolean;\r\n    external_apis: boolean;\r\n  };\r\n}\r\n\r\nexport interface LogEntry {\r\n  id: number;\r\n  level: 'info' | 'warning' | 'error' | 'debug';\r\n  category: string;\r\n  message: string;\r\n  metadata?: string;\r\n  timestamp: string;\r\n  model_name?: string; // For training logs\r\n  model_id?: number;\r\n  epoch?: number;\r\n  loss?: number;\r\n  accuracy?: number;\r\n}\r\n\r\n// Monitoring API functions\r\nexport async function getSystemMetrics(): Promise<MonitoringData> {\r\n  const response = await apiRequest(API_ENDPOINTS.MONITORING);\r\n  return response.json();\r\n}\r\n\r\nexport async function getHealthCheck(): Promise<HealthCheck> {\r\n  const response = await apiRequest(API_ENDPOINTS.HEALTH);\r\n  return response.json();\r\n}\r\n\r\nexport async function getPerformanceMetrics(): Promise<{\r\n  cpu_history: number[];\r\n  memory_history: number[];\r\n  timestamps: string[];\r\n  average_response_time: number;\r\n  error_rate: number;\r\n}> {\r\n  const response = await apiRequest(API_ENDPOINTS.MONITORING_PERFORMANCE);\r\n  return response.json();\r\n}\r\n\r\n// Logs\r\nexport async function getLogs(params?: {\r\n  type?: 'system' | 'training';\r\n  level?: 'info' | 'warning' | 'error' | 'debug';\r\n  limit?: number;\r\n  offset?: number;\r\n}): Promise<LogEntry[]> {\r\n  try {\r\n    const searchParams = new URLSearchParams();\r\n    if (params) {\r\n      Object.entries(params).forEach(([key, value]) => {\r\n        if (value !== undefined) {\r\n          searchParams.append(key, String(value));\r\n        }\r\n      });\r\n    }\r\n    \r\n    const query = searchParams.toString();\r\n    const url = query ? `${API_ENDPOINTS.LOGS}?${query}` : API_ENDPOINTS.LOGS;\r\n    \r\n    const response = await apiRequest(url);\r\n    const data = await response.json();\r\n    \r\n    // Handle different response formats from API\r\n    if (data && typeof data === 'object') {\r\n      // If response has logs property (paginated response)\r\n      if (Array.isArray(data.logs)) {\r\n        return data.logs;\r\n      }\r\n      // If response is directly an array\r\n      if (Array.isArray(data)) {\r\n        return data;\r\n      }\r\n    }\r\n    \r\n    // Fallback to empty array if data is not in expected format\r\n    return [];\r\n  } catch (error) {\r\n    console.error('Failed to fetch logs:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function getSystemLogs(limit: number = 100): Promise<LogEntry[]> {\r\n  return getLogs({ type: 'system', limit });\r\n}\r\n\r\nexport async function getTrainingLogs(limit: number = 100): Promise<LogEntry[]> {\r\n  return getLogs({ type: 'training', limit });\r\n}\r\n\r\nexport async function getErrorLogs(limit: number = 50): Promise<LogEntry[]> {\r\n  return getLogs({ level: 'error', limit });\r\n}\r\n\r\n// Export monitoring data\r\nexport async function exportMonitoringData(\r\n  format: 'csv' | 'json' = 'json',\r\n  timeRange: '24h' | '7d' | '30d' = '24h'\r\n): Promise<Blob> {\r\n  const response = await apiRequest(`/monitoring/export?format=${format}&timeRange=${timeRange}`);\r\n  return response.blob();\r\n}\r\n\r\n// Real-time monitoring helpers\r\nexport function getSystemHealthStatus(metrics: SystemMetrics): 'healthy' | 'warning' | 'critical' {\r\n  const cpuThreshold = 80;\r\n  const memoryThreshold = 85;\r\n  \r\n  if (metrics.cpu > 90 || metrics.memory.percentage > 90) {\r\n    return 'critical';\r\n  }\r\n  \r\n  if (metrics.cpu > cpuThreshold || metrics.memory.percentage > memoryThreshold) {\r\n    return 'warning';\r\n  }\r\n  \r\n  return 'healthy';\r\n}\r\n\r\nexport function formatUptime(seconds: number): string {\r\n  const days = Math.floor(seconds / 86400);\r\n  const hours = Math.floor((seconds % 86400) / 3600);\r\n  const minutes = Math.floor((seconds % 3600) / 60);\r\n  \r\n  if (days > 0) {\r\n    return `${days}d ${hours}h ${minutes}m`;\r\n  }\r\n  if (hours > 0) {\r\n    return `${hours}h ${minutes}m`;\r\n  }\r\n  return `${minutes}m`;\r\n}\r\n\r\nexport function getMetricColor(value: number, thresholds: { warning: number; critical: number }): string {\r\n  if (value >= thresholds.critical) {\r\n    return 'text-red-600 bg-red-50';\r\n  }\r\n  if (value >= thresholds.warning) {\r\n    return 'text-yellow-600 bg-yellow-50';\r\n  }\r\n  return 'text-green-600 bg-green-50';\r\n}\r\n\r\nexport function formatBytes(bytes: number): string {\r\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\r\n  if (bytes === 0) return '0 B';\r\n  \r\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\r\n  return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + ' ' + sizes[i];\r\n}\r\n\r\n// Alert thresholds\r\nexport const ALERT_THRESHOLDS = {\r\n  cpu: { warning: 70, critical: 90 },\r\n  memory: { warning: 80, critical: 95 },\r\n  disk: { warning: 85, critical: 95 },\r\n  error_rate: { warning: 5, critical: 10 }, // percentage\r\n} as const;\r\n","import React from 'react';\r\n\r\nexport function PageSkeleton() {\r\n  return (\r\n    <div className=\"animate-pulse space-y-6\" role=\"status\" aria-label=\"در حال بارگذاری...\">\r\n      {/* Header skeleton */}\r\n      <div className=\"space-y-3\">\r\n        <div className=\"h-9 bg-gray-200 dark:bg-gray-700 rounded w-1/3\"></div>\r\n        <div className=\"h-5 bg-gray-200 dark:bg-gray-700 rounded w-2/3\"></div>\r\n      </div>\r\n\r\n      {/* Stats cards skeleton */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        {Array.from({ length: 4 }).map((_, i) => (\r\n          <div key={`stat-${i}`} className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"w-12 h-12 bg-gray-200 dark:bg-gray-700 rounded-lg\"></div>\r\n              <div className=\"ms-4 space-y-2 flex-1\">\r\n                <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-2/3\"></div>\r\n                <div className=\"h-7 bg-gray-200 dark:bg-gray-700 rounded w-1/2\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Content cards skeleton */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\r\n        {Array.from({ length: 6 }).map((_, i) => (\r\n          <div key={`content-${i}`} className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6 space-y-4\">\r\n            <div className=\"flex justify-between items-start\">\r\n              <div className=\"flex-1 space-y-2\">\r\n                <div className=\"h-6 bg-gray-200 dark:bg-gray-700 rounded w-3/4\"></div>\r\n                <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-1/2\"></div>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <div className=\"w-5 h-5 bg-gray-200 dark:bg-gray-700 rounded\"></div>\r\n                <div className=\"w-16 h-6 bg-gray-200 dark:bg-gray-700 rounded-full\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"bg-gray-50 dark:bg-gray-700 p-3 rounded-lg space-y-2\">\r\n                <div className=\"h-6 bg-gray-200 dark:bg-gray-600 rounded w-2/3 mx-auto\"></div>\r\n                <div className=\"h-3 bg-gray-200 dark:bg-gray-600 rounded w-1/2 mx-auto\"></div>\r\n              </div>\r\n              <div className=\"bg-gray-50 dark:bg-gray-700 p-3 rounded-lg space-y-2\">\r\n                <div className=\"h-6 bg-gray-200 dark:bg-gray-600 rounded w-2/3 mx-auto\"></div>\r\n                <div className=\"h-3 bg-gray-200 dark:bg-gray-600 rounded w-1/2 mx-auto\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              <div className=\"flex-1 h-10 bg-gray-200 dark:bg-gray-700 rounded\"></div>\r\n              <div className=\"w-10 h-10 bg-gray-200 dark:bg-gray-700 rounded\"></div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Announcement for screen readers */}\r\n      <div className=\"sr-only\" aria-live=\"polite\" aria-atomic=\"true\">\r\n        در حال بارگذاری محتوا، لطفاً صبر کنید...\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function InlineLoader({ \r\n  size = 'sm', \r\n  className = '', \r\n  text,\r\n  variant = 'spinner' \r\n}: { \r\n  size?: 'sm' | 'md' | 'lg'; \r\n  className?: string; \r\n  text?: string;\r\n  variant?: 'spinner' | 'dots' | 'pulse';\r\n}) {\r\n  const sizeClasses = {\r\n    sm: 'w-4 h-4',\r\n    md: 'w-6 h-6', \r\n    lg: 'w-8 h-8'\r\n  };\r\n\r\n  const renderSpinner = () => (\r\n    <div className={`animate-spin rounded-full border-2 border-gray-300 border-t-blue-600 dark:border-gray-600 dark:border-t-blue-400 ${sizeClasses[size]}`}></div>\r\n  );\r\n\r\n  const renderDots = () => (\r\n    <div className=\"flex gap-1\">\r\n      {[0, 1, 2].map(i => (\r\n        <div \r\n          key={i}\r\n          className={`bg-blue-600 dark:bg-blue-400 rounded-full animate-pulse ${sizeClasses[size]}`}\r\n          style={{ animationDelay: `${i * 0.2}s` }}\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  const renderPulse = () => (\r\n    <div className={`bg-blue-600 dark:bg-blue-400 rounded animate-pulse ${sizeClasses[size]}`}></div>\r\n  );\r\n\r\n  const renderLoader = () => {\r\n    switch (variant) {\r\n      case 'dots': return renderDots();\r\n      case 'pulse': return renderPulse();\r\n      default: return renderSpinner();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`flex items-center justify-center gap-2 ${className}`} role=\"status\" aria-label=\"در حال بارگذاری...\">\r\n      {renderLoader()}\r\n      {text && (\r\n        <span className=\"text-sm text-gray-600 dark:text-gray-400\">{text}</span>\r\n      )}\r\n      <span className=\"sr-only\">در حال بارگذاری...</span>\r\n    </div>\r\n  );\r\n}","import React, { useState, useMemo } from 'react';\r\nimport { ChevronUp, ChevronDown, Search, ChevronLeft, ChevronRight } from 'lucide-react';\r\nimport { cn } from '../../utils/cn';\r\n\r\nexport interface Column<T> {\r\n  key: keyof T;\r\n  title: string;\r\n  sortable?: boolean;\r\n  searchable?: boolean;\r\n  render?: (value: any, row: T, index: number) => React.ReactNode;\r\n  width?: string;\r\n  align?: 'left' | 'center' | 'right';\r\n  className?: string;\r\n}\r\n\r\nexport interface DataTableProps<T> {\r\n  data: T[];\r\n  columns: Column<T>[];\r\n  loading?: boolean;\r\n  error?: string;\r\n  itemsPerPage?: number;\r\n  onRowClick?: (row: T, index: number) => void;\r\n  className?: string;\r\n  emptyMessage?: string;\r\n  searchPlaceholder?: string;\r\n  showSearch?: boolean;\r\n  showPagination?: boolean;\r\n  striped?: boolean;\r\n  hoverable?: boolean;\r\n  compact?: boolean;\r\n}\r\n\r\nfunction DataTable<T extends Record<string, any>>({\r\n  data,\r\n  columns,\r\n  loading = false,\r\n  error,\r\n  itemsPerPage = 10,\r\n  onRowClick,\r\n  className = '',\r\n  emptyMessage = 'داده‌ای یافت نشد',\r\n  searchPlaceholder = 'جستجو...',\r\n  showSearch = true,\r\n  showPagination = true,\r\n  striped = true,\r\n  hoverable = true,\r\n  compact = false,\r\n}: DataTableProps<T>) {\r\n  const [sortField, setSortField] = useState<keyof T | null>(null);\r\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Filter and sort data\r\n  const processedData = useMemo(() => {\r\n    let filtered = [...data];\r\n\r\n    // Search filter\r\n    if (searchTerm && showSearch) {\r\n      const searchableColumns = columns.filter(col => col.searchable !== false);\r\n      filtered = data.filter((row) =>\r\n        searchableColumns.some((col) =>\r\n          String(row[col.key] || '').toLowerCase().includes(searchTerm.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n\r\n    // Sort\r\n    if (sortField) {\r\n      filtered.sort((a, b) => {\r\n        const aVal = a[sortField];\r\n        const bVal = b[sortField];\r\n        \r\n        // Handle null/undefined values\r\n        if (aVal == null && bVal == null) return 0;\r\n        if (aVal == null) return 1;\r\n        if (bVal == null) return -1;\r\n        \r\n        // Handle different data types\r\n        if (typeof aVal === 'string' && typeof bVal === 'string') {\r\n          return sortDirection === 'asc' \r\n            ? aVal.localeCompare(bVal, 'fa')\r\n            : bVal.localeCompare(aVal, 'fa');\r\n        }\r\n        \r\n        if (typeof aVal === 'number' && typeof bVal === 'number') {\r\n          return sortDirection === 'asc' ? aVal - bVal : bVal - aVal;\r\n        }\r\n        \r\n        // Fallback to string comparison\r\n        const aStr = String(aVal);\r\n        const bStr = String(bVal);\r\n        return sortDirection === 'asc' \r\n          ? aStr.localeCompare(bStr, 'fa')\r\n          : bStr.localeCompare(aStr, 'fa');\r\n      });\r\n    }\r\n\r\n    return filtered;\r\n  }, [data, columns, searchTerm, sortField, sortDirection, showSearch]);\r\n\r\n  // Pagination\r\n  const totalPages = Math.ceil(processedData.length / itemsPerPage);\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const paginatedData = showPagination \r\n    ? processedData.slice(startIndex, startIndex + itemsPerPage)\r\n    : processedData;\r\n\r\n  // Reset pagination when search changes\r\n  React.useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [searchTerm]);\r\n\r\n  const handleSort = (field: keyof T) => {\r\n    const column = columns.find(col => col.key === field);\r\n    if (!column?.sortable) return;\r\n\r\n    if (sortField === field) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortField(field);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  const getSortIcon = (field: keyof T) => {\r\n    if (sortField !== field) return null;\r\n    return sortDirection === 'asc' \r\n      ? <ChevronUp className=\"h-4 w-4\" />\r\n      : <ChevronDown className=\"h-4 w-4\" />;\r\n  };\r\n\r\n  // Loading skeleton\r\n  if (loading) {\r\n    return (\r\n      <div className={cn('space-y-4', className)}>\r\n        {showSearch && (\r\n          <div className=\"h-10 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\"></div>\r\n        )}\r\n        <div className=\"space-y-2\">\r\n          <div className=\"h-12 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\"></div>\r\n          {[...Array(5)].map((_, i) => (\r\n            <div key={i} className=\"h-10 bg-gray-100 dark:bg-gray-800 rounded animate-pulse\"></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Error state\r\n  if (error) {\r\n    return (\r\n      <div className={cn('text-center py-8', className)}>\r\n        <div className=\"text-red-600 dark:text-red-400 mb-2\">خطا در بارگذاری داده‌ها</div>\r\n        <div className=\"text-sm text-gray-500 dark:text-gray-400\">{error}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={cn('space-y-4', className)} dir=\"rtl\">\r\n      {/* Search */}\r\n      {showSearch && (\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"relative flex-1 max-w-sm\">\r\n            <Search className=\"absolute right-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder={searchPlaceholder}\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"w-full pr-10 pl-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\"\r\n            />\r\n          </div>\r\n          \r\n          {showPagination && processedData.length > 0 && (\r\n            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              نمایش {startIndex + 1}-{Math.min(startIndex + itemsPerPage, processedData.length)} از {processedData.length} مورد\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Table */}\r\n      <div className=\"overflow-x-auto rounded-lg border border-gray-200 dark:border-gray-700\">\r\n        <table className=\"w-full bg-white dark:bg-gray-800\">\r\n          <thead className=\"bg-gray-50 dark:bg-gray-900\">\r\n            <tr>\r\n              {columns.map((column) => (\r\n                <th\r\n                  key={String(column.key)}\r\n                  className={cn(\r\n                    'px-4 py-3 text-sm font-semibold text-gray-700 dark:text-gray-300',\r\n                    column.sortable && 'cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800 select-none',\r\n                    column.align === 'center' && 'text-center',\r\n                    column.align === 'left' && 'text-left',\r\n                    'text-right', // Default RTL alignment\r\n                    compact && 'px-2 py-2',\r\n                    column.className\r\n                  )}\r\n                  style={{ width: column.width }}\r\n                  onClick={() => column.sortable && handleSort(column.key)}\r\n                >\r\n                  <div className={cn(\r\n                    'flex items-center gap-2',\r\n                    column.align === 'center' && 'justify-center',\r\n                    column.align === 'left' && 'justify-start',\r\n                    'justify-end' // Default RTL alignment\r\n                  )}>\r\n                    <span>{column.title}</span>\r\n                    {column.sortable && (\r\n                      <div className=\"flex flex-col\">\r\n                        {getSortIcon(column.key) || (\r\n                          <div className=\"text-gray-400\">\r\n                            <ChevronUp className=\"h-3 w-3\" />\r\n                            <ChevronDown className=\"h-3 w-3 -mt-1\" />\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {paginatedData.length > 0 ? (\r\n              paginatedData.map((row, index) => (\r\n                <tr\r\n                  key={index}\r\n                  className={cn(\r\n                    'border-t border-gray-100 dark:border-gray-700',\r\n                    striped && index % 2 === 0 && 'bg-gray-50/50 dark:bg-gray-800/50',\r\n                    hoverable && 'hover:bg-gray-50 dark:hover:bg-gray-800',\r\n                    onRowClick && 'cursor-pointer'\r\n                  )}\r\n                  onClick={() => onRowClick?.(row, startIndex + index)}\r\n                >\r\n                  {columns.map((column) => (\r\n                    <td\r\n                      key={String(column.key)}\r\n                      className={cn(\r\n                        'px-4 py-3 text-sm text-gray-900 dark:text-gray-100',\r\n                        column.align === 'center' && 'text-center',\r\n                        column.align === 'left' && 'text-left',\r\n                        'text-right', // Default RTL alignment\r\n                        compact && 'px-2 py-2',\r\n                        column.className\r\n                      )}\r\n                    >\r\n                      {column.render \r\n                        ? column.render(row[column.key], row, startIndex + index)\r\n                        : String(row[column.key] || '')\r\n                      }\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td \r\n                  colSpan={columns.length} \r\n                  className=\"px-4 py-8 text-center text-gray-500 dark:text-gray-400\"\r\n                >\r\n                  {emptyMessage}\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      {showPagination && totalPages > 1 && (\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <button\r\n              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n              disabled={currentPage === 1}\r\n              className=\"flex items-center gap-1 px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-md disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50 dark:hover:bg-gray-700\"\r\n            >\r\n              <ChevronRight className=\"h-4 w-4\" />\r\n              قبلی\r\n            </button>\r\n            \r\n            <div className=\"flex items-center gap-1\">\r\n              {/* Page numbers */}\r\n              {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\r\n                let pageNum;\r\n                if (totalPages <= 5) {\r\n                  pageNum = i + 1;\r\n                } else if (currentPage <= 3) {\r\n                  pageNum = i + 1;\r\n                } else if (currentPage >= totalPages - 2) {\r\n                  pageNum = totalPages - 4 + i;\r\n                } else {\r\n                  pageNum = currentPage - 2 + i;\r\n                }\r\n                \r\n                return (\r\n                  <button\r\n                    key={pageNum}\r\n                    onClick={() => setCurrentPage(pageNum)}\r\n                    className={cn(\r\n                      'px-3 py-2 text-sm rounded-md',\r\n                      currentPage === pageNum\r\n                        ? 'bg-primary-600 text-white'\r\n                        : 'border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700'\r\n                    )}\r\n                  >\r\n                    {pageNum.toLocaleString('fa-IR')}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n            \r\n            <button\r\n              onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\r\n              disabled={currentPage === totalPages}\r\n              className=\"flex items-center gap-1 px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-md disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50 dark:hover:bg-gray-700\"\r\n            >\r\n              بعدی\r\n              <ChevronLeft className=\"h-4 w-4\" />\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n            صفحه {currentPage.toLocaleString('fa-IR')} از {totalPages.toLocaleString('fa-IR')}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FileText, Filter, Download, RefreshCw, AlertCircle, Search } from 'lucide-react';\r\nimport { getLogs, getSystemLogs, getTrainingLogs, getErrorLogs, type LogEntry } from '../services/monitoring';\r\nimport { PageSkeleton } from './ui/PageSkeleton';\r\nimport DataTable, { type Column } from './ui/DataTable';\r\nimport { useToast } from './ui/Toast';\r\n\r\ntype LogFilter = 'all' | 'system' | 'training' | 'error';\r\n\r\nexport function LogsPage() {\r\n  const [logs, setLogs] = useState<LogEntry[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [filter, setFilter] = useState<LogFilter>('all');\r\n  const { showToast } = useToast();\r\n\r\n  useEffect(() => {\r\n    loadLogs();\r\n  }, [filter]);\r\n\r\n  const loadLogs = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      let logsData: any;\r\n      switch (filter) {\r\n        case 'system':\r\n          logsData = await getSystemLogs(200);\r\n          break;\r\n        case 'training':\r\n          logsData = await getTrainingLogs(200);\r\n          break;\r\n        case 'error':\r\n          logsData = await getErrorLogs(200);\r\n          break;\r\n        default:\r\n          logsData = await getLogs({ limit: 200 });\r\n      }\r\n      \r\n      // Ensure logsData is always an array\r\n      const logsArray = Array.isArray(logsData) ? logsData : [];\r\n      setLogs(logsArray);\r\n    } catch (err) {\r\n      console.error('Failed to load logs:', err);\r\n      setError('خطا در بارگذاری گزارش‌ها');\r\n      setLogs([]); // Set to empty array on error\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleExport = () => {\r\n    try {\r\n      const csvContent = [\r\n        ['زمان', 'سطح', 'دسته‌بندی', 'پیام', 'جزئیات'].join(','),\r\n        ...logs.map(log => [\r\n          new Date(log.timestamp).toLocaleString('fa-IR'),\r\n          log.level,\r\n          log.category || '',\r\n          `\"${log.message.replace(/\"/g, '\"\"')}\"`,\r\n          log.metadata ? `\"${log.metadata.replace(/\"/g, '\"\"')}\"` : ''\r\n        ].join(','))\r\n      ].join('\\n');\r\n\r\n      const blob = new Blob(['\\ufeff' + csvContent], { type: 'text/csv;charset=utf-8;' });\r\n      const link = document.createElement('a');\r\n      const url = URL.createObjectURL(blob);\r\n      link.setAttribute('href', url);\r\n      link.setAttribute('download', `logs_${new Date().toISOString().split('T')[0]}.csv`);\r\n      link.style.visibility = 'hidden';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      \r\n      showToast('گزارش‌ها با موفقیت صادر شد', 'success');\r\n    } catch (err) {\r\n      console.error('Failed to export logs:', err);\r\n      showToast('خطا در صادرات گزارش‌ها', 'error');\r\n    }\r\n  };\r\n\r\n  const getLevelIcon = (level: string) => {\r\n    switch (level) {\r\n      case 'error':\r\n        return '🔴';\r\n      case 'warning':\r\n        return '🟡';\r\n      case 'info':\r\n        return '🔵';\r\n      case 'debug':\r\n        return '⚪';\r\n      default:\r\n        return '📝';\r\n    }\r\n  };\r\n\r\n  const getLevelColor = (level: string) => {\r\n    switch (level) {\r\n      case 'error':\r\n        return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\r\n      case 'warning':\r\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\r\n      case 'info':\r\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\r\n      case 'debug':\r\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\r\n    }\r\n  };\r\n\r\n  const columns: Column<LogEntry>[] = [\r\n    {\r\n      key: 'timestamp',\r\n      title: 'زمان',\r\n      sortable: true,\r\n      width: '160px',\r\n      render: (value) => (\r\n        <div className=\"text-xs font-mono\">\r\n          <div>{new Date(value).toLocaleDateString('fa-IR')}</div>\r\n          <div className=\"text-gray-500\">{new Date(value).toLocaleTimeString('fa-IR')}</div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: 'level',\r\n      title: 'سطح',\r\n      sortable: true,\r\n      width: '90px',\r\n      align: 'center',\r\n      render: (value) => (\r\n        <div className=\"flex items-center justify-center gap-1\">\r\n          <span>{getLevelIcon(value)}</span>\r\n          <span className={`px-2 py-1 rounded-full text-xs font-medium ${getLevelColor(value)}`}>\r\n            {value}\r\n          </span>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: 'category',\r\n      title: 'دسته‌بندی',\r\n      sortable: true,\r\n      width: '120px',\r\n      render: (value) => (\r\n        <span className=\"text-sm bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded text-gray-700 dark:text-gray-300\">\r\n          {value || 'عمومی'}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      key: 'message',\r\n      title: 'پیام',\r\n      render: (value, row) => (\r\n        <div className=\"space-y-1\">\r\n          <div className=\"text-sm\">{value}</div>\r\n          {row.model_name && (\r\n            <div className=\"text-xs text-blue-600 dark:text-blue-400\">\r\n              مدل: {row.model_name}\r\n            </div>\r\n          )}\r\n          {(row.epoch !== undefined || row.accuracy !== undefined) && (\r\n            <div className=\"text-xs text-gray-500 space-x-2 space-x-reverse\">\r\n              {row.epoch !== undefined && <span>Epoch: {row.epoch}</span>}\r\n              {row.accuracy !== undefined && <span>دقت: {(row.accuracy * 100).toFixed(1)}%</span>}\r\n              {row.loss !== undefined && <span>Loss: {row.loss.toFixed(4)}</span>}\r\n            </div>\r\n          )}\r\n          {row.metadata && (\r\n            <details className=\"text-xs\">\r\n              <summary className=\"cursor-pointer text-gray-500 hover:text-gray-700\">جزئیات</summary>\r\n              <pre className=\"mt-1 p-2 bg-gray-100 dark:bg-gray-700 rounded text-xs overflow-auto\">\r\n                {JSON.stringify(JSON.parse(row.metadata), null, 2)}\r\n              </pre>\r\n            </details>\r\n          )}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const filterOptions = [\r\n    { value: 'all', label: 'همه گزارش‌ها', count: logs.length },\r\n    { value: 'system', label: 'سیستم', count: logs.filter(l => l.category !== 'training').length },\r\n    { value: 'training', label: 'آموزش', count: logs.filter(l => l.category === 'training').length },\r\n    { value: 'error', label: 'خطاها', count: logs.filter(l => l.level === 'error').length },\r\n  ];\r\n\r\n  if (loading && logs.length === 0) {\r\n    return <PageSkeleton showHeader />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\" dir=\"rtl\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">گزارش‌های سیستم</h1>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n            مشاهده و تحلیل گزارش‌های سیستم و فعالیت‌های آموزش\r\n          </p>\r\n        </div>\r\n        <div className=\"flex gap-3\">\r\n          <button\r\n            onClick={handleExport}\r\n            disabled={logs.length === 0}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            <Download className=\"h-4 w-4\" />\r\n            صادرات CSV\r\n          </button>\r\n          <button\r\n            onClick={loadLogs}\r\n            disabled={loading}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors disabled:opacity-50\"\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            بروزرسانی\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Alert */}\r\n      {error && (\r\n        <div className=\"p-4 bg-red-50 dark:bg-red-950 border border-red-200 dark:border-red-800 rounded-lg\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <AlertCircle className=\"h-5 w-5 text-red-600\" />\r\n            <p className=\"text-red-800 dark:text-red-200\">{error}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Filters */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <Filter className=\"h-4 w-4 text-gray-600\" />\r\n            <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">فیلتر:</span>\r\n          </div>\r\n          <div className=\"flex gap-2\">\r\n            {filterOptions.map((option) => (\r\n              <button\r\n                key={option.value}\r\n                onClick={() => setFilter(option.value as LogFilter)}\r\n                className={`flex items-center gap-2 px-3 py-1 rounded-lg text-sm transition-colors ${\r\n                  filter === option.value\r\n                    ? 'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200'\r\n                    : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\r\n                }`}\r\n              >\r\n                <span>{option.label}</span>\r\n                <span className=\"bg-white dark:bg-gray-800 px-2 py-0.5 rounded-full text-xs\">\r\n                  {option.count.toLocaleString('fa-IR')}\r\n                </span>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Logs Table */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n        <div className=\"p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n              {filterOptions.find(f => f.value === filter)?.label || 'گزارش‌ها'}\r\n            </h2>\r\n            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              {logs.length.toLocaleString('fa-IR')} مورد\r\n            </div>\r\n          </div>\r\n          \r\n          <DataTable\r\n            data={logs}\r\n            columns={columns}\r\n            loading={loading}\r\n            error={error}\r\n            emptyMessage=\"هیچ گزارشی یافت نشد\"\r\n            searchPlaceholder=\"جستجوی گزارش‌ها...\"\r\n            itemsPerPage={25}\r\n            compact\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogsPage;"],"names":["ChevronLeft","createLucideIcon","ChevronUp","getLogs","params","searchParams","key","value","query","url","API_ENDPOINTS","data","apiRequest","error","getSystemLogs","limit","getTrainingLogs","getErrorLogs","PageSkeleton","jsxs","jsx","_","i","DataTable","columns","loading","itemsPerPage","onRowClick","className","emptyMessage","searchPlaceholder","showSearch","showPagination","striped","hoverable","compact","sortField","setSortField","useState","sortDirection","setSortDirection","currentPage","setCurrentPage","searchTerm","setSearchTerm","processedData","useMemo","filtered","searchableColumns","col","row","a","b","aVal","bVal","aStr","bStr","totalPages","startIndex","paginatedData","React","handleSort","field","column","getSortIcon","ChevronDown","cn","Search","e","index","ChevronRight","pageNum","LogsPage","logs","setLogs","setLoading","setError","filter","setFilter","showToast","useToast","useEffect","loadLogs","logsData","logsArray","err","handleExport","csvContent","log","blob","link","getLevelIcon","level","getLevelColor","filterOptions","l","Download","RefreshCw","AlertCircle","Filter","option","_a","f"],"mappings":"kNAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,EAAcC,EAAiB,cAAe,CAClD,CAAC,OAAQ,CAAE,EAAG,iBAAkB,IAAK,QAAQ,CAAE,CACjD,CAAC,ECXD;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMC,EAAYD,EAAiB,YAAa,CAAC,CAAC,OAAQ,CAAE,EAAG,iBAAkB,IAAK,QAAQ,CAAE,CAAC,CAAC,EC2GlG,eAAsBE,EAAQC,EAKN,CACtB,GAAI,CACF,MAAMC,EAAe,IAAI,gBACrBD,GACF,OAAO,QAAQA,CAAM,EAAE,QAAQ,CAAC,CAACE,EAAKC,CAAK,IAAM,CAC3CA,IAAU,QACZF,EAAa,OAAOC,EAAK,OAAOC,CAAK,CAAC,CAE1C,CAAC,EAGH,MAAMC,EAAQH,EAAa,SAAA,EACrBI,EAAMD,EAAQ,GAAGE,EAAc,IAAI,IAAIF,CAAK,GAAKE,EAAc,KAG/DC,EAAO,MADI,MAAMC,EAAWH,CAAG,GACT,KAAA,EAG5B,GAAIE,GAAQ,OAAOA,GAAS,SAAU,CAEpC,GAAI,MAAM,QAAQA,EAAK,IAAI,EACzB,OAAOA,EAAK,KAGd,GAAI,MAAM,QAAQA,CAAI,EACpB,OAAOA,CAEX,CAGA,MAAO,CAAA,CACT,OAASE,EAAO,CACd,eAAQ,MAAM,wBAAyBA,CAAK,EACrC,CAAA,CACT,CACF,CAEA,eAAsBC,EAAcC,EAAgB,IAA0B,CAC5E,OAAOZ,EAAQ,CAAE,KAAM,SAAU,MAAAY,EAAO,CAC1C,CAEA,eAAsBC,GAAgBD,EAAgB,IAA0B,CAC9E,OAAOZ,EAAQ,CAAE,KAAM,WAAY,MAAAY,EAAO,CAC5C,CAEA,eAAsBE,GAAaF,EAAgB,GAAyB,CAC1E,OAAOZ,EAAQ,CAAE,MAAO,QAAS,MAAAY,EAAO,CAC1C,CCtKO,SAASG,IAAe,CAC7B,cACG,MAAA,CAAI,UAAU,0BAA0B,KAAK,SAAS,aAAW,qBAEhE,SAAA,CAAAC,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,gDAAA,CAAiD,EAChEA,EAAAA,IAAC,MAAA,CAAI,UAAU,gDAAA,CAAiD,CAAA,EAClE,EAGAA,EAAAA,IAAC,OAAI,UAAU,uDACZ,eAAM,KAAK,CAAE,OAAQ,CAAA,CAAG,EAAE,IAAI,CAACC,EAAGC,IACjCF,EAAAA,IAAC,MAAA,CAAsB,UAAU,uFAC/B,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,mDAAA,CAAoD,EACnED,EAAAA,KAAC,MAAA,CAAI,UAAU,wBACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,gDAAA,CAAiD,EAChEA,EAAAA,IAAC,MAAA,CAAI,UAAU,gDAAA,CAAiD,CAAA,CAAA,CAClE,CAAA,CAAA,CACF,CAAA,EAPQ,QAAQE,CAAC,EAQnB,CACD,EACH,QAGC,MAAA,CAAI,UAAU,uDACZ,SAAA,MAAM,KAAK,CAAE,OAAQ,CAAA,CAAG,EAAE,IAAI,CAACD,EAAGC,IACjCH,EAAAA,KAAC,MAAA,CAAyB,UAAU,iGAClC,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,gDAAA,CAAiD,EAChEA,EAAAA,IAAC,MAAA,CAAI,UAAU,gDAAA,CAAiD,CAAA,EAClE,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,8CAAA,CAA+C,EAC9DA,EAAAA,IAAC,MAAA,CAAI,UAAU,oDAAA,CAAqD,CAAA,CAAA,CACtE,CAAA,EACF,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,uDACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,wDAAA,CAAyD,EACxEA,EAAAA,IAAC,MAAA,CAAI,UAAU,wDAAA,CAAyD,CAAA,EAC1E,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,uDACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,wDAAA,CAAyD,EACxEA,EAAAA,IAAC,MAAA,CAAI,UAAU,wDAAA,CAAyD,CAAA,CAAA,CAC1E,CAAA,EACF,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,aACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,kDAAA,CAAmD,EAClEA,EAAAA,IAAC,MAAA,CAAI,UAAU,gDAAA,CAAiD,CAAA,CAAA,CAClE,CAAA,CAAA,EAxBQ,WAAWE,CAAC,EAyBtB,CACD,CAAA,CACH,EAGAF,EAAAA,IAAC,OAAI,UAAU,UAAU,YAAU,SAAS,cAAY,OAAO,SAAA,0CAAA,CAE/D,CAAA,EACF,CAEJ,CChCA,SAASG,GAAyC,CAChD,KAAAZ,EACA,QAAAa,EACA,QAAAC,EAAU,GACV,MAAAZ,EACA,aAAAa,EAAe,GACf,WAAAC,EACA,UAAAC,EAAY,GACZ,aAAAC,EAAe,mBACf,kBAAAC,EAAoB,WACpB,WAAAC,EAAa,GACb,eAAAC,EAAiB,GACjB,QAAAC,EAAU,GACV,UAAAC,EAAY,GACZ,QAAAC,EAAU,EACZ,EAAsB,CACpB,KAAM,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAyB,IAAI,EACzD,CAACC,EAAeC,CAAgB,EAAIF,EAAAA,SAAyB,KAAK,EAClE,CAACG,EAAaC,CAAc,EAAIJ,EAAAA,SAAS,CAAC,EAC1C,CAACK,EAAYC,CAAa,EAAIN,EAAAA,SAAS,EAAE,EAGzCO,EAAgBC,EAAAA,QAAQ,IAAM,CAClC,IAAIC,EAAW,CAAC,GAAGpC,CAAI,EAGvB,GAAIgC,GAAcZ,EAAY,CAC5B,MAAMiB,EAAoBxB,EAAQ,OAAOyB,GAAOA,EAAI,aAAe,EAAK,EACxEF,EAAWpC,EAAK,OAAQuC,GACtBF,EAAkB,KAAMC,GACtB,OAAOC,EAAID,EAAI,GAAG,GAAK,EAAE,EAAE,YAAA,EAAc,SAASN,EAAW,aAAa,CAAA,CAC5E,CAEJ,CAGA,OAAIP,GACFW,EAAS,KAAK,CAACI,EAAGC,IAAM,CACtB,MAAMC,EAAOF,EAAEf,CAAS,EAClBkB,EAAOF,EAAEhB,CAAS,EAGxB,GAAIiB,GAAQ,MAAQC,GAAQ,KAAM,MAAO,GACzC,GAAID,GAAQ,KAAM,MAAO,GACzB,GAAIC,GAAQ,KAAM,MAAO,GAGzB,GAAI,OAAOD,GAAS,UAAY,OAAOC,GAAS,SAC9C,OAAOf,IAAkB,MACrBc,EAAK,cAAcC,EAAM,IAAI,EAC7BA,EAAK,cAAcD,EAAM,IAAI,EAGnC,GAAI,OAAOA,GAAS,UAAY,OAAOC,GAAS,SAC9C,OAAOf,IAAkB,MAAQc,EAAOC,EAAOA,EAAOD,EAIxD,MAAME,EAAO,OAAOF,CAAI,EAClBG,EAAO,OAAOF,CAAI,EACxB,OAAOf,IAAkB,MACrBgB,EAAK,cAAcC,EAAM,IAAI,EAC7BA,EAAK,cAAcD,EAAM,IAAI,CACnC,CAAC,EAGIR,CACT,EAAG,CAACpC,EAAMa,EAASmB,EAAYP,EAAWG,EAAeR,CAAU,CAAC,EAG9D0B,EAAa,KAAK,KAAKZ,EAAc,OAASnB,CAAY,EAC1DgC,GAAcjB,EAAc,GAAKf,EACjCiC,EAAgB3B,EAClBa,EAAc,MAAMa,EAAYA,EAAahC,CAAY,EACzDmB,EAGJe,EAAM,UAAU,IAAM,CACpBlB,EAAe,CAAC,CAClB,EAAG,CAACC,CAAU,CAAC,EAEf,MAAMkB,EAAcC,GAAmB,CACrC,MAAMC,EAASvC,EAAQ,KAAKyB,GAAOA,EAAI,MAAQa,CAAK,EAC/CC,GAAA,MAAAA,EAAQ,WAET3B,IAAc0B,EAChBtB,EAAiBD,IAAkB,MAAQ,OAAS,KAAK,GAEzDF,EAAayB,CAAK,EAClBtB,EAAiB,KAAK,GAE1B,EAEMwB,EAAeF,GACf1B,IAAc0B,EAAc,KACzBvB,IAAkB,MACrBnB,MAAClB,EAAA,CAAU,UAAU,UAAU,EAC/BkB,EAAAA,IAAC6C,EAAA,CAAY,UAAU,SAAA,CAAU,EAIvC,OAAIxC,SAEC,MAAA,CAAI,UAAWyC,EAAG,YAAatC,CAAS,EACtC,SAAA,CAAAG,GACCX,EAAAA,IAAC,MAAA,CAAI,UAAU,yDAAA,CAA0D,EAE3ED,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,yDAAA,CAA0D,EACxE,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACC,EAAGC,IACrBF,EAAAA,IAAC,MAAA,CAAY,UAAU,yDAAA,EAAbE,CAAuE,CAClF,CAAA,CAAA,CACH,CAAA,EACF,EAKAT,SAEC,MAAA,CAAI,UAAWqD,EAAG,mBAAoBtC,CAAS,EAC9C,SAAA,CAAAR,EAAAA,IAAC,MAAA,CAAI,UAAU,sCAAsC,SAAA,0BAAuB,EAC5EA,EAAAA,IAAC,MAAA,CAAI,UAAU,2CAA4C,SAAAP,CAAA,CAAM,CAAA,EACnE,EAKFM,OAAC,OAAI,UAAW+C,EAAG,YAAatC,CAAS,EAAG,IAAI,MAE7C,SAAA,CAAAG,GACCZ,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,2BACb,SAAA,CAAAC,EAAAA,IAAC+C,EAAA,CAAO,UAAU,iEAAA,CAAkE,EACpF/C,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,YAAaU,EACb,MAAOa,EACP,SAAWyB,GAAMxB,EAAcwB,EAAE,OAAO,KAAK,EAC7C,UAAU,6KAAA,CAAA,CACZ,EACF,EAECpC,GAAkBa,EAAc,OAAS,GACxC1B,EAAAA,KAAC,MAAA,CAAI,UAAU,2CAA2C,SAAA,CAAA,SACjDuC,EAAa,EAAE,IAAE,KAAK,IAAIA,EAAahC,EAAcmB,EAAc,MAAM,EAAE,OAAKA,EAAc,OAAO,OAAA,CAAA,CAC9G,CAAA,EAEJ,QAID,MAAA,CAAI,UAAU,yEACb,SAAA1B,EAAAA,KAAC,QAAA,CAAM,UAAU,mCACf,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,8BACf,SAAAA,EAAAA,IAAC,MACE,SAAAI,EAAQ,IAAKuC,GACZ3C,EAAAA,IAAC,KAAA,CAEC,UAAW8C,EACT,mEACAH,EAAO,UAAY,sEACnBA,EAAO,QAAU,UAAY,cAC7BA,EAAO,QAAU,QAAU,YAC3B,aACA5B,GAAW,YACX4B,EAAO,SAAA,EAET,MAAO,CAAE,MAAOA,EAAO,KAAA,EACvB,QAAS,IAAMA,EAAO,UAAYF,EAAWE,EAAO,GAAG,EAEvD,SAAA5C,EAAAA,KAAC,OAAI,UAAW+C,EACd,0BACAH,EAAO,QAAU,UAAY,iBAC7BA,EAAO,QAAU,QAAU,gBAC3B,aAAA,EAEA,SAAA,CAAA3C,EAAAA,IAAC,OAAA,CAAM,WAAO,KAAA,CAAM,EACnB2C,EAAO,UACN3C,MAAC,MAAA,CAAI,UAAU,gBACZ,SAAA4C,EAAYD,EAAO,GAAG,GACrB5C,OAAC,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAClB,EAAA,CAAU,UAAU,SAAA,CAAU,EAC/BkB,EAAAA,IAAC6C,EAAA,CAAY,UAAU,eAAA,CAAgB,CAAA,CAAA,CACzC,CAAA,CAEJ,CAAA,CAAA,CAEJ,CAAA,EA9BK,OAAOF,EAAO,GAAG,CAAA,CAgCzB,EACH,CAAA,CACF,EACA3C,EAAAA,IAAC,SACE,SAAAuC,EAAc,OAAS,EACtBA,EAAc,IAAI,CAACT,EAAKmB,IACtBjD,EAAAA,IAAC,KAAA,CAEC,UAAW8C,EACT,gDACAjC,GAAWoC,EAAQ,IAAM,GAAK,oCAC9BnC,GAAa,0CACbP,GAAc,gBAAA,EAEhB,QAAS,IAAMA,GAAA,YAAAA,EAAauB,EAAKQ,EAAaW,GAE7C,SAAA7C,EAAQ,IAAKuC,GACZ3C,EAAAA,IAAC,KAAA,CAEC,UAAW8C,EACT,qDACAH,EAAO,QAAU,UAAY,cAC7BA,EAAO,QAAU,QAAU,YAC3B,aACA5B,GAAW,YACX4B,EAAO,SAAA,EAGR,WAAO,OACJA,EAAO,OAAOb,EAAIa,EAAO,GAAG,EAAGb,EAAKQ,EAAaW,CAAK,EACtD,OAAOnB,EAAIa,EAAO,GAAG,GAAK,EAAE,CAAA,EAZ3B,OAAOA,EAAO,GAAG,CAAA,CAezB,CAAA,EA1BIM,CAAA,CA4BR,EAEDjD,EAAAA,IAAC,KAAA,CACC,SAAAA,EAAAA,IAAC,KAAA,CACC,QAASI,EAAQ,OACjB,UAAU,yDAET,SAAAK,CAAA,CAAA,EAEL,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,EAGCG,GAAkByB,EAAa,GAC9BtC,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAA,EAAAA,KAAC,SAAA,CACC,QAAS,IAAMuB,EAAe,KAAK,IAAI,EAAGD,EAAc,CAAC,CAAC,EAC1D,SAAUA,IAAgB,EAC1B,UAAU,2LAEV,SAAA,CAAArB,EAAAA,IAACkD,EAAA,CAAa,UAAU,SAAA,CAAU,EAAE,MAAA,CAAA,CAAA,QAIrC,MAAA,CAAI,UAAU,0BAEZ,SAAA,MAAM,KAAK,CAAE,OAAQ,KAAK,IAAI,EAAGb,CAAU,CAAA,EAAK,CAACpC,EAAGC,IAAM,CACzD,IAAIiD,EACJ,OAAId,GAAc,GAEPhB,GAAe,EADxB8B,EAAUjD,EAAI,EAGLmB,GAAegB,EAAa,EACrCc,EAAUd,EAAa,EAAInC,EAE3BiD,EAAU9B,EAAc,EAAInB,EAI5BF,EAAAA,IAAC,SAAA,CAEC,QAAS,IAAMsB,EAAe6B,CAAO,EACrC,UAAWL,EACT,+BACAzB,IAAgB8B,EACZ,4BACA,qFAAA,EAGL,SAAAA,EAAQ,eAAe,OAAO,CAAA,EAT1BA,CAAA,CAYX,CAAC,CAAA,CACH,EAEApD,EAAAA,KAAC,SAAA,CACC,QAAS,IAAMuB,EAAe,KAAK,IAAIe,EAAYhB,EAAc,CAAC,CAAC,EACnE,SAAUA,IAAgBgB,EAC1B,UAAU,2LACX,SAAA,CAAA,OAECrC,EAAAA,IAACpB,EAAA,CAAY,UAAU,SAAA,CAAU,CAAA,CAAA,CAAA,CACnC,EACF,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,2CAA2C,SAAA,CAAA,QAClDsB,EAAY,eAAe,OAAO,EAAE,OAAKgB,EAAW,eAAe,OAAO,CAAA,CAAA,CAClF,CAAA,CAAA,CACF,CAAA,EAEJ,CAEJ,CCpUO,SAASe,IAAW,OACzB,KAAM,CAACC,EAAMC,CAAO,EAAIpC,EAAAA,SAAqB,CAAA,CAAE,EACzC,CAACb,EAASkD,CAAU,EAAIrC,EAAAA,SAAS,EAAI,EACrC,CAACzB,EAAO+D,CAAQ,EAAItC,EAAAA,SAAwB,IAAI,EAChD,CAACuC,EAAQC,CAAS,EAAIxC,EAAAA,SAAoB,KAAK,EAC/C,CAAE,UAAAyC,CAAA,EAAcC,EAAA,EAEtBC,EAAAA,UAAU,IAAM,CACdC,EAAA,CACF,EAAG,CAACL,CAAM,CAAC,EAEX,MAAMK,EAAW,SAAY,CAC3B,GAAI,CACFP,EAAW,EAAI,EACfC,EAAS,IAAI,EAEb,IAAIO,EACJ,OAAQN,EAAA,CACN,IAAK,SACHM,EAAW,MAAMrE,EAAc,GAAG,EAClC,MACF,IAAK,WACHqE,EAAW,MAAMnE,GAAgB,GAAG,EACpC,MACF,IAAK,QACHmE,EAAW,MAAMlE,GAAa,GAAG,EACjC,MACF,QACEkE,EAAW,MAAMhF,EAAQ,CAAE,MAAO,IAAK,CAAA,CAI3C,MAAMiF,EAAY,MAAM,QAAQD,CAAQ,EAAIA,EAAW,CAAA,EACvDT,EAAQU,CAAS,CACnB,OAASC,EAAK,CACZ,QAAQ,MAAM,uBAAwBA,CAAG,EACzCT,EAAS,0BAA0B,EACnCF,EAAQ,CAAA,CAAE,CACZ,QAAA,CACEC,EAAW,EAAK,CAClB,CACF,EAEMW,EAAe,IAAM,CACzB,GAAI,CACF,MAAMC,EAAa,CACjB,CAAC,OAAQ,MAAO,YAAa,OAAQ,QAAQ,EAAE,KAAK,GAAG,EACvD,GAAGd,EAAK,IAAIe,GAAO,CACjB,IAAI,KAAKA,EAAI,SAAS,EAAE,eAAe,OAAO,EAC9CA,EAAI,MACJA,EAAI,UAAY,GAChB,IAAIA,EAAI,QAAQ,QAAQ,KAAM,IAAI,CAAC,IACnCA,EAAI,SAAW,IAAIA,EAAI,SAAS,QAAQ,KAAM,IAAI,CAAC,IAAM,EAAA,EACzD,KAAK,GAAG,CAAC,CAAA,EACX,KAAK;AAAA,CAAI,EAELC,EAAO,IAAI,KAAK,CAAC,SAAWF,CAAU,EAAG,CAAE,KAAM,0BAA2B,EAC5EG,EAAO,SAAS,cAAc,GAAG,EACjCjF,EAAM,IAAI,gBAAgBgF,CAAI,EACpCC,EAAK,aAAa,OAAQjF,CAAG,EAC7BiF,EAAK,aAAa,WAAY,QAAQ,IAAI,KAAA,EAAO,YAAA,EAAc,MAAM,GAAG,EAAE,CAAC,CAAC,MAAM,EAClFA,EAAK,MAAM,WAAa,SACxB,SAAS,KAAK,YAAYA,CAAI,EAC9BA,EAAK,MAAA,EACL,SAAS,KAAK,YAAYA,CAAI,EAE9BX,EAAU,6BAA8B,SAAS,CACnD,OAASM,EAAK,CACZ,QAAQ,MAAM,yBAA0BA,CAAG,EAC3CN,EAAU,yBAA0B,OAAO,CAC7C,CACF,EAEMY,EAAgBC,GAAkB,CACtC,OAAQA,EAAA,CACN,IAAK,QACH,MAAO,KACT,IAAK,UACH,MAAO,KACT,IAAK,OACH,MAAO,KACT,IAAK,QACH,MAAO,IACT,QACE,MAAO,IAAA,CAEb,EAEMC,EAAiBD,GAAkB,CACvC,OAAQA,EAAA,CACN,IAAK,QACH,MAAO,4DACT,IAAK,UACH,MAAO,wEACT,IAAK,OACH,MAAO,gEACT,IAAK,QACH,MAAO,gEACT,QACE,MAAO,+DAAA,CAEb,EAEMpE,EAA8B,CAClC,CACE,IAAK,YACL,MAAO,OACP,SAAU,GACV,MAAO,QACP,OAASjB,GACPY,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,MAAC,OAAK,SAAA,IAAI,KAAKb,CAAK,EAAE,mBAAmB,OAAO,EAAE,EAClDa,EAAAA,IAAC,MAAA,CAAI,UAAU,gBAAiB,SAAA,IAAI,KAAKb,CAAK,EAAE,mBAAmB,OAAO,CAAA,CAAE,CAAA,CAAA,CAC9E,CAAA,EAGJ,CACE,IAAK,QACL,MAAO,MACP,SAAU,GACV,MAAO,OACP,MAAO,SACP,OAASA,GACPY,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAM,SAAAuE,EAAapF,CAAK,CAAA,CAAE,EAC3Ba,EAAAA,IAAC,QAAK,UAAW,8CAA8CyE,EAActF,CAAK,CAAC,GAChF,SAAAA,CAAA,CACH,CAAA,CAAA,CACF,CAAA,EAGJ,CACE,IAAK,WACL,MAAO,YACP,SAAU,GACV,MAAO,QACP,OAASA,GACPa,EAAAA,IAAC,QAAK,UAAU,0FACb,YAAS,OAAA,CACZ,CAAA,EAGJ,CACE,IAAK,UACL,MAAO,OACP,OAAQ,CAACb,EAAO2C,IACd/B,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,UAAW,SAAAb,EAAM,EAC/B2C,EAAI,YACH/B,OAAC,MAAA,CAAI,UAAU,2CAA2C,SAAA,CAAA,QAClD+B,EAAI,UAAA,EACZ,GAEAA,EAAI,QAAU,QAAaA,EAAI,WAAa,SAC5C/B,EAAAA,KAAC,MAAA,CAAI,UAAU,kDACZ,SAAA,CAAA+B,EAAI,QAAU,QAAa/B,EAAAA,KAAC,OAAA,CAAK,SAAA,CAAA,UAAQ+B,EAAI,KAAA,EAAM,EACnDA,EAAI,WAAa,QAAa/B,EAAAA,KAAC,OAAA,CAAK,SAAA,CAAA,SAAO+B,EAAI,SAAW,KAAK,QAAQ,CAAC,EAAE,GAAA,EAAC,EAC3EA,EAAI,OAAS,QAAa/B,EAAAA,KAAC,OAAA,CAAK,SAAA,CAAA,SAAO+B,EAAI,KAAK,QAAQ,CAAC,CAAA,CAAA,CAAE,CAAA,EAC9D,EAEDA,EAAI,UACH/B,OAAC,UAAA,CAAQ,UAAU,UACjB,SAAA,CAAAC,EAAAA,IAAC,UAAA,CAAQ,UAAU,mDAAmD,SAAA,SAAM,EAC5EA,EAAAA,IAAC,MAAA,CAAI,UAAU,sEACZ,SAAA,KAAK,UAAU,KAAK,MAAM8B,EAAI,QAAQ,EAAG,KAAM,CAAC,CAAA,CACnD,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAEJ,EAGI4C,EAAgB,CACpB,CAAE,MAAO,MAAO,MAAO,eAAgB,MAAOrB,EAAK,MAAA,EACnD,CAAE,MAAO,SAAU,MAAO,QAAS,MAAOA,EAAK,OAAOsB,GAAKA,EAAE,WAAa,UAAU,EAAE,MAAA,EACtF,CAAE,MAAO,WAAY,MAAO,QAAS,MAAOtB,EAAK,OAAOsB,GAAKA,EAAE,WAAa,UAAU,EAAE,MAAA,EACxF,CAAE,MAAO,QAAS,MAAO,QAAS,MAAOtB,EAAK,OAAOsB,GAAKA,EAAE,QAAU,OAAO,EAAE,MAAA,CAAO,EAGxF,OAAItE,GAAWgD,EAAK,SAAW,EACtBrD,EAAAA,IAACF,GAAA,CAAa,WAAU,EAAA,CAAC,EAIhCC,EAAAA,KAAC,MAAA,CAAI,UAAU,YAAY,IAAI,MAE7B,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,mDAAmD,SAAA,kBAAe,EAChFA,EAAAA,IAAC,IAAA,CAAE,UAAU,wCAAwC,SAAA,mDAAA,CAErD,CAAA,EACF,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,aACb,SAAA,CAAAA,EAAAA,KAAC,SAAA,CACC,QAASmE,EACT,SAAUb,EAAK,SAAW,EAC1B,UAAU,4JAEV,SAAA,CAAArD,EAAAA,IAAC4E,EAAA,CAAS,UAAU,SAAA,CAAU,EAAE,YAAA,CAAA,CAAA,EAGlC7E,EAAAA,KAAC,SAAA,CACC,QAAS+D,EACT,SAAUzD,EACV,UAAU,4LAEV,SAAA,CAAAL,MAAC6E,GAAU,UAAW,WAAWxE,EAAU,eAAiB,EAAE,GAAI,EAAE,WAAA,CAAA,CAAA,CAEtE,CAAA,CACF,CAAA,EACF,EAGCZ,SACE,MAAA,CAAI,UAAU,qFACb,SAAAM,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAC,EAAAA,IAAC8E,EAAA,CAAY,UAAU,sBAAA,CAAuB,EAC9C9E,EAAAA,IAAC,IAAA,CAAE,UAAU,iCAAkC,SAAAP,CAAA,CAAM,CAAA,CAAA,CACvD,CAAA,CACF,QAID,MAAA,CAAI,UAAU,uFACb,SAAAM,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAC,EAAAA,IAAC+E,EAAA,CAAO,UAAU,uBAAA,CAAwB,EAC1C/E,EAAAA,IAAC,OAAA,CAAK,UAAU,uDAAuD,SAAA,QAAA,CAAM,CAAA,EAC/E,QACC,MAAA,CAAI,UAAU,aACZ,SAAA0E,EAAc,IAAKM,GAClBjF,EAAAA,KAAC,SAAA,CAEC,QAAS,IAAM2D,EAAUsB,EAAO,KAAkB,EAClD,UAAW,0EACTvB,IAAWuB,EAAO,MACd,gEACA,wGACN,GAEA,SAAA,CAAAhF,EAAAA,IAAC,OAAA,CAAM,WAAO,KAAA,CAAM,EACpBA,MAAC,QAAK,UAAU,6DACb,WAAO,MAAM,eAAe,OAAO,CAAA,CACtC,CAAA,CAAA,EAXKgF,EAAO,KAAA,CAaf,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CACF,QAGC,MAAA,CAAI,UAAU,mFACb,SAAAjF,EAAAA,KAAC,MAAA,CAAI,UAAU,MACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,sDACX,WAAAiF,EAAAP,EAAc,KAAKQ,GAAKA,EAAE,QAAUzB,CAAM,IAA1C,YAAAwB,EAA6C,QAAS,WACzD,EACAlF,EAAAA,KAAC,MAAA,CAAI,UAAU,2CACZ,SAAA,CAAAsD,EAAK,OAAO,eAAe,OAAO,EAAE,OAAA,CAAA,CACvC,CAAA,EACF,EAEArD,EAAAA,IAACG,GAAA,CACC,KAAMkD,EACN,QAAAjD,EACA,QAAAC,EACA,MAAAZ,EACA,aAAa,sBACb,kBAAkB,qBAClB,aAAc,GACd,QAAO,EAAA,CAAA,CACT,CAAA,CACF,CAAA,CACF,CAAA,EACF,CAEJ","x_google_ignoreList":[0,1]}
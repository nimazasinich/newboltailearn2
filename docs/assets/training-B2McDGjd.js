import{a as t,j as e,b as r,A as a}from"./index-Iv_AuQn0.js";const o={async getModels(o=1,n=10){try{const s=new URLSearchParams({page:o.toString(),limit:n.toString()}),i=await t(e(r,`${a.MODELS}?${s.toString()}`));return await i.json()}catch(s){return console.error("Get models failed:",s),{models:[],pagination:{page:o,limit:n,total:0,pages:0}}}},async getModel(o){try{const n=await t(e(r,a.MODEL_BY_ID(o.toString())));return await n.json()}catch(n){return console.error("Get model failed:",n),{id:o,name:"مدل پیش‌فرض",type:"persian-bert",status:"idle",accuracy:0,loss:0,epochs:0,current_epoch:0,dataset_id:"",config:{},createdAt:(new Date).toISOString(),updatedAt:(new Date).toISOString()}}},async createModel(o){try{const n=await t(e(r,a.MODELS),{method:"POST",body:JSON.stringify(o)});return await n.json()}catch(n){return console.error("Create model failed:",n),{id:Date.now(),name:o.name,type:o.type,status:"idle",accuracy:0,loss:0,epochs:0,current_epoch:0,datasetId:o.datasetId||"",config:o.config||{},createdAt:(new Date).toISOString(),updatedAt:(new Date).toISOString()}}},async updateModel(a,o){try{const n=await t(e(r,`/models/${a}`),{method:"PUT",body:JSON.stringify(o)});return{success:n.ok,message:n.ok?"Model updated successfully":"Failed to update model"}}catch(n){throw console.error("Update model failed:",n),new Error("خطا در به‌روزرسانی مدل")}},async deleteModel(a){try{const o=await t(e(r,`/models/${a}`),{method:"DELETE"});return{success:o.ok,message:o.ok?"Model deleted successfully":"Failed to delete model"}}catch(o){throw console.error("Delete model failed:",o),new Error("خطا در حذف مدل")}},async startTraining(o,n){try{const s=await t(e(r,a.MODEL_TRAIN(o.toString())),{method:"POST",body:JSON.stringify(n)});return await s.json()}catch(s){return console.error("Start training failed:",s),{success:!0,message:"آموزش در حالت آفلاین شروع شد",sessionId:`session_${Date.now()}`,config:n}}},async pauseTraining(a){try{return await t(e(r,`/models/${a}/pause`),{method:"POST"})}catch(o){throw console.error("Pause training failed:",o),new Error("خطا در توقف آموزش")}},async resumeTraining(a,o){try{return await t(e(r,`/models/${a}/resume`),{method:"POST",body:JSON.stringify(o||{})})}catch(n){throw console.error("Resume training failed:",n),new Error("خطا در ادامه آموزش")}},async getTrainingSessions(a){try{const o=a?`/models/${a}/sessions`:"/training/sessions";return await t(e(r,o))}catch(o){throw console.error("Get training sessions failed:",o),new Error("خطا در دریافت جلسات آموزش")}},async getTrainingSession(a){try{return await t(e(r,`/training/sessions/${a}`))}catch(o){throw console.error("Get training session failed:",o),new Error("خطا در دریافت جلسه آموزش")}},async getModelLogs(a,o=1,n=50){try{const s=new URLSearchParams({page:o.toString(),limit:n.toString()});return await t(e(r,`/models/${a}/logs?${s.toString()}`))}catch(s){throw console.error("Get model logs failed:",s),new Error("خطا در دریافت لاگ‌های مدل")}},async getModelCheckpoints(a){try{return await t(e(r,`/models/${a}/checkpoints`))}catch(o){throw console.error("Get model checkpoints failed:",o),new Error("خطا در دریافت checkpoint های مدل")}},async startOptimization(a,o={}){try{return await t(e(r,`/models/${a}/optimize`),{method:"POST",body:JSON.stringify(o)})}catch(n){throw console.error("Start optimization failed:",n),new Error("خطا در شروع بهینه‌سازی")}},async loadModel(a,o){try{return await t(e(r,`/models/${a}/load`),{method:"POST",body:JSON.stringify({checkpointPath:o})})}catch(n){throw console.error("Load model failed:",n),new Error("خطا در بارگذاری مدل")}},async getTrainingStats(){try{return await t(e(r,"/training/stats"))}catch(a){return console.error("Get training stats failed:",a),{totalModels:0,activeTraining:0,completedTraining:0,averageAccuracy:0,totalTrainingHours:0}}},async getDatasets(){try{const a=await t(e(r,"/datasets"));return await a.json()}catch(a){return console.error("Get datasets failed:",a),{datasets:[]}}},async stopTraining(a){try{const o=await t(e(r,`/training/${a}/stop`),{method:"POST"});return await o.json()}catch(o){return console.error("Stop training failed:",o),{success:!1,message:"Failed to stop training"}}}};export{o as t};
//# sourceMappingURL=training-B2McDGjd.js.map

{
  "dev": "cross-env NODE_NO_WARNINGS=1 vite --config vite.config.ts",
  "build": "cross-env NODE_ENV=production vite build --config vite.config.ts",
  "build:gh": "cross-env VITE_BASE_PATH=/newboltailearn/ vite build --config vite.config.ts && node scripts/make-404.js",
  "preview": "vite preview --config vite.config.ts",
  "start": "NODE_ENV=production PORT=8000 node server/main.js",
  "start:dev": "cross-env NODE_ENV=development PORT=8080 node server/main.js",
  "start:production": "cross-env NODE_ENV=production PORT=8080 node server/main.js",
  "start:enhanced": "node simple-server.js",
  "start:real": "node integrated-server.js",
  "start:sophisticated": "node server/index.js",
  "start:new": "cross-env NODE_ENV=development PORT=8080 npx ts-node server/main.ts",
  "test:enhanced": "node test-enhanced-app.js",
  "start:safe": "npm run check:permissions && npm run render:verify-abi && npm run start",
  "preinstall": "node -e \"console.log('Node:', process.version, 'ABI:', process.versions.modules)\"",
  "postinstall": "npm run verify:better-sqlite3 || npm run rebuild:better-sqlite3",
  "verify:better-sqlite3": "node -e \"try{require('better-sqlite3');console.log('✅ better-sqlite3 loaded successfully')}catch(e){console.error('❌ better-sqlite3 failed:',e.message);process.exit(1)}\"",
  "rebuild:better-sqlite3": "npm rebuild better-sqlite3 --build-from-source && npm run verify:better-sqlite3",
  "health-check": "node -e \"require('better-sqlite3'); console.log('Health: OK')\"",
  "render:clean-build": "rm -rf node_modules package-lock.json && npm cache clean --force && npm ci",
  "render:verify-abi": "node -e \"console.log('✅ Node:', process.version, 'ABI:', process.versions.modules); try{require('better-sqlite3'); console.log('✅ better-sqlite3: OK')}catch(e){console.error('❌ better-sqlite3:', e.message); process.exit(1)}\"",
  "check:permissions": "node -e \"const fs = require('fs'); const path = './data'; try { fs.mkdirSync(path, {recursive: true}); fs.accessSync(path, fs.constants.W_OK); console.log('✅ Write permissions OK'); } catch(e) { console.error('❌ Permission error:', e.message); process.exit(1); }\"",
  "lint": "eslint . --report-unused-disable-directives --max-warnings 0",
  "type-check": "tsc --noEmit --project tsconfig.app.json",
  "typecheck": "tsc -p tsconfig.json --noEmit",
  "compile-server": "echo 'Server compilation not needed - using JS files directly'",
  "test": "vitest run",
  "test:unit": "vitest run tests/unit",
  "test:integration": "vitest run tests/integration",
  "test:e2e": "playwright test",
  "test:coverage": "vitest run --coverage",
  "audit:routes": "ts-node --transpile-only scripts/audit-routes.ts",
  "db:backup": "node scripts/backup-db.js",
  "deploy:validate": "./scripts/validate-deployment.sh",
  "deploy:monitor": "node scripts/monitor-deployment.js",
  "security:check": "npm audit --omit=dev --audit-level=high || true",
  "security:check:strict": "npm audit --omit=dev --audit-level=moderate",
  "docker:build": "docker build -t persian-legal-ai .",
  "docker:run": "docker run -d --name persian-legal-ai -p 8080:8080 persian-legal-ai",
  "docker:stop": "docker stop persian-legal-ai && docker rm persian-legal-ai",
  "docker:logs": "docker logs -f persian-legal-ai",
  "docker:compose:up": "docker-compose up -d",
  "docker:compose:down": "docker-compose down",
  "docker:compose:logs": "docker-compose logs -f",
  "docker:compose:dev": "docker-compose -f docker-compose.dev.yml up -d",
  "docker:compose:dev:down": "docker-compose -f docker-compose.dev.yml down",
  "docker:clean": "docker system prune -f",
  "start:enterprise": "cross-env NODE_ENV=production node server/main.js",
  "dev:enterprise": "cross-env NODE_ENV=development nodemon server/main.js",
  "test:enterprise": "npm run test && npm run test:e2e",
  "validate:enterprise": "node scripts/validate-deployment.js",
  "reliability:status": "curl -s http://localhost:8080/api/reliability/status | jq",
  "reliability:health": "curl -s http://localhost:8080/api/reliability/health | jq",
  "reliability:test": "node scripts/test-reliability-systems.js",
  "reliability:monitor": "node scripts/monitor-reliability.js"
}
